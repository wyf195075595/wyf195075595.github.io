<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>myBlog</title>
  
  <subtitle>白小纯</subtitle>
  <link href="https://wangyf1024.gitee.io/atom.xml" rel="self"/>
  
  <link href="https://wangyf1024.gitee.io/"/>
  <updated>2022-09-23T12:08:17.319Z</updated>
  <id>https://wangyf1024.gitee.io/</id>
  
  <author>
    <name>王不留行</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>插件合集</title>
    <link href="https://wangyf1024.gitee.io/2022/09/23/programming/vue/plugins/"/>
    <id>https://wangyf1024.gitee.io/2022/09/23/programming/vue/plugins/</id>
    <published>2022-09-23T00:23:10.000Z</published>
    <updated>2022-09-23T12:08:17.319Z</updated>
    
    <content type="html"><![CDATA[<h3 id="1、VueUse"><a href="#1、VueUse" class="headerlink" title="1、VueUse"></a>1、VueUse</h3><blockquote><p>​    VueUse 是 <strong>Anthony Fu  大佬</strong>的一个开源项目，它为Vue的开发者提供了大量用于 Vue2 和Vue3 的基本 <strong>Composition API</strong> 实用工具函数。</p><p>它有几十个用于常见开发人员用例的解决方案，如跟踪<code>ref</code>更改，检测元素可见性，简化常见Vue模式，键盘/鼠标输入等。 这是真正节省开发时间的好方法，因为我们不必自己亲手添加所有这些标准功能，拿来主义，用就对了(再次感谢大佬的付出)。</p></blockquote><span id="more"></span><blockquote><p>我喜欢VueUse库，因为它在决定提供哪些实用工具时真正把开发者放在第一位，而且它是一个维护良好的库，因为它与Vue的当前版本保持同步。</p><ul><li><p>Animation(动画) - 包含易于使用的过渡、超时和计时功能</p></li><li><p>Browser (浏览器) - 可以用于不同的屏幕控件、剪贴板、首选项等等</p></li><li><p>Component (组件) - 为不同的组件方法提供简写</p></li><li><p>Sensors (传感器)- 用来监听不同的DOM事件、输入事件和网络事件</p></li><li><p>State (状态) - 管理用户状态（全局，本地存储，会话存储）</p></li><li><p>Utility （实用方法）–不同的实用方法，如<code>getters</code>、<code>conditionals</code>、<code>ref synchronization</code>等。</p></li><li><p>Watch –更高级的观察器类型，如可暂停的观察器、放弃的观察器和条件观察器</p></li><li><p>其它 - 事件、WebSockets和 Web workers  的不同类型的功能</p><p>  VueUse 的最大特点之一是，它只用一个包就能兼容 Vue2 和 Vue3!</p></li></ul></blockquote><h3 id="2、vue-print-nb"><a href="#2、vue-print-nb" class="headerlink" title="2、vue-print-nb"></a>2、vue-print-nb</h3><blockquote><p>用于代替浏览器的打印</p></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">//安装</span><br><span class="line">npm i vue-print-nb</span><br><span class="line"></span><br><span class="line">// 注册</span><br><span class="line">import Print from &#x27;vue-print-nb&#x27;</span><br><span class="line">Vue.use(Print);</span><br><span class="line"></span><br><span class="line">//使用, 指令方式 id为要打印元素的id</span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">el-row</span> <span class="attr">type</span>=<span class="string">&quot;flex&quot;</span> <span class="attr">justify</span>=<span class="string">&quot;end&quot;</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">v-print</span>=<span class="string">&quot;printObj&quot;</span> <span class="attr">size</span>=<span class="string">&quot;small&quot;</span> <span class="attr">type</span>=<span class="string">&quot;primary&quot;</span>&gt;</span>打印<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">el-row</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">data</span>: <span class="keyword">function</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">return</span> &#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">printObj</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">                    <span class="attr">id</span>: <span class="string">&#x27;myPrint&#x27;</span></span></span><br><span class="line"><span class="language-javascript">                &#125;</span></span><br><span class="line"><span class="language-javascript">            &#125;</span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">    &#125;)</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="3、qrcode"><a href="#3、qrcode" class="headerlink" title="3、qrcode"></a>3、qrcode</h3><blockquote><p>用于生成二维码。如果内容是地址URL 就跳转到该地址。如果是其他内容就直接展示内容</p></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">npm i qrcode</span><br><span class="line"></span><br><span class="line">//局部引入使用</span><br><span class="line">QrCode.toCanvas(dom, info)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">// 页面使用</span><br><span class="line"> <span class="tag">&lt;<span class="name">el-dialog</span> <span class="attr">title</span>=<span class="string">&quot;二维码&quot;</span> </span></span><br><span class="line"><span class="tag"> <span class="attr">:visible.sync</span>=<span class="string">&quot;showCodeDialog&quot;</span> </span></span><br><span class="line"><span class="tag">@<span class="attr">opened</span>=<span class="string">&quot;showQrCode&quot;</span> </span></span><br><span class="line"><span class="tag">@<span class="attr">close</span>=<span class="string">&quot;imgUrl=&#x27;&#x27;&quot;</span></span></span><br><span class="line"><span class="tag"> &gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">el-row</span> <span class="attr">type</span>=<span class="string">&quot;flex&quot;</span> <span class="attr">justify</span>=<span class="string">&quot;center&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">canvas</span> <span class="attr">ref</span>=<span class="string">&quot;myCanvas&quot;</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">el-row</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">el-dialog</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> &gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"> <span class="title function_">showQrCode</span>(<span class="params">url</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="comment">// url存在的情况下 才弹出层</span></span></span><br><span class="line"><span class="language-javascript">      <span class="keyword">if</span> (url) &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="variable language_">this</span>.<span class="property">showCodeDialog</span> = <span class="literal">true</span> <span class="comment">// 数据更新了 但是我的弹层会立刻出现吗 ？页面的渲染是异步的！！！！</span></span></span><br><span class="line"><span class="language-javascript">        <span class="comment">// 有一个方法可以在上一次数据更新完毕，页面渲染完毕之后</span></span></span><br><span class="line"><span class="language-javascript">        <span class="variable language_">this</span>.$nextTick(<span class="function">() =&gt;</span> &#123;</span></span><br><span class="line"><span class="language-javascript">          <span class="comment">// 此时可以确认已经有ref对象了</span></span></span><br><span class="line"><span class="language-javascript">          <span class="title class_">QrCode</span>.<span class="title function_">toCanvas</span>(<span class="variable language_">this</span>.<span class="property">$refs</span>.<span class="property">myCanvas</span>, url) <span class="comment">// 将地址转化成二维码</span></span></span><br><span class="line"><span class="language-javascript">          <span class="comment">// 如果转化的二维码后面信息 是一个地址的话 就会跳转到该地址 如果不是地址就会显示内容</span></span></span><br><span class="line"><span class="language-javascript">        &#125;)</span></span><br><span class="line"><span class="language-javascript">      &#125; <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="variable language_">this</span>.<span class="property">$message</span>.<span class="title function_">warning</span>(<span class="string">&#x27;该用户还未上传头像&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript">      &#125;</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="mitt"><a href="#mitt" class="headerlink" title="mitt"></a>mitt</h3><blockquote><p>vue3中取消了 this.$on, this.$off, this.$emit 事件，推荐使用外部插件 mitt库.来实现发布订阅功能</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 安装</span></span><br><span class="line">npm install mitt</span><br><span class="line"></span><br><span class="line"><span class="comment">// 引入</span></span><br><span class="line">mybus.<span class="property">js</span></span><br><span class="line"><span class="keyword">import</span> mitt <span class="keyword">from</span> <span class="string">&#x27;mitt&#x27;</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title function_">mitt</span>() <span class="comment">// 此为公用实例</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 使用</span></span><br><span class="line"><span class="keyword">import</span> mybus <span class="keyword">from</span> <span class="string">&#x27;./mybus.js&#x27;</span></span><br><span class="line"></span><br><span class="line">发送</span><br><span class="line">mybus.<span class="title function_">emit</span>(<span class="string">&#x27;自定义事件名称&#x27;</span>,<span class="string">&#x27;数据&#x27;</span>);</span><br><span class="line"></span><br><span class="line">接收</span><br><span class="line">mybus.<span class="title function_">on</span>(<span class="string">&#x27;自定义事件名称&#x27;</span>,<span class="function"><span class="params">data</span>=&gt;</span>&#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(data);<span class="comment">//接收到的数据</span></span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">移除</span><br><span class="line">mybus.<span class="title function_">off</span>(<span class="string">&#x27;自定义事件名称&#x27;</span>);</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="vue-countTo"><a href="#vue-countTo" class="headerlink" title="vue-countTo"></a>vue-countTo</h3><blockquote><p>实现数字滚动效果的无依赖轻量级插件</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">安装</span><br><span class="line">npm i vue-count-to</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="attr">eg</span>:</span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;<span class="name">countTo</span> <span class="attr">:startVal</span>=<span class="string">&#x27;startVal&#x27;</span> <span class="attr">:endVal</span>=<span class="string">&#x27;endVal&#x27;</span> <span class="attr">:duration</span>=<span class="string">&#x27;3000&#x27;</span>&gt;</span><span class="tag">&lt;/<span class="name">countTo</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  <span class="keyword">import</span> countTo <span class="keyword">from</span> <span class="string">&#x27;vue-count-to&#x27;</span>;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  <span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="attr">components</span>: &#123; countTo &#125;,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    data () &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="keyword">return</span> &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="attr">startVal</span>: <span class="number">0</span>,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="attr">endVal</span>: <span class="number">2017</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure><p>文档</p><table><thead><tr><th>Property</th><th>Description</th><th>type</th><th>default</th></tr></thead><tbody><tr><td>startVal</td><td>开始值</td><td>Number</td><td>0</td></tr><tr><td>endVal</td><td>结束值</td><td>Number</td><td>2017</td></tr><tr><td>duration</td><td>持续时间，以毫秒为单位</td><td>Number</td><td>3000</td></tr><tr><td>autoplay</td><td>自动播放</td><td>Boolean</td><td>true</td></tr><tr><td>decimals</td><td>要显示的小数位数</td><td>Number</td><td>0</td></tr><tr><td>decimal</td><td>十进制分割</td><td>String</td><td>.</td></tr><tr><td>separator</td><td>分隔符</td><td>String</td><td>,</td></tr><tr><td>prefix</td><td>前缀</td><td>String</td><td>‘’</td></tr><tr><td>suffix</td><td>后缀</td><td>String</td><td>‘’</td></tr><tr><td>useEasing</td><td>使用缓和功能</td><td>Boolean</td><td>true</td></tr><tr><td>easingFn</td><td>缓和回调</td><td>Function</td><td>—</td></tr></tbody></table><p>** 注意：当autoplay：true时，它将在startVal或endVal更改时自动启动**</p><p>回调钩子函数</p><table><thead><tr><th align="center">Function Name</th><th align="center">Description</th></tr></thead><tbody><tr><td align="center">mountedCallback</td><td align="center">挂载以后返回回调</td></tr><tr><td align="center">start</td><td align="center">开始计数</td></tr><tr><td align="center">pause</td><td align="center">暂停计数</td></tr><tr><td align="center">reset</td><td align="center">重置countTo</td></tr></tbody></table><h3 id="vuex-persist"><a href="#vuex-persist" class="headerlink" title="vuex-persist"></a>vuex-persist</h3><blockquote><p>在vue项目中使用vuex本地持久化能更方便我们对数据的管理，不需要写localStorage或cookie等集合方法,统一用store来管理全局数据。</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">eg1</span>:</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Vue</span> <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Vuex</span> <span class="keyword">from</span> <span class="string">&#x27;vuex&#x27;</span></span><br><span class="line"><span class="keyword">import</span> floodPrevention <span class="keyword">from</span> <span class="string">&#x27;@/store/floodPrevention/floodPrevention&#x27;</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">VuexPersistence</span> <span class="keyword">from</span> <span class="string">&#x27;vuex-persist&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="title class_">Vue</span>.<span class="title function_">use</span>(<span class="title class_">Vuex</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> store = <span class="keyword">new</span> <span class="title class_">Vuex</span>.<span class="title class_">Store</span>(&#123;</span><br><span class="line">    <span class="attr">state</span>: &#123;</span><br><span class="line">        <span class="attr">userInfo</span>: &#123;</span><br><span class="line">            <span class="attr">name</span>: <span class="string">&#x27;xxx&#x27;</span>,</span><br><span class="line">            <span class="attr">depId</span>: <span class="string">&#x27;51515645165&#x27;</span>,</span><br><span class="line">            <span class="attr">sex</span>: <span class="string">&#x27;男&#x27;</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">mutations</span>: &#123;</span><br><span class="line">        <span class="title function_">setUserInfo</span>(<span class="params">state, payload</span>) &#123;</span><br><span class="line">            state.<span class="property">userInfo</span> = &#123;</span><br><span class="line">                ...state.<span class="property">userInfo</span>,</span><br><span class="line">                ...payload</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">actions</span>: &#123;</span><br><span class="line">        </span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">getters</span>: &#123;</span><br><span class="line">        <span class="attr">getUserInfo</span>: <span class="function">(<span class="params">state</span>) =&gt;</span> state.<span class="property">userInfo</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">modules</span>: &#123;</span><br><span class="line">        floodPrevention</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">plugins</span>: [</span><br><span class="line">        <span class="keyword">new</span> <span class="title class_">VuexPersistence</span>(&#123;</span><br><span class="line">            <span class="attr">storage</span>: <span class="variable language_">window</span>.<span class="property">sessionStorage</span></span><br><span class="line">        &#125;)</span><br><span class="line">    ]</span><br><span class="line">&#125;)</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> store</span><br></pre></td></tr></table></figure><p>属性文档</p><table><thead><tr><th align="left">属性</th><th align="left">类型</th><th align="left">描述</th></tr></thead><tbody><tr><td align="left">key</td><td align="left">string</td><td align="left">将状态存储在存储中的键。默认: ‘vuex’</td></tr><tr><td align="left">storage</td><td align="left">Storage (Web API)</td><td align="left">可传localStorage, sessionStorage, localforage 或者你自定义的存储对象. 接口必须要有get和set. <strong>默认是: window.localStorage</strong></td></tr><tr><td align="left">saveState</td><td align="left">function (key, state[, storage])</td><td align="left">如果不使用存储，这个自定义函数将保存状态保存为持久性。</td></tr><tr><td align="left">restoreState</td><td align="left">function (key[, storage]) =&gt; state</td><td align="left">如果不使用存储，这个自定义函数处理从存储中检索状态</td></tr><tr><td align="left">reducer</td><td align="left">function (state) =&gt; object</td><td align="left">将状态减少到只需要保存的值。默认情况下，保存整个状态。</td></tr><tr><td align="left">filter</td><td align="left">function (mutation) =&gt; boolean</td><td align="left">突变筛选。看mutation.type并返回true，只有那些你想坚持写被触发。所有突变的默认返回值为true。</td></tr><tr><td align="left">modules</td><td align="left">string[]</td><td align="left">要持久化的模块列表。</td></tr></tbody></table><blockquote><p>同类型插件 vuex-persistedstate 但是21年作者就不维护了</p></blockquote><h3 id="Vuetify"><a href="#Vuetify" class="headerlink" title="Vuetify"></a>Vuetify</h3><blockquote><p>一个前端基于 Material Design 的UI库</p></blockquote><h3 id="NUXTJS"><a href="#NUXTJS" class="headerlink" title="NUXTJS"></a>NUXTJS</h3><blockquote><p>vuejs+nodejs 的最佳实践</p></blockquote><h3 id="vuepress"><a href="#vuepress" class="headerlink" title="vuepress"></a>vuepress</h3><blockquote><p>方便文档编写，支持markdown语法</p></blockquote><h3 id="vue-mate"><a href="#vue-mate" class="headerlink" title="vue-mate"></a>vue-mate</h3><blockquote><p>基于vue2.0插件，用于管理html head标签，支持ssr. 头部信息双向绑定便于管理</p></blockquote><h3 id="vue-charts-js"><a href="#vue-charts-js" class="headerlink" title="vue-charts .js"></a>vue-charts .js</h3><blockquote><p>vue 图表</p></blockquote><h3 id="vue-grid-layout"><a href="#vue-grid-layout" class="headerlink" title="vue grid layout"></a>vue grid layout</h3><blockquote><p>通用vuejs栅格布局系统<br>1、可拖拽<br>2、调整大小<br>3、可序列化，还原布局<br>4、自动化 RTL 支持<br>5、支持响应式</p></blockquote><h3 id="vue-draggable"><a href="#vue-draggable" class="headerlink" title="vue draggable"></a>vue draggable</h3><blockquote><p>优秀的vue拖拽组件</p></blockquote><h3 id="vee-validate"><a href="#vee-validate" class="headerlink" title="vee validate"></a>vee validate</h3><blockquote><p>数据类型验证</p></blockquote><h3 id="vue-Toastification"><a href="#vue-Toastification" class="headerlink" title="vue Toastification"></a>vue Toastification</h3><blockquote><p>轻量级通知组件</p></blockquote><h3 id="vue-Tour"><a href="#vue-Tour" class="headerlink" title="vue Tour"></a>vue Tour</h3><blockquote><p>轻巧简单的可自定义新手指引插件</p></blockquote><h3 id="Trois-语法为three-vue3库"><a href="#Trois-语法为three-vue3库" class="headerlink" title="Trois (语法为three) vue3库"></a>Trois (语法为three) vue3库</h3><h3 id="vue-presistedstate"><a href="#vue-presistedstate" class="headerlink" title="vue-presistedstate"></a>vue-presistedstate</h3><blockquote><p>在页面重新加载之间保持并补充您的<a href="https://vuex.vuejs.org/">Vuex</a>状态。此项目已经不维护了</p></blockquote><p>用法：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; createStore &#125; <span class="keyword">from</span> <span class="string">&quot;vuex&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> createPersistedState <span class="keyword">from</span> <span class="string">&quot;vuex-persistedstate&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> store = <span class="title function_">createStore</span>(&#123;</span><br><span class="line">  <span class="comment">// ...</span></span><br><span class="line">  <span class="attr">plugins</span>: [<span class="title function_">createPersistedState</span>()],</span><br><span class="line">&#125;);</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>Vux 模块示例</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* module.js */</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> dataStore = &#123;</span><br><span class="line">  <span class="attr">state</span>: &#123;</span><br><span class="line">    <span class="attr">data</span>: []</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* store.js */</span></span><br><span class="line"><span class="keyword">import</span> &#123; dataStore &#125; <span class="keyword">from</span> <span class="string">&#x27;./module&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> dataState = <span class="title function_">createPersistedState</span>(&#123;</span><br><span class="line">  <span class="attr">paths</span>: [<span class="string">&#x27;data&#x27;</span>]</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">new</span> <span class="title class_">Vuex</span>.<span class="title class_">Store</span>(&#123;</span><br><span class="line">  <span class="attr">modules</span>: &#123;</span><br><span class="line">    dataStore</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">plugins</span>: [dataState]</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h3 id="axios"><a href="#axios" class="headerlink" title="axios"></a>axios</h3><blockquote><p>ajax 请求工具，<a href="http://www.axios-js.com/zh-cn/docs/#axios-create-config">看文档</a></p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">HttpRequest</span> &#123;</span><br><span class="line">    <span class="title function_">constructor</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">baseURL</span> = process.<span class="property">env</span>.<span class="property">NODE_ENV</span> === <span class="string">&#x27;development&#x27;</span>? <span class="string">&#x27;https://www.fastmock.site&#x27;</span>: <span class="string">&#x27;https://www.fastmock.site&#x27;</span></span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">timeout</span> = <span class="number">15000</span></span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">queue</span> = <span class="number">0</span> <span class="comment">// 请求队列</span></span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">cache</span> = []</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="title function_">setInterceptor</span>(<span class="params">instance, url</span>) &#123;</span><br><span class="line">        instance.<span class="property">interceptors</span>.<span class="property">request</span>.<span class="title function_">use</span>(<span class="function">(<span class="params">config</span>)=&gt;</span> &#123;</span><br><span class="line">            <span class="comment">// 开启 loading</span></span><br><span class="line">            <span class="keyword">if</span>(!<span class="variable language_">this</span>.<span class="property">queue</span>) &#123;</span><br><span class="line">                <span class="comment">// open loading</span></span><br><span class="line">                context.<span class="property">$bus</span>.<span class="title function_">emit</span>(<span class="string">&#x27;showLoading&#x27;</span>)</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 统一增加token</span></span><br><span class="line">            <span class="comment">// const token = store.getters[&#x27;user/token&#x27;]</span></span><br><span class="line">            config.<span class="property">headers</span>[<span class="string">&#x27;token&#x27;</span>] = <span class="string">&#x27;tokentest&#x27;</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">// 记录请求的取消函数</span></span><br><span class="line">            <span class="keyword">let</span> <span class="title class_">CancelToken</span> =  axios.<span class="property">CancelToken</span></span><br><span class="line">            config.<span class="property">cancelToken</span> = <span class="keyword">new</span> <span class="title class_">CancelToken</span>(<span class="function">(<span class="params">c</span>)=&gt;</span> &#123; <span class="comment">// 存入 vux,组件销毁时执行</span></span><br><span class="line">                <span class="comment">// c 就是取消请求的token</span></span><br><span class="line">                <span class="variable language_">this</span>.<span class="property">cache</span>.<span class="title function_">push</span>(c)</span><br><span class="line">            &#125;)</span><br><span class="line">            <span class="variable language_">this</span>.<span class="property">queue</span>++</span><br><span class="line"></span><br><span class="line">            <span class="keyword">return</span> config</span><br><span class="line">        &#125;, <span class="function">(<span class="params">err</span>)=&gt;</span> &#123;</span><br><span class="line">            <span class="comment">// 响应就从队列删除 </span></span><br><span class="line">            <span class="variable language_">this</span>.<span class="property">queue</span>--</span><br><span class="line">            <span class="keyword">if</span>(<span class="variable language_">this</span>.<span class="property">queue</span> == <span class="number">0</span>) &#123;</span><br><span class="line">                <span class="comment">// close loading</span></span><br><span class="line">                context.<span class="property">$bus</span>.<span class="title function_">emit</span>(<span class="string">&#x27;closeLoading&#x27;</span>)</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="variable language_">this</span>.<span class="property">$message</span>.<span class="title function_">error</span>(err);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">return</span> <span class="title class_">Promise</span>.<span class="title function_">reject</span>(err)</span><br><span class="line">        &#125;)</span><br><span class="line">        instance.<span class="property">interceptors</span>.<span class="property">response</span>.<span class="title function_">use</span>(<span class="function">(<span class="params">res</span>)=&gt;</span> &#123;</span><br><span class="line">            <span class="variable language_">this</span>.<span class="property">queue</span>--</span><br><span class="line">            <span class="keyword">if</span>(<span class="variable language_">this</span>.<span class="property">queue</span> == <span class="number">0</span>) &#123;</span><br><span class="line">                <span class="comment">// close loading</span></span><br><span class="line">                context.<span class="property">$bus</span>.<span class="title function_">emit</span>(<span class="string">&#x27;closeLoading&#x27;</span>)</span><br><span class="line">                <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;关闭 loading&#x27;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">// 这里判断要依据后端返回格式而定</span></span><br><span class="line">            <span class="keyword">if</span>(res.<span class="property">data</span>.<span class="property">code</span> == <span class="number">400200</span>) &#123;</span><br><span class="line">                <span class="keyword">return</span> res.<span class="property">data</span></span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="title class_">Promise</span>.<span class="title function_">reject</span>(res.<span class="property">msg</span>)</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;, <span class="function">(<span class="params">err</span>)=&gt;</span> &#123;</span><br><span class="line">            <span class="variable language_">this</span>.<span class="property">queue</span>--</span><br><span class="line">            <span class="keyword">if</span>(<span class="variable language_">this</span>.<span class="property">queue</span> == <span class="number">0</span>) &#123;</span><br><span class="line">                <span class="comment">// close loading</span></span><br><span class="line">                context.<span class="property">$bus</span>.<span class="title function_">emit</span>(<span class="string">&#x27;closeLoading&#x27;</span>)</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="variable language_">this</span>.<span class="property">$message</span>.<span class="title function_">error</span>(err);</span><br><span class="line">            <span class="keyword">return</span> <span class="title class_">Promise</span>.<span class="title function_">reject</span>(err)</span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="title function_">request</span>(<span class="params">options</span>) &#123;</span><br><span class="line">        <span class="keyword">let</span> instance = axios.<span class="title function_">create</span>()</span><br><span class="line">        <span class="keyword">let</span> config = &#123;</span><br><span class="line">            <span class="attr">baseURL</span>: <span class="variable language_">this</span>.<span class="property">baseURL</span>,</span><br><span class="line">            <span class="attr">timeout</span>: <span class="variable language_">this</span>.<span class="property">timeout</span>,</span><br><span class="line">            <span class="comment">// validateStatus: function (status) &#123;</span></span><br><span class="line">            <span class="comment">//     console.log(&#x27;当前请求状态:&#x27;, status);</span></span><br><span class="line">            <span class="comment">//     return status &gt;= 200 &amp;&amp; status &lt; 300; // default</span></span><br><span class="line">            <span class="comment">// &#125;,</span></span><br><span class="line">            ...options</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="title function_">setInterceptor</span>(instance, config.<span class="property">url</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="title function_">instance</span>(config) <span class="comment">// 返回 promise 对象</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="title function_">get</span>(<span class="params">url, data</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="title function_">request</span>(&#123;</span><br><span class="line">            url,</span><br><span class="line">            <span class="attr">method</span>: <span class="string">&#x27;get&#x27;</span>,</span><br><span class="line">            <span class="attr">params</span>: data</span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="title function_">post</span>(<span class="params">url, data, config = &#123;&#125;</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="title function_">request</span>(&#123;</span><br><span class="line">            url,</span><br><span class="line">            <span class="attr">method</span>: <span class="string">&#x27;post&#x27;</span>,</span><br><span class="line">            data,</span><br><span class="line">            ...config</span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="eventemitter3"><a href="#eventemitter3" class="headerlink" title="eventemitter3"></a>eventemitter3</h3><blockquote><p>EventEmitter3 是一个高性能的 EventEmitter。它已经针对各种代码路径进行了微优化，使其成为 Node.js 和浏览器可用的最快 EventEmitter 之一。该模块的 API 与 Node.js 默认附带的 EventEmitter 兼容，但有一些细微差别：</p><ul><li>域支持已被删除。</li><li><code>throw</code>当您发出<code>error</code>事件并且没有人在听时，我们不会出错。</li><li>和事件已被删除<code>newListener</code>，<code>removeListener</code>因为它们仅在一些不常见的用例中有用。</li><li>、<code>setMaxListeners</code>和方法不可用 <code>getMaxListeners</code>。<code>prependListener``prependOnceListener</code></li><li>支持事件的自定义上下文，因此无需使用<code>fn.bind</code>.</li><li>该<code>removeListener</code>方法删除所有匹配的侦听器，而不仅仅是第一个。</li></ul><p>它是现有 EventEmitters 的替代品，但速度更快。免费表演，谁不想呢？EventEmitter 是用 EcmaScript 3 编写的，因此它可以在您需要支持的最旧的浏览器和节点版本中工作。</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install --save eventemitter3</span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> <span class="variable constant_">EE</span> = <span class="keyword">new</span> <span class="title class_">EventEmitter</span>()</span><br><span class="line">  , context = &#123; <span class="attr">foo</span>: <span class="string">&#x27;bar&#x27;</span> &#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">emitted</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">this</span> === context); <span class="comment">// true</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable constant_">EE</span>.<span class="title function_">once</span>(<span class="string">&#x27;event-name&#x27;</span>, emitted, context);</span><br><span class="line"><span class="variable constant_">EE</span>.<span class="title function_">on</span>(<span class="string">&#x27;another-event&#x27;</span>, emitted, context);</span><br><span class="line"><span class="variable constant_">EE</span>.<span class="title function_">removeListener</span>(<span class="string">&#x27;another-event&#x27;</span>, emitted, context);</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>EventEmitter在其原型上添加了如下方法：</p><blockquote><p>eventNames、listeners、listenerCount、emit、on / addListener、once、off / removeListener、removeAllListeners</p></blockquote><p><img src="https://raw.githubusercontent.com/wyf195075595/images/main/blog/v2-1d23d0fcb5c423d69da86237d6201af7_r.jpg" alt="preview"></p><h3 id="amfe-flexible"><a href="#amfe-flexible" class="headerlink" title="amfe-flexible"></a>amfe-flexible</h3><blockquote><p>手淘 rem适配方案，为html、body添加font-size，窗口调整时候重新设置font-size</p></blockquote><h3 id="postcss-pxtorem"><a href="#postcss-pxtorem" class="headerlink" title="postcss-pxtorem"></a>postcss-pxtorem</h3><blockquote><p>通过postcss-pxtorem来实现自动渲染px至rem的开发与生产工作<br>而不需要再手动计算。将px转换为px</p></blockquote><h3 id="GSAP（GreenSock）"><a href="#GSAP（GreenSock）" class="headerlink" title="GSAP（GreenSock）"></a><a href="https://greensock.com/">GSAP（GreenSock）</a></h3><blockquote><p>最健全的web动画库之一</p></blockquote><h3 id="ESLint"><a href="#ESLint" class="headerlink" title="ESLint"></a>ESLint</h3><blockquote><p>代码规范检查，建议使用文件配置得方式来编写配置。</p><p>安装 ESlint 后，通过 eslint –init  初始化配置文件</p></blockquote><p>配置规则如下：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">rules</span>: &#123;</span><br><span class="line"><span class="string">&quot;规则名&quot;</span>: [规则值, 规则配置]</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 规则值： &quot;off&quot;/0 表示关闭， “warn&quot;/1 表示警告，&quot;error&quot;/2 表示错误</span></span><br></pre></td></tr></table></figure><p>官方提供的可选检测规则多达200条，我们可以从中筛选出自己需要的规则。还可以通过配置项文件得 extends 字段来启用官方推的或者开源的规则集。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line"><span class="string">&quot;extends&quot;</span>: <span class="string">&quot;eslint:recommended&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>如果在某些特殊场景中，需要有针对性地避开某些检测规则（而不是对整个工程禁用某项检测），则可以使用下面的语法在源代码中进行注释：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 禁止检查这一行</span></span><br><span class="line"><span class="title function_">alert</span>(<span class="string">&#x27;foo&#x27;</span>); <span class="comment">/* eslint-disable-line no-alert*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 禁止检查下一行</span></span><br><span class="line"><span class="comment">/*eslint-disable-next no-alert*/</span></span><br><span class="line"><span class="title function_">alert</span>(<span class="string">&#x27;foo&#x27;</span>)</span><br></pre></td></tr></table></figure><blockquote><p>ESLint和Prettier是非常好的搭档，尽管有时候因为配置的问题可能会在检查项上出现冲突，这种时候根据实际要求关闭其中一个的检查项即可。总之，ESLint更倾向于发现和修复语言本身相关的漏洞或风险，而Prettier关注的则是格式和排版风格方面的一致性，两者各司其职。</p></blockquote><h3 id="Requirejs-与-模块化推演"><a href="#Requirejs-与-模块化推演" class="headerlink" title="Requirejs 与 模块化推演"></a>Requirejs 与 模块化推演</h3><ul><li><p>代码隔离</p><p>  第一代模块化解决方案，立即执行函数（IIFE）</p>  <figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">;(<span class="keyword">function</span>(<span class="params">win, <span class="literal">undefined</span></span>)&#123;</span><br><span class="line">    ...</span><br><span class="line">&#125;)(<span class="variable language_">window</span>)</span><br></pre></td></tr></table></figure><p>  我们知道“undefined”在JavaScript语言中是一个关键字，不仅如此，它还是全局对象的一个属性，它的值被定义为“undefined”。在低版本的浏览器中，它是可以被赋值修改的，一旦有人恶意修改了“undefined”这个属性的值，那么你写在代码里的所有针对“undefined”的判断逻辑就会混乱。由于立即执行函数中的最后一个形参没有对应于任何值，因此其会被自动赋值为真正的“undefined”，以避免上述风险。</p></li></ul><h3 id="Loadsh-js"><a href="#Loadsh-js" class="headerlink" title="Loadsh.js"></a>Loadsh.js</h3><blockquote><p>它是一个具有一致性、模块化且高性能的JavaScript实用工具库</p></blockquote><h3 id="静态类型检查"><a href="#静态类型检查" class="headerlink" title="静态类型检查"></a>静态类型检查</h3><blockquote><p>两种流行的静态类型检查方案Flow.js和TypeScript的使用方法。 js 是一门动态类型语言，只有在运行时才会发现错误，而静态类型检查可以帮我们避免很多不必要得错误和快速定位错误</p></blockquote><p>Flow.js</p><p>优势无侵入性是Flow.js最有吸引力的特点之一，当你希望尝试它时，可以轻松地将它引入项目中，当你的项目不再需要使用它时，使用“babel”或“flow-remove-types”命令可以非常轻松地将类型信息从源代码中去除，进而得到一份纯净的源代码，它就像一个自带卸载程序的辅助工具。相较于TypeScript的学习曲线，Flow.js的上手难度几乎低到可以忽略不计。无论如何，建议尝试使用它，将它作为TypeScript或是Java的预备知识也是非常好的。</p><p>TypeScript </p><p>学习成本相对较高，但是功能更加强大。</p><h3 id="Ramda-js"><a href="#Ramda-js" class="headerlink" title="Ramda.js"></a>Ramda.js</h3><p>为开发者提供了许多实用的工具原子函数</p>]]></content>
    
    
    <summary type="html">&lt;h3 id=&quot;1、VueUse&quot;&gt;&lt;a href=&quot;#1、VueUse&quot; class=&quot;headerlink&quot; title=&quot;1、VueUse&quot;&gt;&lt;/a&gt;1、VueUse&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;​    VueUse 是 &lt;strong&gt;Anthony Fu  大佬&lt;/strong&gt;的一个开源项目，它为Vue的开发者提供了大量用于 Vue2 和Vue3 的基本 &lt;strong&gt;Composition API&lt;/strong&gt; 实用工具函数。&lt;/p&gt;
&lt;p&gt;它有几十个用于常见开发人员用例的解决方案，如跟踪&lt;code&gt;ref&lt;/code&gt;更改，检测元素可见性，简化常见Vue模式，键盘/鼠标输入等。 这是真正节省开发时间的好方法，因为我们不必自己亲手添加所有这些标准功能，拿来主义，用就对了(再次感谢大佬的付出)。&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="vue" scheme="https://wangyf1024.gitee.io/categories/vue/"/>
    
    
    <category term="vue" scheme="https://wangyf1024.gitee.io/tags/vue/"/>
    
  </entry>
  
  <entry>
    <title>react 插件</title>
    <link href="https://wangyf1024.gitee.io/2022/08/05/programming/react/react%E5%AE%9E%E8%B7%B5%E4%B8%8E%E4%BC%98%E5%8C%96/"/>
    <id>https://wangyf1024.gitee.io/2022/08/05/programming/react/react%E5%AE%9E%E8%B7%B5%E4%B8%8E%E4%BC%98%E5%8C%96/</id>
    <published>2022-08-05T03:19:28.000Z</published>
    <updated>2022-08-12T07:43:16.621Z</updated>
    
    <content type="html"><![CDATA[<h3 id="react-PureComponent-与-React-Component-区别"><a href="#react-PureComponent-与-React-Component-区别" class="headerlink" title="react.PureComponent 与 React.Component 区别"></a>react.PureComponent 与 React.Component 区别</h3><blockquote><p>唯一的区别在于 Rect.Component 没有实现 shouldComponentUpdate() *<strong>一个不太常用的生命周期方法*</strong>, 而 React.PureComponent 中以浅层对比 prop 和 state 的方式来实现了该函数。</p></blockquote><blockquote><p><strong>注意</strong></p><p>React.PureComponent 中的 <strong>shouldComponentUpdate()</strong> 仅作<strong>对象的浅层比较</strong>。如果对象中包含复杂的数据结构，则可能无法检查到深层的差别，产生错误的对比结果。所以只在props 和 state 比较简单时使用这个，或者在深层数据结构发生变化时调用<strong>forceUpdate()<strong>来确保组件被正确地更新。也可以使用</strong>immutable</strong> 对象加速嵌套数据的比较。</p><p>此外，React中 的 <strong>shouldComponentUpdate()</strong> 将跳过所有子组件树的 prop 更新。因此，确保所有子组件也是“纯的”组件。</p></blockquote><span id="more"></span><h3 id="useMemo与useCallback"><a href="#useMemo与useCallback" class="headerlink" title="useMemo与useCallback"></a>useMemo与useCallback</h3><blockquote><p>在class 组件中，内部有 state 状态管理。</p><ol><li>调用setState，就会触发组件的重新渲染，无论前后的state是否不同</li><li>父组件更新，子组件也会自动的更新</li></ol><p>基于上面的两点，我们通常的解决方案是：使用immutable进行比较，在不相等的时候调用<a href="https://so.csdn.net/so/search?q=setState&spm=1001.2101.3001.7020">setState</a>；在shouldComponentUpdate中判断前后的props和state，如果没有变化，则返回false来阻止更新</p></blockquote><p>在 function 组件中,没有 shouldComponentUpdate 钩子函数，useEffect 不区分mount和update两个状态</p><p>因此useMemo 和useCallback就是解决性能问题的杀手锏。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">import React from &#x27;react&#x27;;</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">export default function WithoutMemo() &#123;</span><br><span class="line">    const [count, setCount] = useState(1);</span><br><span class="line">    const [val, setValue] = useState(&#x27;&#x27;);</span><br><span class="line"> </span><br><span class="line">    function expensive() &#123;</span><br><span class="line">        console.log(&#x27;compute&#x27;);</span><br><span class="line">        let sum = 0;</span><br><span class="line">        for (let i = 0; i &lt; count * 100; i++) &#123;</span><br><span class="line">            sum += i;</span><br><span class="line">        &#125;</span><br><span class="line">        return sum;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    return &lt;div&gt;</span><br><span class="line">        &lt;h4&gt;&#123;count&#125;-&#123;val&#125;-&#123;expensive()&#125;&lt;/h4&gt;</span><br><span class="line">        &lt;div&gt;</span><br><span class="line">            &lt;button onClick=&#123;() =&gt; setCount(count + 1)&#125;&gt;+c1&lt;/button&gt;</span><br><span class="line">            &lt;input value=&#123;val&#125; onChange=&#123;event =&gt; setValue(event.target.value)&#125;/&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>上面例子中，expensive 方法在任何状态更新时都会执行一次，它应该是只依赖 count 状态。此处可使用useMemo 优化，useMemo 返回缓存的值</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">import React from &#x27;react&#x27;;</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">export default function WithoutMemo() &#123;</span><br><span class="line">    const [count, setCount] = useState(1);</span><br><span class="line">    const [val, setValue] = useState(&#x27;&#x27;);</span><br><span class="line"> </span><br><span class="line">    const expensive = useMemo(() =&gt; &#123;</span><br><span class="line">        console.log(&#x27;compute&#x27;);</span><br><span class="line">        let sum = 0;</span><br><span class="line">        for (let i = 0; i &lt; count * 100; i++) &#123;</span><br><span class="line">            sum += i;</span><br><span class="line">        &#125;</span><br><span class="line">        return sum;</span><br><span class="line">    &#125;, [count]);</span><br><span class="line"> </span><br><span class="line">    return &lt;div&gt;</span><br><span class="line">        &lt;h4&gt;&#123;count&#125;-&#123;val&#125;-&#123;expensive&#125;&lt;/h4&gt;</span><br><span class="line">        &lt;div&gt;</span><br><span class="line">            &lt;button onClick=&#123;() =&gt; setCount(count + 1)&#125;&gt;+c1&lt;/button&gt;</span><br><span class="line">            &lt;input value=&#123;val&#125; onChange=&#123;event =&gt; setValue(event.target.value)&#125;/&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>useCallback 它与 useMemo 相似，返回 缓存的函数. </p><p>当 count 更新时，返回新的函数，使用 Set 来判断返回函数是否更新。每次修改count，set.size就会+1</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">import React, &#123; useState, useCallback &#125; from &#x27;react&#x27;;</span><br><span class="line"> </span><br><span class="line">const set = new Set();</span><br><span class="line"> </span><br><span class="line">export default function Callback() &#123;</span><br><span class="line">    const [count, setCount] = useState(1);</span><br><span class="line">    const [val, setVal] = useState(&#x27;&#x27;);</span><br><span class="line"> </span><br><span class="line">    const callback = useCallback(() =&gt; &#123;</span><br><span class="line">        console.log(count);</span><br><span class="line">    &#125;, [count]);</span><br><span class="line">    set.add(callback);</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">    return &lt;div&gt;</span><br><span class="line">        &lt;h4&gt;&#123;count&#125;&lt;/h4&gt;</span><br><span class="line">        &lt;h4&gt;&#123;set.size&#125;&lt;/h4&gt;</span><br><span class="line">        &lt;div&gt;</span><br><span class="line">            &lt;button onClick=&#123;() =&gt; setCount(count + 1)&#125;&gt;+&lt;/button&gt;</span><br><span class="line">            &lt;input value=&#123;val&#125; onChange=&#123;event =&gt; setVal(event.target.value)&#125;/&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>使用场景，父子组件传值。父组件更新子组件也会更新。但大多数是没有必要的，通过 useCallback 可以优化。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">import React, &#123; useState, useCallback, useEffect &#125; from &#x27;react&#x27;;</span><br><span class="line">// 父组件</span><br><span class="line">function Parent() &#123;</span><br><span class="line">    const [count, setCount] = useState(1);</span><br><span class="line">    const [val, setVal] = useState(&#x27;&#x27;);</span><br><span class="line"> </span><br><span class="line">    const callback = useCallback(() =&gt; &#123;</span><br><span class="line">        return count;</span><br><span class="line">    &#125;, [count]);</span><br><span class="line">    return &lt;div&gt;</span><br><span class="line">        &lt;h4&gt;&#123;count&#125;&lt;/h4&gt;</span><br><span class="line">        &lt;Child callback=&#123;callback&#125;/&gt;</span><br><span class="line">        &lt;div&gt;</span><br><span class="line">            &lt;button onClick=&#123;() =&gt; setCount(count + 1)&#125;&gt;+&lt;/button&gt;</span><br><span class="line">            &lt;input value=&#123;val&#125; onChange=&#123;event =&gt; setVal(event.target.value)&#125;/&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;;</span><br><span class="line">&#125;</span><br><span class="line">// 子组件</span><br><span class="line">function Child(&#123; callback &#125;) &#123;</span><br><span class="line">    const [count, setCount] = useState(() =&gt; callback());</span><br><span class="line">    useEffect(() =&gt; &#123;</span><br><span class="line">        setCount(callback());</span><br><span class="line">    &#125;, [callback]);</span><br><span class="line">    return &lt;div&gt;</span><br><span class="line">        &#123;count&#125;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>所有依赖本地状态或props来创建函数，需要使用到缓存函数的地方，都是useCallback的应用场景。</p>]]></content>
    
    
    <summary type="html">&lt;h3 id=&quot;react-PureComponent-与-React-Component-区别&quot;&gt;&lt;a href=&quot;#react-PureComponent-与-React-Component-区别&quot; class=&quot;headerlink&quot; title=&quot;react.PureComponent 与 React.Component 区别&quot;&gt;&lt;/a&gt;react.PureComponent 与 React.Component 区别&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;唯一的区别在于 Rect.Component 没有实现 shouldComponentUpdate() *&lt;strong&gt;一个不太常用的生命周期方法*&lt;/strong&gt;, 而 React.PureComponent 中以浅层对比 prop 和 state 的方式来实现了该函数。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;注意&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;React.PureComponent 中的 &lt;strong&gt;shouldComponentUpdate()&lt;/strong&gt; 仅作&lt;strong&gt;对象的浅层比较&lt;/strong&gt;。如果对象中包含复杂的数据结构，则可能无法检查到深层的差别，产生错误的对比结果。所以只在props 和 state 比较简单时使用这个，或者在深层数据结构发生变化时调用&lt;strong&gt;forceUpdate()&lt;strong&gt;来确保组件被正确地更新。也可以使用&lt;/strong&gt;immutable&lt;/strong&gt; 对象加速嵌套数据的比较。&lt;/p&gt;
&lt;p&gt;此外，React中 的 &lt;strong&gt;shouldComponentUpdate()&lt;/strong&gt; 将跳过所有子组件树的 prop 更新。因此，确保所有子组件也是“纯的”组件。&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="react" scheme="https://wangyf1024.gitee.io/categories/react/"/>
    
    
    <category term="react" scheme="https://wangyf1024.gitee.io/tags/react/"/>
    
  </entry>
  
  <entry>
    <title>vue 实践与优化</title>
    <link href="https://wangyf1024.gitee.io/2022/08/05/programming/vue/%E5%AE%9E%E8%B7%B5%E5%8F%8A%E4%BC%98%E5%8C%96/"/>
    <id>https://wangyf1024.gitee.io/2022/08/05/programming/vue/%E5%AE%9E%E8%B7%B5%E5%8F%8A%E4%BC%98%E5%8C%96/</id>
    <published>2022-08-05T00:23:10.000Z</published>
    <updated>2022-08-26T09:26:01.902Z</updated>
    
    <content type="html"><![CDATA[<h3 id="在使用-element-UI-的-el-image-时，首次加载图片出现白色闪现效果"><a href="#在使用-element-UI-的-el-image-时，首次加载图片出现白色闪现效果" class="headerlink" title="在使用 element UI 的 el-image 时，首次加载图片出现白色闪现效果"></a>在使用 element UI 的 el-image 时，首次加载图片出现白色闪现效果</h3><p>这是应为 组件内 在加载前和加载中是一个类名为el-image__placeholder的div标签，在加载后和加载出错后的处理分别是一个div和img标签。</p><p>解决方法：在加载前和加载后的样式上做更改，可以<strong>重写覆盖</strong>类名<strong>el-image__placeholder</strong>和<strong>el-image__error</strong>来自定义自己想要的效果了</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">// 将默认的白色背景去除</span><br><span class="line"></span><br><span class="line">::v-deep .el-image__placeholder,</span><br><span class="line">::v-deep .el-image__error</span><br><span class="line">&#123;</span><br><span class="line">    <span class="attribute">background</span>: none <span class="meta">!important</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;在使用-element-UI-的-el-image-时，首次加载图片出现白色闪现效果&quot;&gt;&lt;a href=&quot;#在使用-element-UI-的-el-image-时，首次加载图片出现白色闪现效果&quot; class=&quot;headerlink&quot; title=&quot;在使用 elem</summary>
      
    
    
    
    <category term="vuex" scheme="https://wangyf1024.gitee.io/categories/vuex/"/>
    
    
  </entry>
  
  <entry>
    <title>linux 常用命令</title>
    <link href="https://wangyf1024.gitee.io/2022/08/02/programming/linux/%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/"/>
    <id>https://wangyf1024.gitee.io/2022/08/02/programming/linux/%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/</id>
    <published>2022-08-02T02:54:10.000Z</published>
    <updated>2022-09-07T03:59:52.632Z</updated>
    
    <content type="html"><![CDATA[<h3 id="用命令netstat查侦听端口"><a href="#用命令netstat查侦听端口" class="headerlink" title="用命令netstat查侦听端口"></a>用命令netstat查侦听端口</h3><p><code>netstat</code> 是一个命令行工具，可以提供有关网络连接的信息。</p><p>要列出正在侦听的所有TCP或UDP端口，包括使用端口和套接字状态的服务，请使用以下命令：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo netstat -tunlp</span><br></pre></td></tr></table></figure><p>此命令中使用的选项具有以下含义：</p><ul><li>-t - 显示TCP端口。</li><li>-u - 显示UDP端口。</li><li>-n - 显示数字地址而不是解析主机。</li><li>-l - 仅显示侦听端口。</li><li>-p - 显示监听器进程的PID和名称。仅当您以root或sudo用户身份运行命令时，才会显示此信息。</li></ul><span id="more"></span><h3 id="查询nginx主进程号"><a href="#查询nginx主进程号" class="headerlink" title="查询nginx主进程号"></a>查询nginx主进程号</h3><p>　　ps -ef | grep nginx</p>]]></content>
    
    
    <summary type="html">&lt;h3 id=&quot;用命令netstat查侦听端口&quot;&gt;&lt;a href=&quot;#用命令netstat查侦听端口&quot; class=&quot;headerlink&quot; title=&quot;用命令netstat查侦听端口&quot;&gt;&lt;/a&gt;用命令netstat查侦听端口&lt;/h3&gt;&lt;p&gt;&lt;code&gt;netstat&lt;/code&gt; 是一个命令行工具，可以提供有关网络连接的信息。&lt;/p&gt;
&lt;p&gt;要列出正在侦听的所有TCP或UDP端口，包括使用端口和套接字状态的服务，请使用以下命令：&lt;/p&gt;
&lt;figure class=&quot;highlight plaintext&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;sudo netstat -tunlp&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;此命令中使用的选项具有以下含义：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;-t - 显示TCP端口。&lt;/li&gt;
&lt;li&gt;-u - 显示UDP端口。&lt;/li&gt;
&lt;li&gt;-n - 显示数字地址而不是解析主机。&lt;/li&gt;
&lt;li&gt;-l - 仅显示侦听端口。&lt;/li&gt;
&lt;li&gt;-p - 显示监听器进程的PID和名称。仅当您以root或sudo用户身份运行命令时，才会显示此信息。&lt;/li&gt;
&lt;/ul&gt;</summary>
    
    
    
    <category term="linux" scheme="https://wangyf1024.gitee.io/categories/linux/"/>
    
    
    <category term="linux" scheme="https://wangyf1024.gitee.io/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>项目中遇到的样式问题</title>
    <link href="https://wangyf1024.gitee.io/2022/07/23/programming/htmlcss/%E9%A1%B9%E7%9B%AE%E4%B8%AD%E9%81%87%E5%88%B0%E7%9A%84%E6%A0%B7%E5%BC%8F%E9%97%AE%E9%A2%98/"/>
    <id>https://wangyf1024.gitee.io/2022/07/23/programming/htmlcss/%E9%A1%B9%E7%9B%AE%E4%B8%AD%E9%81%87%E5%88%B0%E7%9A%84%E6%A0%B7%E5%BC%8F%E9%97%AE%E9%A2%98/</id>
    <published>2022-07-23T05:07:23.000Z</published>
    <updated>2022-08-02T02:52:41.238Z</updated>
    
    <content type="html"><![CDATA[<h3 id="scss-文件引入样式不生效"><a href="#scss-文件引入样式不生效" class="headerlink" title="scss 文件引入样式不生效"></a>scss 文件引入样式不生效</h3><blockquote><p>​    vue + sacc 项目, 公用样式 common.scss 样式嵌套写法导入不生效</p><p>现象：样式表只有最外层样式生效，嵌套样式不生效（没有解析嵌套语法）</p></blockquote><p>下面这种方式导入，样式不能嵌套写。 必须使用 层级选择器方式</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">@import url(&#x27;@/style/common.scss&#x27;);</span><br></pre></td></tr></table></figure><p>解决：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">@import &#x27;@/style/common.scss&#x27;;</span><br></pre></td></tr></table></figure><span id="more"></span><h3 id="element-ui-表格-宽度不随父级容器变化而自适应"><a href="#element-ui-表格-宽度不随父级容器变化而自适应" class="headerlink" title="element-ui 表格 宽度不随父级容器变化而自适应"></a>element-ui 表格 宽度不随父级容器变化而自适应</h3><blockquote><p>页面布局方式为：父级 display: flex; 项目。自身宽高100%。</p><p>现象：初次加载没有问题，页面调整宽度时，不随父级宽度变化</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&lt;el-table</span><br><span class="line">    :data=&quot;tableData&quot;</span><br><span class="line">    :cell-style=&quot;isRed&quot;</span><br><span class="line">    height=&quot;150&quot;</span><br><span class="line">    border</span><br><span class="line">    style=&quot;width: 100%&quot;&gt;</span><br><span class="line">&lt;el-table-column prop=&quot;id&quot; label=&quot;设备编码&quot; &gt;</span><br><span class="line">&lt;el-table-column prop=&quot;id&quot; label=&quot;设备编码&quot; &gt;</span><br><span class="line">&lt;el-table-column prop=&quot;id&quot; label=&quot;设备编码&quot; &gt;</span><br><span class="line">&lt;el-table-column prop=&quot;id&quot; label=&quot;设备编码&quot; &gt;</span><br><span class="line"></span><br><span class="line">&lt;/el-table&gt;</span><br></pre></td></tr></table></figure><p>解决：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;el-table</span><br><span class="line">  :data=&quot;tableData&quot;</span><br><span class="line">  height=&#x27;calc(100%)&#x27; border fit&gt;</span><br><span class="line">  &lt;el-table-column prop=&quot;td1&quot; label=&quot;表头1&quot;&gt;&lt;/el-table-column&gt;</span><br><span class="line">  &lt;el-table-column prop=&quot;td1&quot; label=&quot;表头2&quot; &gt;&lt;/el-table-column&gt;</span><br><span class="line">  &lt;el-table-column prop=&quot;td1&quot; label=&quot;表头3&quot;&gt;&lt;/el-table-column&gt;</span><br><span class="line">  &lt;el-table-column prop=&quot;td1&quot; label=&quot;表头4&quot; &gt;&lt;/el-table-column&gt;</span><br><span class="line">  &lt;el-table-column prop=&quot;td1&quot; label=&quot;表头5&quot; &gt;&lt;/el-table-column&gt;</span><br><span class="line"></span><br><span class="line">&lt;/el-table&gt;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;h3 id=&quot;scss-文件引入样式不生效&quot;&gt;&lt;a href=&quot;#scss-文件引入样式不生效&quot; class=&quot;headerlink&quot; title=&quot;scss 文件引入样式不生效&quot;&gt;&lt;/a&gt;scss 文件引入样式不生效&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;​    vue + sacc 项目, 公用样式 common.scss 样式嵌套写法导入不生效&lt;/p&gt;
&lt;p&gt;现象：样式表只有最外层样式生效，嵌套样式不生效（没有解析嵌套语法）&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;下面这种方式导入，样式不能嵌套写。 必须使用 层级选择器方式&lt;/p&gt;
&lt;figure class=&quot;highlight plaintext&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;@import url(&amp;#x27;@/style/common.scss&amp;#x27;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;解决：&lt;/p&gt;
&lt;figure class=&quot;highlight plaintext&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;@import &amp;#x27;@/style/common.scss&amp;#x27;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</summary>
    
    
    
    <category term="htmlcss" scheme="https://wangyf1024.gitee.io/categories/htmlcss/"/>
    
    
  </entry>
  
  <entry>
    <title>页面 rem 适配</title>
    <link href="https://wangyf1024.gitee.io/2022/07/21/programming/javascript/rem%E9%80%82%E9%85%8D/"/>
    <id>https://wangyf1024.gitee.io/2022/07/21/programming/javascript/rem%E9%80%82%E9%85%8D/</id>
    <published>2022-07-21T13:54:10.000Z</published>
    <updated>2022-08-05T08:34:42.312Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>rem 自适应方案</p></blockquote><h3 id="宽度-1920-时-1rem-等于-100px-方便换算"><a href="#宽度-1920-时-1rem-等于-100px-方便换算" class="headerlink" title="宽度 1920 时, 1rem 等于 100px.方便换算"></a>宽度 1920 时, 1rem 等于 100px.方便换算</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">(<span class="keyword">function</span>(<span class="params">doc, win</span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> docEl = doc.<span class="property">documentElement</span>,</span><br><span class="line">        resizeEvt = <span class="string">&quot;orientationchange&quot;</span> <span class="keyword">in</span> <span class="variable language_">window</span> ? <span class="string">&quot;orientationchange&quot;</span> : <span class="string">&quot;resize&quot;</span>,</span><br><span class="line">    recalc = <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="keyword">var</span> width = docEl.<span class="property">clientWidth</span> / <span class="number">19.20</span>;</span><br><span class="line">        docEl.<span class="property">style</span>.<span class="property">fontSize</span> = width + <span class="string">&quot;px&quot;</span>;</span><br><span class="line">        scaleNum = width;</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="keyword">if</span> (!doc.<span class="property">addEventListener</span>) <span class="keyword">return</span>;</span><br><span class="line">    win.<span class="title function_">addEventListener</span>(resizeEvt, recalc, <span class="literal">false</span>);</span><br><span class="line">    doc.<span class="title function_">addEventListener</span>(<span class="string">&quot;DOMContentLoaded&quot;</span>, recalc, <span class="literal">false</span>);</span><br><span class="line">&#125;)(<span class="variable language_">document</span>, <span class="variable language_">window</span>);</span><br></pre></td></tr></table></figure><span id="more"></span><h3 id="使用开发工具-计算rem"><a href="#使用开发工具-计算rem" class="headerlink" title="使用开发工具 计算rem"></a>使用开发工具 计算rem</h3><blockquote><p>默认 1920 下16px，插件 px to rem 默认配置 16px</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">window</span>.<span class="title function_">addEventListener</span>(<span class="string">&#x27;resize&#x27;</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="variable language_">window</span>.<span class="title function_">getclientSize</span>();</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">$bus</span>.<span class="title function_">emit</span>(<span class="string">&#x27;window-resize&#x27;</span>, <span class="literal">null</span>)</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="title function_">getclientSize</span>(<span class="params"></span>)&#123;</span><br><span class="line">  <span class="keyword">let</span> clientWidth = <span class="variable language_">document</span>.<span class="property">documentElement</span>.<span class="property">clientWidth</span> || <span class="variable language_">document</span>.<span class="property">body</span>.<span class="property">clientWidth</span> <span class="comment">//可视区域宽度</span></span><br><span class="line">  <span class="comment">// let clientHeight = document.documentElement.clientHeight || document.body.clientHeight //可视区域高度</span></span><br><span class="line">  <span class="keyword">let</span> clientWidth_base = <span class="number">1920</span></span><br><span class="line"></span><br><span class="line">  clientWidth_base = clientWidth;</span><br><span class="line">  <span class="variable language_">document</span>.<span class="property">documentElement</span>.<span class="property">style</span>.<span class="property">fontSize</span> = clientWidth_base / <span class="number">1920</span> * <span class="number">16</span> + <span class="string">&#x27;px&#x27;</span></span><br><span class="line">  <span class="comment">// $(&#x27;html&#x27;).css(&quot;font-size&quot;, clientWidth_base / 1920 * 16 + &#x27;px&#x27;);</span></span><br><span class="line">  <span class="variable language_">window</span>.<span class="property">radioBase</span> = clientWidth_base / <span class="number">1920</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="vue-amfe-flexible开发移动端"><a href="#vue-amfe-flexible开发移动端" class="headerlink" title="vue+amfe-flexible开发移动端"></a>vue+amfe-flexible开发移动端</h3><blockquote><p>(手淘移动端适配方案)</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cnpm install amfe-flexible -S</span><br><span class="line">cnpm install postcss-pxtorem -S</span><br></pre></td></tr></table></figure><p>配置main.js</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">//引入</span><br><span class="line">import &#x27;amfe-flexible/index&#x27;</span><br></pre></td></tr></table></figure><p>配置 vue.config.js</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line">module.exports = <span class="punctuation">&#123;</span></span><br><span class="line">    css<span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        loaderOptions<span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            postcss<span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">                plugins<span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">                    require(&#x27;postcss-pxtorem&#x27;)(<span class="punctuation">&#123;</span> <span class="comment">// 把px单位换算成rem单位</span></span><br><span class="line">                        rootValue<span class="punctuation">:</span> <span class="number">75</span><span class="punctuation">,</span> <span class="comment">// 换算的基数(设计图750的根字体为75,若是设计图为640:则rootValue=64)</span></span><br><span class="line">                        propList<span class="punctuation">:</span> <span class="punctuation">[</span>&#x27;*&#x27;<span class="punctuation">]</span></span><br><span class="line">                    <span class="punctuation">&#125;</span>)</span><br><span class="line">                <span class="punctuation">]</span></span><br><span class="line">            <span class="punctuation">&#125;</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    configureWebpack<span class="punctuation">:</span> config =&gt; <span class="punctuation">&#123;</span></span><br><span class="line">        if (process.env.NODE_ENV === &#x27;production&#x27;) <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="comment">// 为生产环境修改配置...</span></span><br><span class="line">        <span class="punctuation">&#125;</span> else <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="comment">// 为开发环境修改配置...</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 或者</span></span><br><span class="line"></span><br><span class="line"><span class="attr">&quot;postcss-pxtorem&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">   <span class="attr">&quot;rootValue&quot;</span><span class="punctuation">:</span> <span class="number">75</span><span class="punctuation">,</span></span><br><span class="line">   <span class="attr">&quot;propList&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span>&#x27;*&#x27;<span class="punctuation">,</span>&#x27;!font&#x27;<span class="punctuation">,</span>&#x27;!font-size&#x27;<span class="punctuation">]</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 或者</span></span><br><span class="line"></span><br><span class="line"><span class="attr">&quot;css&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    loaderOptions<span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">      less<span class="punctuation">:</span> <span class="punctuation">&#123;</span><span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">      postcss<span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        postcssOptions<span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">          plugins<span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            autoprefixer<span class="punctuation">:</span> <span class="punctuation">&#123;</span><span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;postcss-pxtorem&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">              rootValue<span class="punctuation">:</span> <span class="number">75</span><span class="punctuation">,</span></span><br><span class="line">              propList<span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">                <span class="string">&quot;*&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="string">&quot;!font-size&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="string">&quot;!border*&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="string">&quot;!letter-spacing&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="string">&quot;!text-indent&quot;</span><span class="punctuation">,</span></span><br><span class="line">              <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">              mediaQuery<span class="punctuation">:</span> <span class="keyword">false</span><span class="punctuation">,</span></span><br><span class="line">              replace<span class="punctuation">:</span> <span class="keyword">true</span><span class="punctuation">,</span></span><br><span class="line">              unitPrecision<span class="punctuation">:</span> <span class="number">5</span><span class="punctuation">,</span></span><br><span class="line">              exclude<span class="punctuation">:</span> /node_modules/i<span class="punctuation">,</span></span><br><span class="line">            <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>修改 index.html</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1, maximum-scale=1, minimum-scale=1, user-scalable=no&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><p>此插件也可直接于页面引入</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;script src=<span class="string">&quot;&lt;%= BASE_URL %&gt;static/amfe-flexible.js&quot;</span>&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure><blockquote><p><em>在CSS样式中可直接书写750PX,既表明 整屏的宽度,若是设计图不是750的,可在vue.config.js中 rootValue属性,修改成设计图宽度便可,详见vue.config.js注释说明**css</em></p></blockquote>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;rem 自适应方案&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;宽度-1920-时-1rem-等于-100px-方便换算&quot;&gt;&lt;a href=&quot;#宽度-1920-时-1rem-等于-100px-方便换算&quot; class=&quot;headerlink&quot; title=&quot;宽度 1920 时, 1rem 等于 100px.方便换算&quot;&gt;&lt;/a&gt;宽度 1920 时, 1rem 等于 100px.方便换算&lt;/h3&gt;&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;doc, win&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; docEl = doc.&lt;span class=&quot;property&quot;&gt;documentElement&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        resizeEvt = &lt;span class=&quot;string&quot;&gt;&amp;quot;orientationchange&amp;quot;&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;variable language_&quot;&gt;window&lt;/span&gt; ? &lt;span class=&quot;string&quot;&gt;&amp;quot;orientationchange&amp;quot;&lt;/span&gt; : &lt;span class=&quot;string&quot;&gt;&amp;quot;resize&amp;quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    recalc = &lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; width = docEl.&lt;span class=&quot;property&quot;&gt;clientWidth&lt;/span&gt; / &lt;span class=&quot;number&quot;&gt;19.20&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        docEl.&lt;span class=&quot;property&quot;&gt;style&lt;/span&gt;.&lt;span class=&quot;property&quot;&gt;fontSize&lt;/span&gt; = width + &lt;span class=&quot;string&quot;&gt;&amp;quot;px&amp;quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        scaleNum = width;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!doc.&lt;span class=&quot;property&quot;&gt;addEventListener&lt;/span&gt;) &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    win.&lt;span class=&quot;title function_&quot;&gt;addEventListener&lt;/span&gt;(resizeEvt, recalc, &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    doc.&lt;span class=&quot;title function_&quot;&gt;addEventListener&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&amp;quot;DOMContentLoaded&amp;quot;&lt;/span&gt;, recalc, &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;)(&lt;span class=&quot;variable language_&quot;&gt;document&lt;/span&gt;, &lt;span class=&quot;variable language_&quot;&gt;window&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</summary>
    
    
    
    <category term="js" scheme="https://wangyf1024.gitee.io/categories/js/"/>
    
    
    <category term="js" scheme="https://wangyf1024.gitee.io/tags/js/"/>
    
  </entry>
  
  <entry>
    <title>patch-package</title>
    <link href="https://wangyf1024.gitee.io/2022/07/18/programming/jsplugin/patch-package/"/>
    <id>https://wangyf1024.gitee.io/2022/07/18/programming/jsplugin/patch-package/</id>
    <published>2022-07-18T06:27:10.000Z</published>
    <updated>2022-07-18T06:34:58.647Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p><strong>patch-package</strong> 这个库来解决这类问题。一方面，它能记录第三方库代码的改动，另一方面也能将改动同步到团队每个成员。</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install patch-package -D</span><br></pre></td></tr></table></figure><blockquote><p>注意: 要改动的包在 package.json 中必须声明确定的版本，不能有~或者^的前缀。</p></blockquote><span id="more"></span><p>进入第三库进行修改</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">//这里我修改的是 sass 库</span><br><span class="line">npx patch-package sass</span><br></pre></td></tr></table></figure><p>现在根目录会多出patches目录记录第三方包内容的更改，随后我们在package.json的scripts中增加如下内容：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  &quot;scripts&quot;: &#123;</span><br><span class="line">    &quot;postinstall&quot;: &quot;patch-package&quot;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>每次安装依赖的时候都会通过 postinstall 脚本自动应用 patches 的修改，解决了团队协作的问题。</p></blockquote>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;patch-package&lt;/strong&gt; 这个库来解决这类问题。一方面，它能记录第三方库代码的改动，另一方面也能将改动同步到团队每个成员。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&quot;highlight plaintext&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;npm install patch-package -D&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;blockquote&gt;
&lt;p&gt;注意: 要改动的包在 package.json 中必须声明确定的版本，不能有~或者^的前缀。&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="js" scheme="https://wangyf1024.gitee.io/categories/js/"/>
    
    
    <category term="插件" scheme="https://wangyf1024.gitee.io/tags/%E6%8F%92%E4%BB%B6/"/>
    
  </entry>
  
  <entry>
    <title>typescript 语法基础</title>
    <link href="https://wangyf1024.gitee.io/2022/07/17/programming/javascript/typescript/"/>
    <id>https://wangyf1024.gitee.io/2022/07/17/programming/javascript/typescript/</id>
    <published>2022-07-17T15:17:10.000Z</published>
    <updated>2022-08-02T02:53:26.219Z</updated>
    
    <content type="html"><![CDATA[<h2 id="基本数据类型"><a href="#基本数据类型" class="headerlink" title="基本数据类型"></a>基本数据类型</h2><blockquote><p>number<code>，</code>string<code>，</code>boolean<code>，</code>symbol<code>，</code>null<code>或</code>undefined</p></blockquote><p>基本类型</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="attr">str</span>: <span class="built_in">string</span> = <span class="string">&#x27;hello there&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="attr">num</span>: <span class="built_in">number</span> = <span class="number">123</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="attr">bool</span>: <span class="built_in">boolean</span> = <span class="literal">false</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> <span class="attr">n</span>: <span class="literal">null</span> = <span class="literal">null</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> <span class="attr">u</span>: <span class="literal">undefined</span> = <span class="literal">undefined</span></span><br></pre></td></tr></table></figure><p>联合类型</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> <span class="attr">age</span>: <span class="built_in">string</span>|<span class="built_in">number</span> = <span class="number">15</span></span><br></pre></td></tr></table></figure><p>数组，元组</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 数组, 数组中元素是number类型的数组</span></span><br><span class="line"><span class="keyword">const</span> <span class="attr">arr</span>: <span class="built_in">number</span>[] = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment">// 数组，数组内元素是任意类型</span></span><br><span class="line"><span class="keyword">const</span> <span class="attr">arr1</span>: <span class="built_in">any</span>[] = [<span class="number">1</span>, &#123;<span class="attr">a</span>: <span class="number">2</span>&#125;, <span class="string">&#x27;3&#x27;</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment">// 元组类型顺序数量都要保持一致</span></span><br><span class="line"><span class="keyword">const</span> <span class="attr">tulpe</span>: [stirng, <span class="built_in">number</span>] = [<span class="string">&#x27;zzz&#x27;</span>, <span class="number">123</span>]</span><br></pre></td></tr></table></figure><p>枚举</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 默认值是下标数字</span></span><br><span class="line"><span class="keyword">enum</span> <span class="variable constant_">USER_ROLE</span> &#123;</span><br><span class="line">    <span class="variable constant_">USER</span>,</span><br><span class="line">    <span class="variable constant_">MANAGER</span>,</span><br><span class="line">    <span class="variable constant_">ADMIN</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable constant_">USER_ROLE</span>.<span class="property">MANAGER</span>) <span class="comment">// 1</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 赋值</span></span><br><span class="line"><span class="keyword">enum</span> <span class="variable constant_">USER_ROLE</span> &#123;</span><br><span class="line">    <span class="variable constant_">USER</span> = <span class="string">&#x27;USER&#x27;</span>,</span><br><span class="line">    <span class="variable constant_">MANAGER</span> = <span class="string">&#x27;MANAGER&#x27;</span>,</span><br><span class="line">    <span class="variable constant_">ADMIN</span> = <span class="string">&#x27;ADMIN&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable constant_">USER_ROLE</span>.<span class="property">MANAGER</span>) <span class="comment">// MANAGER</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><span id="more"></span><h2 id="接口"><a href="#接口" class="headerlink" title="接口"></a>接口</h2><blockquote><p>用来描述对象形状的 interface</p></blockquote><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 定义</span></span><br><span class="line"><span class="keyword">interface</span> <span class="title class_">ISchool</span> &#123;</span><br><span class="line">    <span class="keyword">readonly</span> <span class="attr">name</span>: <span class="built_in">string</span>, <span class="comment">// 设置属性只读</span></span><br><span class="line">    <span class="attr">age</span>: <span class="built_in">number</span>,</span><br><span class="line">    address?: <span class="built_in">string</span> <span class="comment">// ?标识 此属性可填可不填</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 使用, 属性不能多，也不能少，类型需保持一致</span></span><br><span class="line"><span class="keyword">let</span> <span class="attr">school</span>: <span class="title class_">ISchool</span> = &#123;</span><br><span class="line">    <span class="attr">name</span>: <span class="string">&#x27;xxx学校&#x27;</span>,</span><br><span class="line">    <span class="attr">age</span>: <span class="number">3</span>,</span><br><span class="line">    <span class="attr">address</span>: <span class="string">&#x27;xxx&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">school.<span class="property">name</span> = <span class="string">&#x27;ccc学校&#x27;</span> <span class="comment">// 报错</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>接口拓展</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 拓展继承</span></span><br><span class="line"><span class="keyword">interface</span> IZHU <span class="keyword">extends</span> <span class="title class_">ISchool</span> &#123;</span><br><span class="line"><span class="attr">type</span>: <span class="built_in">string</span>,</span><br><span class="line">    [<span class="attr">key</span>: <span class="built_in">string</span>]: <span class="built_in">any</span> <span class="comment">// 可拓展任意类型, 其中 key 不是特定写法，可任意</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> <span class="attr">zhuf</span>:<span class="variable constant_">IZHU</span> = &#123;</span><br><span class="line">    ...school,</span><br><span class="line">    <span class="attr">type</span>: <span class="string">&#x27;web&#x27;</span>,</span><br><span class="line">    <span class="attr">a</span>: <span class="number">1</span>,</span><br><span class="line">    <span class="attr">b</span>: <span class="number">2</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>类型断言</p><blockquote><p>表示这个对象就是这样一个类型</p></blockquote><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// ISchool 接口没有拓展时，新增 lessons 属性会报错， 这时可以使用断言 人工判断他就是 ISchool 类型</span></span><br><span class="line"><span class="keyword">let</span> <span class="attr">school2</span>: <span class="title class_">ISchool</span> = (&#123;</span><br><span class="line"><span class="attr">name</span>: <span class="string">&#x27;xxx学校&#x27;</span>,</span><br><span class="line">    <span class="attr">age</span>: <span class="number">3</span>,</span><br><span class="line">    <span class="attr">address</span>: <span class="string">&#x27;xxx&#x27;</span>,</span><br><span class="line">    <span class="attr">lessons</span>: [<span class="string">&#x27;1&#x27;</span>, <span class="string">&#x27;2&#x27;</span>]</span><br><span class="line">&#125;) <span class="keyword">as</span> <span class="title class_">ISchool</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 将 number 强行断言成 string</span></span><br><span class="line"><span class="keyword">let</span> <span class="attr">a</span>: <span class="built_in">number</span> = <span class="number">2</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 直接断言成 string 会报错</span></span><br><span class="line">a <span class="keyword">as</span> <span class="built_in">any</span> <span class="keyword">as</span> <span class="built_in">string</span></span><br></pre></td></tr></table></figure><h2 id="函数"><a href="#函数" class="headerlink" title="函数"></a>函数</h2><blockquote><p>函数主要关系其参数与返回值</p></blockquote><p>函数类型声明</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 基本写法</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">sum</span> (<span class="attr">a</span>: <span class="built_in">number</span>, <span class="attr">b</span>: <span class="built_in">number</span>): <span class="built_in">number</span> &#123;</span><br><span class="line"><span class="keyword">return</span> a + b</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 声明类型:</span></span><br><span class="line"></span><br><span class="line"><span class="number">1</span>、<span class="keyword">type</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> <span class="title class_">Sum</span> = <span class="function">(<span class="params">a: <span class="built_in">number</span>,b: <span class="built_in">number</span></span>)=&gt;</span> <span class="built_in">number</span> | <span class="built_in">string</span></span><br><span class="line"></span><br><span class="line"><span class="number">2</span>、<span class="keyword">interface</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">interface</span> <span class="title class_">Sum</span> &#123;</span><br><span class="line">    (<span class="attr">a</span>: <span class="built_in">number</span>, <span class="attr">b</span>: <span class="built_in">number</span>): <span class="built_in">number</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 区别: interface 可以继承，被类实现。 type 仅仅是个别名</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> <span class="attr">sum2</span>: <span class="title class_">Sum</span> = (<span class="attr">a</span>: <span class="built_in">number</span>, <span class="attr">b</span>: <span class="built_in">number</span>): <span class="function"><span class="params">number</span> =&gt;</span> a + b</span><br><span class="line"></span><br><span class="line">sum2 = <span class="string">&#x27;type 声明 联合类型&#x27;</span></span><br></pre></td></tr></table></figure><h2 id="泛型"><a href="#泛型" class="headerlink" title="泛型"></a>泛型</h2><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// js</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">createArray</span> (len, value) &#123;</span><br><span class="line">    <span class="keyword">let</span> rs = []</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i&lt; len ; i++) &#123;</span><br><span class="line">        rs.<span class="title function_">push</span>(value)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> rs</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> arr = <span class="title function_">createArray</span>(<span class="number">3</span>, <span class="string">&#x27;zf&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">// ts</span></span><br><span class="line"><span class="keyword">function</span> createArray&lt;T&gt; (<span class="attr">len</span>: <span class="built_in">number</span>, <span class="attr">value</span>: &lt;T&gt;): T[] &#123;</span><br><span class="line">    <span class="keyword">let</span> rs = []</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i&lt; len ; i++) &#123;</span><br><span class="line">        rs.<span class="title function_">push</span>(value)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> rs</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>多个泛型， 元组交换</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 原, 返回值 any</span></span><br><span class="line"><span class="keyword">const</span> swap = (<span class="attr">tuple</span>: [<span class="built_in">string</span>, <span class="built_in">number</span>]): [<span class="built_in">number</span>,<span class="built_in">string</span>] =&gt; &#123;</span><br><span class="line"><span class="keyword">return</span> [tuple[<span class="number">1</span>], tuple[<span class="number">0</span>]]</span><br><span class="line">&#125;</span><br><span class="line"><span class="title function_">swap</span>(<span class="string">&#x27;1&#x27;</span>, <span class="number">2</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 改 返回值 随 传参类型</span></span><br><span class="line"><span class="keyword">const</span> swap = &lt;S,N&gt;(<span class="attr">tuple</span>: [S, N]): [N,S] =&gt; &#123;</span><br><span class="line"><span class="keyword">return</span> [tuple[<span class="number">1</span>], tuple[<span class="number">0</span>]]</span><br><span class="line">&#125;</span><br><span class="line">swap&lt;strig,<span class="built_in">number</span>&gt;(<span class="string">&#x27;1&#x27;</span>, <span class="number">2</span>)</span><br></pre></td></tr></table></figure><blockquote><p><a href="https://www.tslang.cn/docs/handbook/interfaces.html">ts中文文档</a></p></blockquote>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;基本数据类型&quot;&gt;&lt;a href=&quot;#基本数据类型&quot; class=&quot;headerlink&quot; title=&quot;基本数据类型&quot;&gt;&lt;/a&gt;基本数据类型&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;number&lt;code&gt;，&lt;/code&gt;string&lt;code&gt;，&lt;/code&gt;boolean&lt;code&gt;，&lt;/code&gt;symbol&lt;code&gt;，&lt;/code&gt;null&lt;code&gt;或&lt;/code&gt;undefined&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;基本类型&lt;/p&gt;
&lt;figure class=&quot;highlight typescript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;str&lt;/span&gt;: &lt;span class=&quot;built_in&quot;&gt;string&lt;/span&gt; = &lt;span class=&quot;string&quot;&gt;&amp;#x27;hello there&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;num&lt;/span&gt;: &lt;span class=&quot;built_in&quot;&gt;number&lt;/span&gt; = &lt;span class=&quot;number&quot;&gt;123&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;bool&lt;/span&gt;: &lt;span class=&quot;built_in&quot;&gt;boolean&lt;/span&gt; = &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;n&lt;/span&gt;: &lt;span class=&quot;literal&quot;&gt;null&lt;/span&gt; = &lt;span class=&quot;literal&quot;&gt;null&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;u&lt;/span&gt;: &lt;span class=&quot;literal&quot;&gt;undefined&lt;/span&gt; = &lt;span class=&quot;literal&quot;&gt;undefined&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;联合类型&lt;/p&gt;
&lt;figure class=&quot;highlight typescript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;age&lt;/span&gt;: &lt;span class=&quot;built_in&quot;&gt;string&lt;/span&gt;|&lt;span class=&quot;built_in&quot;&gt;number&lt;/span&gt; = &lt;span class=&quot;number&quot;&gt;15&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;数组，元组&lt;/p&gt;
&lt;figure class=&quot;highlight typescript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 数组, 数组中元素是number类型的数组&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;arr&lt;/span&gt;: &lt;span class=&quot;built_in&quot;&gt;number&lt;/span&gt;[] = [&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 数组，数组内元素是任意类型&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;arr1&lt;/span&gt;: &lt;span class=&quot;built_in&quot;&gt;any&lt;/span&gt;[] = [&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, &amp;#123;&lt;span class=&quot;attr&quot;&gt;a&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;&amp;#125;, &lt;span class=&quot;string&quot;&gt;&amp;#x27;3&amp;#x27;&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 元组类型顺序数量都要保持一致&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;tulpe&lt;/span&gt;: [stirng, &lt;span class=&quot;built_in&quot;&gt;number&lt;/span&gt;] = [&lt;span class=&quot;string&quot;&gt;&amp;#x27;zzz&amp;#x27;&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;123&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;枚举&lt;/p&gt;
&lt;figure class=&quot;highlight typescript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 默认值是下标数字&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;enum&lt;/span&gt; &lt;span class=&quot;variable constant_&quot;&gt;USER_ROLE&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;variable constant_&quot;&gt;USER&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;variable constant_&quot;&gt;MANAGER&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;variable constant_&quot;&gt;ADMIN&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;title function_&quot;&gt;log&lt;/span&gt;(&lt;span class=&quot;variable constant_&quot;&gt;USER_ROLE&lt;/span&gt;.&lt;span class=&quot;property&quot;&gt;MANAGER&lt;/span&gt;) &lt;span class=&quot;comment&quot;&gt;// 1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 赋值&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;enum&lt;/span&gt; &lt;span class=&quot;variable constant_&quot;&gt;USER_ROLE&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;variable constant_&quot;&gt;USER&lt;/span&gt; = &lt;span class=&quot;string&quot;&gt;&amp;#x27;USER&amp;#x27;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;variable constant_&quot;&gt;MANAGER&lt;/span&gt; = &lt;span class=&quot;string&quot;&gt;&amp;#x27;MANAGER&amp;#x27;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;variable constant_&quot;&gt;ADMIN&lt;/span&gt; = &lt;span class=&quot;string&quot;&gt;&amp;#x27;ADMIN&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;title function_&quot;&gt;log&lt;/span&gt;(&lt;span class=&quot;variable constant_&quot;&gt;USER_ROLE&lt;/span&gt;.&lt;span class=&quot;property&quot;&gt;MANAGER&lt;/span&gt;) &lt;span class=&quot;comment&quot;&gt;// MANAGER&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</summary>
    
    
    
    <category term="js" scheme="https://wangyf1024.gitee.io/categories/js/"/>
    
    
    <category term="typescript" scheme="https://wangyf1024.gitee.io/tags/typescript/"/>
    
  </entry>
  
  <entry>
    <title>isarray 兼容旧版本浏览器</title>
    <link href="https://wangyf1024.gitee.io/2022/07/13/programming/jsplugin/isarray/"/>
    <id>https://wangyf1024.gitee.io/2022/07/13/programming/jsplugin/isarray/</id>
    <published>2022-07-13T06:43:10.000Z</published>
    <updated>2022-07-13T06:45:27.481Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>判断一个对象是否为数组，兼容 哪些旧版本浏览器。</p><p>如果 不需要兼容旧版浏览器，建议直接使用 数组的 isArray 方法</p></blockquote><p>安装</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install isarray</span><br></pre></td></tr></table></figure><p>示例</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> isArray = <span class="built_in">require</span>(<span class="string">&#x27;isarray&#x27;</span>);</span><br><span class="line"> </span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title function_">isArray</span>([])); <span class="comment">// =&gt; true</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title function_">isArray</span>(&#123;&#125;)); <span class="comment">// =&gt; false</span></span><br></pre></td></tr></table></figure><p>简单的展示其原理</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> isArray = <span class="title class_">Array</span>.<span class="property">isArray</span> || <span class="function"><span class="params">list</span> =&gt;</span> (&#123;&#125;).<span class="property">toString</span>.<span class="title function_">call</span>(list) === <span class="string">&#x27;[object Array]&#x27;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;判断一个对象是否为数组，兼容 哪些旧版本浏览器。&lt;/p&gt;
&lt;p&gt;如果 不需要兼容旧版浏览器，建议直接使用 数组的 isArray 方法&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;安装&lt;/p&gt;
&lt;figure class=&quot;highlight pla</summary>
      
    
    
    
    <category term="js" scheme="https://wangyf1024.gitee.io/categories/js/"/>
    
    
    <category term="插件" scheme="https://wangyf1024.gitee.io/tags/%E6%8F%92%E4%BB%B6/"/>
    
  </entry>
  
  <entry>
    <title>webpack 实践与优化</title>
    <link href="https://wangyf1024.gitee.io/2022/07/11/programming/webpack/%E5%AE%9E%E8%B7%B5%E4%BA%8E%E4%BC%98%E5%8C%96/"/>
    <id>https://wangyf1024.gitee.io/2022/07/11/programming/webpack/%E5%AE%9E%E8%B7%B5%E4%BA%8E%E4%BC%98%E5%8C%96/</id>
    <published>2022-07-11T09:23:10.000Z</published>
    <updated>2022-08-02T03:02:59.037Z</updated>
    
    <content type="html"><![CDATA[<h3 id="如何删除项目中没有使用到的-package"><a href="#如何删除项目中没有使用到的-package" class="headerlink" title="如何删除项目中没有使用到的 package"></a>如何删除项目中没有使用到的 package</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">$ npm install depcheck -g</span><br><span class="line"></span><br><span class="line">$ depcheck</span><br><span class="line"></span><br><span class="line"><span class="title class_">Unused</span> dependencies</span><br><span class="line">* underscore</span><br><span class="line"><span class="title class_">Unused</span> devDependencies</span><br><span class="line">* jasmine</span><br><span class="line"><span class="title class_">Missing</span> dependencies</span><br><span class="line">* lodash</span><br></pre></td></tr></table></figure><h3 id="查看-node-modules-某一文件夹-的体积有多大"><a href="#查看-node-modules-某一文件夹-的体积有多大" class="headerlink" title="查看 node_modules(某一文件夹) 的体积有多大"></a>查看 node_modules(某一文件夹) 的体积有多大</h3><span id="more"></span><p><code>du</code> (disk usage) 命令可以查看磁盘的使用情况，从它可以看出来文件及目录的大小</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -d 搜索深度，0 指当前目录</span></span><br><span class="line"><span class="comment"># -h 以可读性的方式显示大小</span></span><br><span class="line">$ <span class="built_in">du</span> -hd 0 node_modules</span><br><span class="line">132M    node_modules</span><br></pre></td></tr></table></figure><p>同理，可以使用以下命令查看 <code>node_modules</code> 下每个目录所占的大小</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">du</span> -hd 1 node_modules</span><br></pre></td></tr></table></figure><h3 id="optionalDependencies-的使用场景是什么"><a href="#optionalDependencies-的使用场景是什么" class="headerlink" title="optionalDependencies 的使用场景是什么"></a>optionalDependencies 的使用场景是什么</h3><p>当一个包是可依赖可不依赖时，可采用 <code>optionalDependencies</code>，但需要在代码中做好异常处理。</p><p>如 <a href="https://github.com/paulmillr/chokidar">chokidar (opens new window)</a>对 <code>fsevents</code> 的引入</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;optionalDependencies&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;fsevents&quot;</span><span class="punctuation">:</span> <span class="string">&quot;~2.1.2&quot;</span></span><br><span class="line">  <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br><span class="line">let fsevents;</span><br><span class="line">try <span class="punctuation">&#123;</span></span><br><span class="line">  fsevents = require(<span class="string">&quot;fsevents&quot;</span>);</span><br><span class="line"><span class="punctuation">&#125;</span> catch (error) <span class="punctuation">&#123;</span></span><br><span class="line">  if (process.env.CHOKIDAR_PRINT_FSEVENTS_REQUIRE_ERROR) console.error(error);</span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><h3 id="前端性能分析工具"><a href="#前端性能分析工具" class="headerlink" title="前端性能分析工具"></a>前端性能分析工具</h3><ol><li><code>lighthouse</code>: 可在 chrome devtools 直接使用，根据个人设备及网络对目标网站进行分析，并提供各种建议</li><li><code>webpagetest</code>: 分布式的性能分析工具，可在全球多个区域的服务器资源为你的网站进行分析，并生成相应的报告</li></ol><h3 id="dependencies-与-devDependencies-有何区别"><a href="#dependencies-与-devDependencies-有何区别" class="headerlink" title="dependencies 与 devDependencies 有何区别"></a>dependencies 与 devDependencies 有何区别</h3><p><strong>对于业务代码而讲，它俩区别不大</strong></p><ul><li><p>当打包时，依靠的是 <code>Webpack/Rollup</code> 对代码进行模块依赖分析，与该模块是否在 <code>dep/devDep</code> 并无关系，只要在 <code>node_modules</code> 上能够找到该 Package 即可。</p></li><li><p>生产依赖会随着包一起下载，开发依赖不会，npm i –production 可以只下载生产依赖</p></li></ul><p><strong>对于库 (Package) 开发而言，是有严格区分的</strong></p><h3 id="确认项目是否引用某个依赖"><a href="#确认项目是否引用某个依赖" class="headerlink" title="确认项目是否引用某个依赖"></a>确认项目是否引用某个依赖</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yarn list | grep xxx</span><br></pre></td></tr></table></figure><h3 id="为项目指定node版本号"><a href="#为项目指定node版本号" class="headerlink" title="为项目指定node版本号"></a>为项目指定node版本号</h3><blockquote><p>这属于项目质量问题</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// package.json</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;engines&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;node&quot;</span>: <span class="string">&quot;&gt;=14.0.0&quot;</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="版本号-设置"><a href="#版本号-设置" class="headerlink" title="版本号 设置"></a>版本号 设置</h3><blockquote><ul><li><code>major</code>: 当你发了一个含有 Breaking Change 的 API</li><li><code>minor</code>: 当你新增了一个向后兼容的功能时</li><li><code>patch</code>: 当你修复了一个向后兼容的 Bug 时</li></ul></blockquote><h3 id="npm-钩子函数-生命周期"><a href="#npm-钩子函数-生命周期" class="headerlink" title="npm 钩子函数, 生命周期"></a>npm 钩子函数, 生命周期</h3><blockquote><p>再执行一个脚本时，前置，后置钩子函数执行。npm 脚本生命周期</p></blockquote><p>生命周期</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">prepublishOnly</span><br><span class="line">prepack</span><br><span class="line">prepare</span><br><span class="line">postpack</span><br><span class="line">publish</span><br><span class="line">postpublish</span><br></pre></td></tr></table></figure><p>钩子函数</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// pre和post</span></span><br><span class="line"></span><br><span class="line">pre 为前置钩子函数</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">post 为后置钩子函数</span><br><span class="line"></span><br><span class="line"><span class="comment">// package.json</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="string">&quot;script&quot;</span>: &#123;</span><br><span class="line">        <span class="string">&quot;build&quot;</span>: <span class="string">&quot;npm run build&quot;</span>,</span><br><span class="line">        <span class="string">&quot;prebuild&quot;</span>: <span class="string">&quot;&quot;</span>, <span class="comment">// npm run build 之前执行</span></span><br><span class="line">            <span class="string">&quot;postbuild&quot;</span>: <span class="string">&quot;&quot;</span>,<span class="comment">// npm run build 之后执行</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="webpack-分包"><a href="#webpack-分包" class="headerlink" title="webpack 分包"></a>webpack 分包</h3><blockquote><p>webpack 中提供了方案 4.0 之前是：CommonsChunkPlugin 4.0 后是 optimization.splitChunks</p></blockquote><h3 id="引入-BFF-层"><a href="#引入-BFF-层" class="headerlink" title="引入 BFF 层"></a>引入 BFF 层</h3><blockquote><p>BFF 全称 <code>Backend For Frontend</code>，一般指在前端与服务器端搭建一层由前端维护的 Node Server 服务，具有以下好处</p></blockquote><ol><li>数据处理。对数据进行校验、清洗及格式化。使得数据更与前端契合</li><li>数据聚合。后端无需处理大量的表连接工作，第三方接口聚合工作，业务逻辑简化为各个资源的增删改查，由 BFF 层聚合各个资源的数据，后端可集中处理性能问题、监控问题、消息队列等</li><li>权限前移。在 BFF 层统一认证鉴权，后端无需做权限校验，后端可直接部署在集群内网，无需向外网暴露服务，减少了后端的服务度。</li></ol><p>但其中也有一些坏处，如以下</p><ol><li>引入复杂度，新的 BFF 服务需要一套基础设施的支持，如日志、异常、部署、监控等</li></ol><h3 id="压缩前端-js-的体积"><a href="#压缩前端-js-的体积" class="headerlink" title="压缩前端 js 的体积"></a>压缩前端 js 的体积</h3><ol><li><a href="https://github.com/terser/terser">terser (opens new window)</a>或者 <a href="https://github.com/mishoo/UglifyJS">uglify (opens new window)</a>，及流行的使用 Rust 编写的 <code>swc</code> 压缩混淆化 JS。</li><li><code>gzip</code> 或者 <code>brotli</code> 压缩，在网关处(nginx)开启</li><li>使用 <code>webpack-bundle-analyzer</code> 分析打包体积，替换占用较大体积的库，如 <code>moment</code> -&gt; <code>dayjs</code></li><li>使用支持 Tree-Shaking 的库，对无引用的库或函数进行删除，如 <code>lodash</code> -&gt; <code>lodash/es</code></li><li>对无法 Tree Shaking 的库，进行按需引入模块，如使用 <code>import Button from &#39;antd/lib/Button&#39;</code>，此处可手写 <code>babel-plugin</code> 自动完成，但不推荐</li><li>使用 babel (css 为 postcss) 时采用 <code>browserlist</code>，越先进的浏览器所需要的 polyfill 越少，体积更小</li><li>code spliting，路由懒加载，只加载当前路由的包，按需加载其余的 chunk，首页 JS 体积变小 (PS: 次条不减小总体积，但减小首页体积)</li><li>使用 webpack 的 splitChunksPlugin，把运行时、被引用多次的库进行分包，在分包时要注意避免某一个库被多次引用多次打包。此时分为多个 chunk，虽不能把总体积变小，但可提高加载性能 (PS: 此条不减小总体积，但可提升加载性能)</li></ol><h3 id="按需加载"><a href="#按需加载" class="headerlink" title="按需加载"></a>按需加载</h3><h4 id="Vue"><a href="#Vue" class="headerlink" title="Vue"></a>Vue</h4><p>这种方式下一个组件生成一个js文件</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">const</span> router = <span class="keyword">new</span> <span class="title class_">VueRouter</span>(&#123;</span><br><span class="line">  <span class="attr">router</span>: [</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">path</span>: <span class="string">&#x27;/login&#x27;</span>,</span><br><span class="line">      <span class="attr">name</span>: <span class="string">&#x27;Login&#x27;</span>,</span><br><span class="line">      <span class="attr">component</span>: <span class="function"><span class="params">resolve</span> =&gt;</span> <span class="built_in">require</span>([<span class="string">&#x27;../components/Login&#x27;</span>], resolve)</span><br><span class="line">    &#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p><a href="https://so.csdn.net/so/search?q=ES6&spm=1001.2101.3001.7020">ES6</a>的import()方法</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 这种方式下, 没有指定webpackChunkName, 每个组件会打包成一个js文件</span></span><br><span class="line"><span class="keyword">const</span> router = <span class="keyword">new</span> <span class="title class_">VueRouter</span>(&#123;</span><br><span class="line">  <span class="attr">router</span>: [</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">path</span>: <span class="string">&#x27;/login&#x27;</span>,</span><br><span class="line">      <span class="attr">name</span>: <span class="string">&#x27;login&#x27;</span>,</span><br><span class="line">      <span class="attr">component</span>: <span class="function">() =&gt;</span> <span class="title function_">import</span>(<span class="string">&#x27;../pages/components/Login&#x27;</span>)</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">path</span>: <span class="string">&#x27;layout&#x27;</span>,</span><br><span class="line">      <span class="attr">name</span>: <span class="string">&#x27;login&#x27;</span>,</span><br><span class="line">      <span class="attr">component</span>: <span class="function">() =&gt;</span> <span class="title function_">import</span>(<span class="string">&#x27;../pages/components/Layout&#x27;</span>)</span><br><span class="line">    &#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> router</span><br><span class="line"><span class="comment">// 这种方式下, 指定了webpakeChunkName, 多个组件会合并成一个js文件</span></span><br><span class="line"><span class="keyword">const</span> router = <span class="keyword">new</span> <span class="title class_">VueRouter</span>(&#123;</span><br><span class="line">  <span class="attr">router</span>: [</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">path</span>: <span class="string">&#x27;login&#x27;</span>,</span><br><span class="line">      <span class="attr">name</span>: <span class="string">&#x27;Login&#x27;</span>,</span><br><span class="line">      <span class="attr">component</span>: <span class="function">() =&gt;</span> <span class="title function_">import</span>(<span class="comment">/* webpakeChunkName: demo */</span> <span class="string">&#x27;../pages/components/Login&#x27;</span>)</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">path</span>: <span class="string">&#x27;layout&#x27;</span>,</span><br><span class="line">      <span class="attr">name</span>: <span class="string">&#x27;layout&#x27;</span>,</span><br><span class="line">      <span class="attr">component</span>: <span class="function">() =&gt;</span> <span class="title function_">import</span>(<span class="comment">/* webpakeChunkName: demo */</span> <span class="string">&#x27;../pages/components/Layout&#x27;</span>)</span><br><span class="line">    &#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;)</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> router</span><br></pre></td></tr></table></figure><p>webpake提供的resolve + require.ensure()</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 这种情况下, 多个路由指定相同的chunkNmae会合并打包成一个js文件</span></span><br><span class="line"><span class="keyword">const</span> router = <span class="keyword">new</span> <span class="title class_">VueRouter</span>(&#123;</span><br><span class="line">  <span class="attr">router</span>: [</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">path</span>: <span class="string">&#x27;login&#x27;</span>,</span><br><span class="line">      <span class="attr">name</span>: <span class="string">&#x27;name&#x27;</span>,</span><br><span class="line">      <span class="attr">component</span>: <span class="function"><span class="params">resolve</span> =&gt;</span> <span class="built_in">require</span>.<span class="title function_">ensure</span>([], <span class="function">() =&gt;</span> <span class="title function_">resolve</span>(<span class="built_in">require</span>(<span class="string">&#x27;../pages/components/Login&#x27;</span>)), <span class="string">&#x27;demo&#x27;</span>)</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">path</span>: <span class="string">&#x27;layout&#x27;</span>,</span><br><span class="line">      <span class="attr">name</span>: <span class="string">&#x27;layout&#x27;</span>,</span><br><span class="line">      <span class="attr">component</span>: <span class="function"><span class="params">resolve</span> =&gt;</span> <span class="built_in">require</span>.<span class="title function_">ensure</span>([], <span class="function">() =&gt;</span> <span class="title function_">resolve</span>(<span class="built_in">require</span>(<span class="string">&#x27;../pages/components/Layout&#x27;</span>)), <span class="string">&#x27;demo&#x27;</span>)</span><br><span class="line">    &#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;)</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> router</span><br></pre></td></tr></table></figure><p>组件的按需加载</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">  <span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">    data () &#123;</span><br><span class="line">      <span class="keyword">return</span> &#123;&#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">components</span>: &#123;</span><br><span class="line">      <span class="string">&#x27;helloWord&#x27;</span>: <span class="function"><span class="params">resolve</span> =&gt;</span> &#123;<span class="built_in">require</span>([<span class="string">&#x27;../components/test.vue&#x27;</span>]), resolve&#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>导入组件的<a href="https://so.csdn.net/so/search?q=%E6%87%92%E5%8A%A0%E8%BD%BD&spm=1001.2101.3001.7020">懒加载</a></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">Home</span> <span class="keyword">from</span> <span class="string">&#x27;@/pages/home/index.vue&#x27;</span> <span class="comment">// es6提供的import方法</span></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">Home</span> = (<span class="params"></span>) =&gt; <span class="title function_">import</span>(<span class="string">&#x27;@/pages/home/index.vue&#x27;</span>) <span class="comment">// 懒加载的方法</span></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">Home</span> = resolve =&gt; <span class="built_in">require</span>([<span class="string">&#x27;@/pages/home/index.vue&#x27;</span>], resolve) <span class="comment">// 懒加载的方法</span></span><br></pre></td></tr></table></figure><h3 id="代码压缩"><a href="#代码压缩" class="headerlink" title="代码压缩"></a>代码压缩</h3><blockquote><p>webpack4内置了uglifyjs-webpack-plugin,在生产模式默认开启这个插件</p></blockquote><ul><li><p>css:    optimize-css-assets-webpack-plugin</p></li><li><p>js:    uglifyjs-webpack-plugin</p></li><li><p>html:    html-webpack-plugin</p></li></ul><h3 id="代码分割"><a href="#代码分割" class="headerlink" title="代码分割"></a>代码分割</h3><p>vue.config.js</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">chainWebpack</span>: <span class="function"><span class="params">config</span>=&gt;</span>&#123;</span><br><span class="line">config.<span class="property">optimization</span>.<span class="title function_">minimize</span>(<span class="literal">true</span>)<span class="comment">// 开启压缩js代码(默认true)</span></span><br><span class="line">config.<span class="property">optimization</span>.<span class="title function_">splitChunks</span>(&#123; <span class="comment">// 开启代码分割</span></span><br><span class="line">        <span class="attr">chunks</span>: <span class="string">&#x27;all&#x27;</span></span><br><span class="line">      &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="CDN-优化"><a href="#CDN-优化" class="headerlink" title="CDN 优化"></a>CDN 优化</h3><blockquote><p>内网暂不考虑</p></blockquote><h3 id="gzip-加速"><a href="#gzip-加速" class="headerlink" title="gzip 加速"></a>gzip 加速</h3><blockquote><p>使用 compression-webpack-plugin 压缩代码</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="title class_">CompressionWebpackPlugin</span> = <span class="built_in">require</span>(<span class="string">&#x27;compression-webpack-plugin&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 是否为生产环境</span></span><br><span class="line"><span class="keyword">const</span> isProduction = process.<span class="property">env</span>.<span class="property">NODE_ENV</span> !== <span class="string">&#x27;development&#x27;</span>;</span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = &#123;</span><br><span class="line">  <span class="attr">productionSourceMap</span>: <span class="literal">false</span>,</span><br><span class="line">  <span class="attr">configureWebpack</span>: <span class="function"><span class="params">config</span> =&gt;</span> &#123;</span><br><span class="line">      <span class="comment">// 生产环境相关配置</span></span><br><span class="line">      <span class="keyword">if</span> (isProduction) &#123;</span><br><span class="line">        <span class="comment">//gzip压缩</span></span><br><span class="line">        <span class="keyword">const</span> productionGzipExtensions = [<span class="string">&#x27;html&#x27;</span>, <span class="string">&#x27;js&#x27;</span>, <span class="string">&#x27;css&#x27;</span>]</span><br><span class="line">        config.<span class="property">plugins</span>.<span class="title function_">push</span>(</span><br><span class="line">            <span class="keyword">new</span> <span class="title class_">CompressionWebpackPlugin</span>(&#123;</span><br><span class="line">                <span class="attr">filename</span>: <span class="string">&#x27;[path].gz[query]&#x27;</span>,</span><br><span class="line">                <span class="attr">algorithm</span>: <span class="string">&#x27;gzip&#x27;</span>,</span><br><span class="line">                <span class="attr">test</span>: <span class="keyword">new</span> <span class="title class_">RegExp</span>(</span><br><span class="line">                    <span class="string">&#x27;\\.(&#x27;</span> + productionGzipExtensions.<span class="title function_">join</span>(<span class="string">&#x27;|&#x27;</span>) + <span class="string">&#x27;)$&#x27;</span></span><br><span class="line">                ),</span><br><span class="line">                <span class="attr">threshold</span>: <span class="number">10240</span>, <span class="comment">// 只有大小大于该值的资源会被处理 10240</span></span><br><span class="line">                <span class="attr">minRatio</span>: <span class="number">0.8</span>, <span class="comment">// 只有压缩率小于这个值的资源才会被处理</span></span><br><span class="line">                <span class="attr">deleteOriginalAssets</span>: <span class="literal">false</span> <span class="comment">// 删除原文件</span></span><br><span class="line">            &#125;)</span><br><span class="line">        )</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>还需要配置nginx</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">        listen       80;</span><br><span class="line">        server_name  localhost;</span><br><span class="line">        gzip on;</span><br><span class="line">gzip_static on;    </span><br><span class="line">gzip_types text/plain text/css application/json application/x-javascript text/xml application/xml application/xml+rss text/javascript;</span><br><span class="line">gzip_proxied  any;</span><br><span class="line">gzip_vary on;</span><br><span class="line">gzip_comp_level 6;</span><br><span class="line">gzip_buffers 16 8k;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="打包时-v-deep-语法报错"><a href="#打包时-v-deep-语法报错" class="headerlink" title="打包时 ::v-deep 语法报错"></a>打包时 ::v-deep 语法报错</h3><p>//报错</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;style lang=<span class="string">&quot;scss&quot;</span> scoped&gt;</span><br><span class="line">  ::v-deep .<span class="property">demo</span>&#123;</span><br><span class="line">    <span class="attr">background</span>: yellow;</span><br><span class="line">  &#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><p>//正确</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;style lang=<span class="string">&quot;scss&quot;</span> scoped&gt;</span><br><span class="line">  :<span class="title function_">deep</span>(<span class="params">.demo</span>)&#123;</span><br><span class="line">    <span class="attr">background</span>: yellow;</span><br><span class="line">  &#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><h3 id="首屏加载时间"><a href="#首屏加载时间" class="headerlink" title="首屏加载时间"></a>首屏加载时间</h3><blockquote><ol><li>对于 pv 量比较高的页面，比如 b 站等流量图也比较大的，采用 ssr 采用 ssr 如何优化性能<ul><li>性能瓶颈在于 react-dom render/hydrate 和 server 端的 renderToString</li><li>尽量减少 dom 结构， 采用流式渲染，jsonString 一个对象，而不是 literal 对象</li><li>server 去获取数据</li><li>不同情况不同分析，减少主线程阻塞时间</li><li>减少不必要的应用逻辑在服务端运行</li></ul></li><li>减少依赖和包的体积<ul><li>利用 webpack 的 contenthash 缓存</li><li>重复依赖包处理，可以采用 pnpm</li><li>采用 code splitting，减少首次请求体积</li><li>减少第三方依赖的体积</li></ul></li><li>FP (First Paint) 首次绘制 FCP (First Contentful Paint) 首次内容绘制 LCP (Largest Contentful Paint) 最大内容渲染 DCL (DomContentloaded) FMP(First Meaningful Paint) 首次有效绘制 L (onLoad) TTI (Time to Interactive) 可交互时间 TBT (Total Blocking Time) 页面阻塞总时长 FID (First Input Delay) 首次输入延迟 CLS (Cumulative Layout Shift) 累积布局偏移 SI (Speed Index) 一些性能指标可以监控性能</li></ol><p>4.网络 prefetch cdn</p></blockquote><h3 id="前端-小图片转-base64"><a href="#前端-小图片转-base64" class="headerlink" title="前端　小图片转　base64"></a>前端　小图片转　base64</h3><blockquote><p>减少请求</p></blockquote><p>webpack 4.0</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// yarn add -D url-loader</span></span><br><span class="line"></span><br><span class="line"><span class="attr">module</span>: &#123;</span><br><span class="line">  <span class="attr">rules</span>: [</span><br><span class="line">       &#123;</span><br><span class="line">        <span class="attr">test</span>: <span class="regexp">/\.(jpeg|jpg|png|svg|gif)$/</span>,</span><br><span class="line">        <span class="attr">use</span>: &#123;</span><br><span class="line">          <span class="attr">loader</span>: <span class="string">&#x27;url-loader&#x27;</span>, <span class="comment">// 默认使用的是es6模块</span></span><br><span class="line">          <span class="attr">options</span>: &#123; <span class="comment">// 配置 </span></span><br><span class="line">            <span class="attr">esModule</span>: <span class="literal">false</span>, <span class="comment">// 使用common.js规范</span></span><br><span class="line">            <span class="attr">outputPath</span>: <span class="string">&#x27;images&#x27;</span>, <span class="comment">// 输出的文件目录</span></span><br><span class="line">            <span class="attr">name</span>: <span class="string">&#x27;images/[contenthash:4].[ext]&#x27;</span>,</span><br><span class="line">            <span class="attr">limit</span>: <span class="number">20</span>*<span class="number">1024</span> <span class="comment">// 小于20k转为base64</span></span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>vue-cli</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">chainWebpack</span>: <span class="function">(<span class="params">config</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (env !== <span class="string">&#x27;development&#x27;</span>) &#123;</span><br><span class="line">      config.<span class="property">module</span></span><br><span class="line">        .<span class="title function_">rule</span>(<span class="string">&#x27;images&#x27;</span>)</span><br><span class="line">        .<span class="title function_">test</span>(<span class="regexp">/\.(jpg|png|gif)$/</span>)</span><br><span class="line">        .<span class="title function_">set</span>(<span class="string">&#x27;parser&#x27;</span>, &#123;</span><br><span class="line">          <span class="attr">dataUrlCondition</span>: &#123;</span><br><span class="line">            <span class="attr">maxSize</span>: <span class="number">10000</span> * <span class="number">1024</span>, <span class="comment">// 10KiB 大小内的图片转base64</span></span><br><span class="line">          &#125;,</span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="browserslist"><a href="#browserslist" class="headerlink" title="browserslist"></a><a href="https://hub.nuaa.cf/browserslist/lint/"><code>browserslist</code></a></h3><blockquote><p>根据提供的目标浏览器的环境来，智能添加css前缀，js的polyfill垫片,来兼容旧版本浏览器。避免不必要的兼容代码，以提高代码的编译质量。</p><p>Browserslist 这个东西单独是没用的，（补充: 在vue官方脚手架中，browserslist字段会被 <a href="https://links.jianshu.com/go?to=https://new.babeljs.io/docs/en/next/babel-preset-env.html">@babel/preset-env</a> 和 <a href="https://links.jianshu.com/go?to=https://github.com/postcss/autoprefixer">Autoprefixer</a> 用来确定需要转译的 JavaScript 特性和需要添加的 CSS 浏览器前缀。2019-7-22）下面的搭配的工具列表：</p><table><thead><tr><th>组件</th><th>功能</th></tr></thead><tbody><tr><td><a href="https://links.jianshu.com/go?to=https://github.com/postcss/autoprefixer">Autoprefixer</a></td><td>postcss添加css前缀组件</td></tr><tr><td><a href="https://links.jianshu.com/go?to=https://github.com/jonathantneal/postcss-preset-env">postcss-preset-env</a></td><td>编译预设环境 智能添加polyfill垫片代码</td></tr><tr><td><a href="https://links.jianshu.com/go?to=https://github.com/babel/babel/tree/master/packages/babel-preset-env">Babel</a></td><td></td></tr><tr><td><a href="https://links.jianshu.com/go?to=https://github.com/amilajack/eslint-plugin-compat">eslint-plugin-compat</a></td><td></td></tr><tr><td><a href="https://links.jianshu.com/go?to=https://github.com/ismay/stylelint-no-unsupported-browser-features">stylelint-no-unsupported-browser-features</a></td><td></td></tr><tr><td><a href="https://links.jianshu.com/go?to=https://github.com/jonathantneal/postcss-normalize">postcss-normalize</a></td><td></td></tr><tr><td></td><td></td></tr></tbody></table><p>了解更多请看这个<a href="https://links.jianshu.com/go?to=https://github.com/browserslist/browserslist-example">list</a></p><p>或者<code>npx browserslist</code></p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">&#123;   <span class="comment">// package.json</span></span><br><span class="line">  <span class="string">&quot;browserslist&quot;</span>: [         <span class="comment">// 注意：是一个数组对象</span></span><br><span class="line">  <span class="string">&quot;&gt; 1%&quot;</span>,</span><br><span class="line"><span class="string">&quot;last 2 versions&quot;</span></span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>语法说明</p><p>例子    说明</p><blockquote><p>1%    全球超过1%人使用的浏览器<br>5% in US    指定国家使用率覆盖<br>last 2 versions    所有浏览器兼容到最后两个版本根据CanIUse.com追踪的版本<br>Firefox ESR    火狐最新版本<br>Firefox &gt; 20    指定浏览器的版本范围<br>not ie &lt;=8    方向排除部分版本<br>Firefox 12.1    指定浏览器的兼容到指定版本<br>unreleased versions    所有浏览器的beta测试版本<br>unreleased Chrome versions    指定浏览器的测试版本<br>since 2013    2013年之后发布的所有版本</p></blockquote><p>一些常用的查询语法</p><p>根据用户份额:</p><ul><li><code>&gt; 5%</code>: 在全球用户份额大于 <code>5%</code> 的浏览器</li><li><code>&gt; 5% in CN</code>: 在中国用户份额大于 <code>5%</code> 的浏览器</li></ul><p>根据最新浏览器版本</p><ul><li><code>last 2 versions</code>: 所有浏览器的最新两个版本</li><li><code>last 2 Chrome versions</code>: Chrome 浏览器的最新两个版本</li></ul><p>不再维护的浏览器</p><ul><li><code>dead</code>: 官方不在维护已过两年，比如 <code>IE10</code></li></ul><p>浏览器版本号</p><ul><li><code>Chrome &gt; 90</code>: Chrome 大于 90 版本号的浏览器</li></ul>]]></content>
    
    
    <summary type="html">&lt;h3 id=&quot;如何删除项目中没有使用到的-package&quot;&gt;&lt;a href=&quot;#如何删除项目中没有使用到的-package&quot; class=&quot;headerlink&quot; title=&quot;如何删除项目中没有使用到的 package&quot;&gt;&lt;/a&gt;如何删除项目中没有使用到的 package&lt;/h3&gt;&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ npm install depcheck -g&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ depcheck&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;title class_&quot;&gt;Unused&lt;/span&gt; dependencies&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;* underscore&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;title class_&quot;&gt;Unused&lt;/span&gt; devDependencies&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;* jasmine&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;title class_&quot;&gt;Missing&lt;/span&gt; dependencies&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;* lodash&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h3 id=&quot;查看-node-modules-某一文件夹-的体积有多大&quot;&gt;&lt;a href=&quot;#查看-node-modules-某一文件夹-的体积有多大&quot; class=&quot;headerlink&quot; title=&quot;查看 node_modules(某一文件夹) 的体积有多大&quot;&gt;&lt;/a&gt;查看 node_modules(某一文件夹) 的体积有多大&lt;/h3&gt;</summary>
    
    
    
    <category term="webpack" scheme="https://wangyf1024.gitee.io/categories/webpack/"/>
    
    
  </entry>
  
  <entry>
    <title>fetch API 的使用</title>
    <link href="https://wangyf1024.gitee.io/2022/07/11/programming/javascript/fetch/"/>
    <id>https://wangyf1024.gitee.io/2022/07/11/programming/javascript/fetch/</id>
    <published>2022-07-11T08:55:25.000Z</published>
    <updated>2022-07-11T09:42:51.386Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>Fetch API 能够执行 XMLHttpRequest 对象的所有任务，</p><p>Fetch API 则必须是异步。 </p></blockquote><h3 id="简单示例："><a href="#简单示例：" class="headerlink" title="简单示例："></a>简单示例：</h3><p>fetch()只有一个必需的参数 input。多数情况下，这个参数是要获取资源的 URL。这个方法返回 一个期约：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> p = <span class="title function_">fetch</span>(<span class="string">&#x27;../resource/001.txt&#x27;</span>);</span><br><span class="line"><span class="comment">// 获取文本</span></span><br><span class="line">p.<span class="title function_">then</span>(<span class="function"><span class="params">res</span>=&gt;</span></span><br><span class="line">    res.<span class="title function_">text</span>()</span><br><span class="line">).<span class="title function_">then</span>(<span class="function"><span class="params">text</span>=&gt;</span>&#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;文本:&#x27;</span>,text);</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h3 id="响应状态"><a href="#响应状态" class="headerlink" title="响应状态"></a>响应状态</h3><blockquote><p>200 成功  | res.redirected 重定向为 ture 时 状态码 依然是200 不是 301</p><p>状态码在 非 200~299 时，检查对象 res.ok属性 true 则请求成功</p></blockquote><h3 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">fetch(url, options)</span><br></pre></td></tr></table></figure><span id="more"></span><h3 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h3><ul><li>post提交字符串</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">const</span> response = <span class="keyword">await</span> <span class="title function_">fetch</span>(url, &#123;</span><br><span class="line">  <span class="attr">method</span>: <span class="string">&#x27;POST&#x27;</span>,</span><br><span class="line">  <span class="attr">headers</span>: &#123;</span><br><span class="line">    <span class="string">&quot;Content-type&quot;</span>: <span class="string">&quot;application/x-www-form-urlencoded; charset=UTF-8&quot;</span>,</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">body</span>: <span class="string">&#x27;foo=bar&amp;lorem=ipsum&#x27;</span>,</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> json = <span class="keyword">await</span> response.<span class="title function_">json</span>();</span><br></pre></td></tr></table></figure><ul><li>提交表单数据</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> form = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;form&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> response = <span class="keyword">await</span> <span class="title function_">fetch</span>(<span class="string">&#x27;/users&#x27;</span>, &#123;</span><br><span class="line">  <span class="attr">method</span>: <span class="string">&#x27;POST&#x27;</span>,</span><br><span class="line">  <span class="attr">body</span>: <span class="keyword">new</span> <span class="title class_">FormData</span>(form)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><ul><li><strong>文件上传</strong></li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> input = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;input[type=&quot;file&quot;]&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> data = <span class="keyword">new</span> <span class="title class_">FormData</span>();</span><br><span class="line">data.<span class="title function_">append</span>(<span class="string">&#x27;file&#x27;</span>, input.<span class="property">files</span>[<span class="number">0</span>]);</span><br><span class="line">data.<span class="title function_">append</span>(<span class="string">&#x27;user&#x27;</span>, <span class="string">&#x27;foo&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="title function_">fetch</span>(<span class="string">&#x27;/avatars&#x27;</span>, &#123;</span><br><span class="line">  <span class="attr">method</span>: <span class="string">&#x27;POST&#x27;</span>,</span><br><span class="line">  <span class="attr">body</span>: data</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><ul><li><strong>直接上传二进制数据</strong></li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 将 Blob 或 arrayBuffer 数据放在body属性里面</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> blob = <span class="keyword">await</span> <span class="keyword">new</span> <span class="title class_">Promise</span>(<span class="function"><span class="params">resolve</span> =&gt;</span>   </span><br><span class="line">  canvasElem.<span class="title function_">toBlob</span>(resolve,  <span class="string">&#x27;image/png&#x27;</span>)</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> response = <span class="keyword">await</span> <span class="title function_">fetch</span>(<span class="string">&#x27;/article/fetch/post/image&#x27;</span>, &#123;</span><br><span class="line">  <span class="attr">method</span>:  <span class="string">&#x27;POST&#x27;</span>,</span><br><span class="line">  <span class="attr">body</span>: blob</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h4 id="参数配置"><a href="#参数配置" class="headerlink" title="参数配置"></a>参数配置</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">options 完整配置</span><br><span class="line">&#123;</span><br><span class="line">  <span class="attr">method</span>: <span class="string">&quot;GET&quot;</span>,</span><br><span class="line">  <span class="attr">headers</span>: &#123;</span><br><span class="line">    <span class="string">&quot;Content-Type&quot;</span>: <span class="string">&quot;text/plain;charset=UTF-8&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">body</span>: <span class="literal">undefined</span>,</span><br><span class="line">  <span class="attr">referrer</span>: <span class="string">&quot;about:client&quot;</span>,</span><br><span class="line">  <span class="attr">referrerPolicy</span>: <span class="string">&quot;no-referrer-when-downgrade&quot;</span>,</span><br><span class="line">  <span class="attr">mode</span>: <span class="string">&quot;cors&quot;</span>, </span><br><span class="line">  <span class="attr">credentials</span>: <span class="string">&quot;same-origin&quot;</span>,</span><br><span class="line">  <span class="attr">cache</span>: <span class="string">&quot;default&quot;</span>,</span><br><span class="line">  <span class="attr">redirect</span>: <span class="string">&quot;follow&quot;</span>,</span><br><span class="line">  <span class="attr">integrity</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">  <span class="attr">keepalive</span>: <span class="literal">false</span>,</span><br><span class="line">  <span class="attr">signal</span>: <span class="literal">undefined</span>,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="Headers-对象"><a href="#Headers-对象" class="headerlink" title="Headers 对象"></a>Headers 对象</h4><p>Headers 对象提供了以下方法，用来操作标头。</p><blockquote><ul><li><code>Headers.get()</code>：根据指定的键名，返回键值。</li><li><code>Headers.has()</code>： 返回一个布尔值，表示是否包含某个标头。</li><li><code>Headers.set()</code>：将指定的键名设置为新的键值，如果该键名不存在则会添加。</li><li><code>Headers.append()</code>：添加标头。</li><li><code>Headers.delete()</code>：删除标头。</li><li><code>Headers.keys()</code>：返回一个遍历器，可以依次遍历所有键名。</li><li><code>Headers.values()</code>：返回一个遍历器，可以依次遍历所有键值。</li><li><code>Headers.entries()</code>：返回一个遍历器，可以依次遍历所有键值对（<code>[key, value]</code>）。</li><li><code>Headers.forEach()</code>：依次遍历标头，每个标头都会执行一次参数函数。</li></ul></blockquote><h4 id="Response-对象"><a href="#Response-对象" class="headerlink" title="Response 对象"></a>Response 对象</h4><p><code>Response</code>对象根据服务器返回的不同类型的数据，提供了不同的读取方法。</p><blockquote><ul><li><code>response.text()</code>：得到文本字符串。</li><li><code>response.json()</code>：得到 JSON 对象。</li><li><code>response.blob()</code>：得到二进制 Blob 对象。</li><li><code>response.formData()</code>：得到 FormData 表单对象。</li><li><code>response.arrayBuffer()</code>：得到二进制 ArrayBuffer 对象。</li></ul></blockquote><p>Stream 对象只能读取一次，读取完就没了。这意味着，上面五个读取方法，只能使用一个，否则会报错。</p><ul><li><h3 id="Response-clone"><a href="#Response-clone" class="headerlink" title="Response.clone()"></a>Response.clone()</h3><p>  创建<code>Response</code>对象的副本，实现多次读取</p>  <figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> response1 = <span class="keyword">await</span> <span class="title function_">fetch</span>(<span class="string">&#x27;flowers.jpg&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> response2 = response1.<span class="title function_">clone</span>();</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> myBlob1 = <span class="keyword">await</span> response1.<span class="title function_">blob</span>();</span><br><span class="line"><span class="keyword">const</span> myBlob2 = <span class="keyword">await</span> response2.<span class="title function_">blob</span>();</span><br><span class="line"></span><br><span class="line">image1.<span class="property">src</span> = <span class="variable constant_">URL</span>.<span class="title function_">createObjectURL</span>(myBlob1);</span><br><span class="line">image2.<span class="property">src</span> = <span class="variable constant_">URL</span>.<span class="title function_">createObjectURL</span>(myBlob2);</span><br></pre></td></tr></table></figure></li><li><h3 id="Response-body-属性"><a href="#Response-body-属性" class="headerlink" title="Response.body 属性"></a>Response.body 属性</h3><p>  <code>Response.body</code>属性是 Response 对象暴露出的底层接口，返回一个 ReadableStream 对象，供用户操作</p>  <figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 分块读取内容，应用之一就是显示下载的进度</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> response = <span class="keyword">await</span> <span class="title function_">fetch</span>(<span class="string">&#x27;flower.jpg&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> reader = response.<span class="property">body</span>.<span class="title function_">getReader</span>();</span><br><span class="line"></span><br><span class="line"><span class="comment">// 通过请求头获取文件总大小</span></span><br><span class="line"><span class="keyword">const</span> totals = response.<span class="property">headers</span>.<span class="title function_">get</span>(<span class="string">&#x27;Content-length&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> hasDone = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span>(<span class="literal">true</span>) &#123;</span><br><span class="line">    <span class="keyword">const</span> &#123;done, value&#125; = <span class="keyword">await</span> reader.<span class="title function_">read</span>();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (done) &#123;</span><br><span class="line">      <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    hasDone += value.<span class="property">length</span>;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(hasDone / totals)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h4 id="参数"><a href="#参数" class="headerlink" title="参数"></a>参数</h4><ul><li><p><code>method</code>：HTTP 请求的方法，<code>POST</code>、<code>DELETE</code>、<code>PUT</code>都在这个属性设置。</p></li><li><p><code>headers</code>：一个对象，用来定制 HTTP 请求的标头。</p></li><li><p><code>body</code>：POST 请求的数据体。</p><blockquote><p>请求体内容 必须是 Blob、BufferSource、FormData、URLSearchParams、ReadableStream 或 String 的 实例</p></blockquote></li></ul><h5 id="cache"><a href="#cache" class="headerlink" title="cache"></a><strong>cache</strong></h5><p><code>cache</code>属性指定如何处理缓存。可能的取值如下：</p><blockquote><ul><li><code>default</code>：默认值，先在缓存里面寻找匹配的请求。</li><li><code>no-store</code>：直接请求远程服务器，并且不更新缓存。</li><li><code>reload</code>：直接请求远程服务器，并且更新缓存。</li><li><code>no-cache</code>：将服务器资源跟本地缓存进行比较，有新的版本才使用服务器资源，否则使用缓存。</li><li><code>force-cache</code>：缓存优先，只有不存在缓存的情况下，才请求远程服务器。</li><li><code>only-if-cached</code>：只检查缓存，如果缓存里面不存在，将返回504错误。</li></ul></blockquote><h5 id="mode"><a href="#mode" class="headerlink" title="mode"></a><strong>mode</strong></h5><p><code>mode</code>属性指定请求的模式。可能的取值如下：</p><blockquote><ul><li><code>cors</code>：默认值，允许跨域请求。</li><li><code>same-origin</code>：只允许同源请求。</li><li><code>no-cors</code>：请求方法只限于 GET、POST 和 HEAD，并且只能使用有限的几个简单标头，不能添加跨域的复杂标头，相当于提交表单所能发出的请求。</li></ul></blockquote><h5 id="credentials"><a href="#credentials" class="headerlink" title="credentials"></a><strong>credentials</strong></h5><p><code>credentials</code>属性指定是否发送 Cookie。可能的取值如下：</p><blockquote><ul><li><code>same-origin</code>：默认值，同源请求时发送 Cookie，跨域请求时不发送。</li><li><code>include</code>：不管同源请求，还是跨域请求，一律发送 Cookie。</li><li><code>omit</code>：一律不发送。</li></ul></blockquote><p>跨域请求发送 Cookie，需要将<code>credentials</code>属性设为<code>include</code>。</p><blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_">fetch</span>(<span class="string">&#x27;http://another.com&#x27;</span>, &#123;</span><br><span class="line">  <span class="attr">credentials</span>: <span class="string">&quot;include&quot;</span></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></blockquote><h5 id="signal"><a href="#signal" class="headerlink" title="signal"></a><strong>signal</strong></h5><p><code>signal</code>属性指定一个 AbortSignal 实例，用于取消<code>fetch()</code>请求，详见下一节。</p><p><strong>keepalive</strong></p><p><code>keepalive</code>属性用于页面卸载时，告诉浏览器在后台保持连接，继续发送数据。</p><p>一个典型的场景就是，用户离开网页时，脚本向服务器提交一些用户行为的统计信息。这时，如果不用<code>keepalive</code>属性，数据可能无法发送，因为浏览器已经把页面卸载了。</p><blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">window</span>.<span class="property">onunload</span> = <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="title function_">fetch</span>(<span class="string">&#x27;/analytics&#x27;</span>, &#123;</span><br><span class="line">    <span class="attr">method</span>: <span class="string">&#x27;POST&#x27;</span>,</span><br><span class="line">    <span class="attr">body</span>: <span class="string">&quot;statistics&quot;</span>,</span><br><span class="line">    <span class="attr">keepalive</span>: <span class="literal">true</span></span><br><span class="line">  &#125;);</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></blockquote><h5 id="redirect"><a href="#redirect" class="headerlink" title="redirect"></a><strong>redirect</strong></h5><p><code>redirect</code>属性指定 HTTP 跳转的处理方法。可能的取值如下：</p><blockquote><ul><li><code>follow</code>：默认值，<code>fetch()</code>跟随 HTTP 跳转。</li><li><code>error</code>：如果发生跳转，<code>fetch()</code>就报错。</li><li><code>manual</code>：<code>fetch()</code>不跟随 HTTP 跳转，但是<code>response.url</code>属性会指向新的 URL，<code>response.redirected</code>属性会变为<code>true</code>，由开发者自己决定后续如何处理跳转。</li></ul></blockquote><p><strong>integrity</strong></p><p><code>integrity</code>属性指定一个哈希值，用于检查 HTTP 回应传回的数据是否等于这个预先设定的哈希值。</p><p>比如，下载文件时，检查文件的 SHA-256 哈希值是否相符，确保没有被篡改。</p><blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_">fetch</span>(<span class="string">&#x27;http://site.com/file&#x27;</span>, &#123;</span><br><span class="line">  <span class="attr">integrity</span>: <span class="string">&#x27;sha256-abcdef&#x27;</span></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></blockquote><h5 id="referrer"><a href="#referrer" class="headerlink" title="referrer"></a><strong>referrer</strong></h5><p><code>referrer</code>属性用于设定<code>fetch()</code>请求的<code>referer</code>标头。</p><p>这个属性可以为任意字符串，也可以设为空字符串（即不发送<code>referer</code>标头）。</p><blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_">fetch</span>(<span class="string">&#x27;/page&#x27;</span>, &#123;</span><br><span class="line">  <span class="attr">referrer</span>: <span class="string">&#x27;&#x27;</span></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></blockquote><h5 id="referrerPolicy"><a href="#referrerPolicy" class="headerlink" title="referrerPolicy"></a><strong>referrerPolicy</strong></h5><p><code>referrerPolicy</code>属性用于设定<code>Referer</code>标头的规则。可能的取值如下：</p><blockquote><ul><li><code>no-referrer-when-downgrade</code>：默认值，总是发送<code>Referer</code>标头，除非从 HTTPS 页面请求 HTTP 资源时不发送。</li><li><code>no-referrer</code>：不发送<code>Referer</code>标头。</li><li><code>origin</code>：<code>Referer</code>标头只包含域名，不包含完整的路径。</li><li><code>origin-when-cross-origin</code>：同源请求<code>Referer</code>标头包含完整的路径，跨域请求只包含域名。</li><li><code>same-origin</code>：跨域请求不发送<code>Referer</code>，同源请求发送。</li><li><code>strict-origin</code>：<code>Referer</code>标头只包含域名，HTTPS 页面请求 HTTP 资源时不发送<code>Referer</code>标头。</li><li><code>strict-origin-when-cross-origin</code>：同源请求时<code>Referer</code>标头包含完整路径，跨域请求时只包含域名，HTTPS 页面请求 HTTP 资源时不发送该标头。</li><li><code>unsafe-url</code>：不管什么情况，总是发送<code>Referer</code>标头。</li></ul></blockquote><h4 id="中断请求"><a href="#中断请求" class="headerlink" title="中断请求"></a>中断请求</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Fetch API 支持通过 AbortController/AbortSignal 对中断请求。</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> abortController = <span class="keyword">new</span> <span class="title class_">AbortController</span>(); </span><br><span class="line"></span><br><span class="line"><span class="title function_">fetch</span>(<span class="string">&#x27;../resource/test.pdf&#x27;</span>, &#123; <span class="attr">signal</span>: abortController.<span class="property">signal</span> &#125;) </span><br><span class="line"></span><br><span class="line">.<span class="title function_">catch</span>(<span class="function">() =&gt;</span> <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;中断请求 aborted!&#x27;</span>)); </span><br><span class="line"></span><br><span class="line"><span class="comment">// 10 毫秒后中断请求 </span></span><br><span class="line"></span><br><span class="line"><span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> abortController.<span class="title function_">abort</span>(), <span class="number">10</span>); </span><br><span class="line"></span><br><span class="line"><span class="comment">// 已经中断</span></span><br></pre></td></tr></table></figure><blockquote><p>fetch 不能实现上传进度这部分</p></blockquote>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;Fetch API 能够执行 XMLHttpRequest 对象的所有任务，&lt;/p&gt;
&lt;p&gt;Fetch API 则必须是异步。 &lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;简单示例：&quot;&gt;&lt;a href=&quot;#简单示例：&quot; class=&quot;headerlink&quot; title=&quot;简单示例：&quot;&gt;&lt;/a&gt;简单示例：&lt;/h3&gt;&lt;p&gt;fetch()只有一个必需的参数 input。多数情况下，这个参数是要获取资源的 URL。这个方法返回 一个期约：&lt;/p&gt;
&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; p = &lt;span class=&quot;title function_&quot;&gt;fetch&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&amp;#x27;../resource/001.txt&amp;#x27;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 获取文本&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;p.&lt;span class=&quot;title function_&quot;&gt;then&lt;/span&gt;(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;params&quot;&gt;res&lt;/span&gt;=&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    res.&lt;span class=&quot;title function_&quot;&gt;text&lt;/span&gt;()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;).&lt;span class=&quot;title function_&quot;&gt;then&lt;/span&gt;(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;params&quot;&gt;text&lt;/span&gt;=&amp;gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;title function_&quot;&gt;log&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&amp;#x27;文本:&amp;#x27;&lt;/span&gt;,text);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h3 id=&quot;响应状态&quot;&gt;&lt;a href=&quot;#响应状态&quot; class=&quot;headerlink&quot; title=&quot;响应状态&quot;&gt;&lt;/a&gt;响应状态&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;200 成功  | res.redirected 重定向为 ture 时 状态码 依然是200 不是 301&lt;/p&gt;
&lt;p&gt;状态码在 非 200~299 时，检查对象 res.ok属性 true 则请求成功&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;语法&quot;&gt;&lt;a href=&quot;#语法&quot; class=&quot;headerlink&quot; title=&quot;语法&quot;&gt;&lt;/a&gt;语法&lt;/h3&gt;&lt;figure class=&quot;highlight plaintext&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;fetch(url, options)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</summary>
    
    
    
    <category term="js" scheme="https://wangyf1024.gitee.io/categories/js/"/>
    
    
    <category term="js" scheme="https://wangyf1024.gitee.io/tags/js/"/>
    
  </entry>
  
  <entry>
    <title>方便快捷的实现图片裁剪</title>
    <link href="https://wangyf1024.gitee.io/2022/07/11/programming/jsplugin/%E5%9B%BE%E7%89%87%E8%A3%81%E5%89%AA/"/>
    <id>https://wangyf1024.gitee.io/2022/07/11/programming/jsplugin/%E5%9B%BE%E7%89%87%E8%A3%81%E5%89%AA/</id>
    <published>2022-07-11T02:23:10.000Z</published>
    <updated>2022-07-13T06:39:29.228Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>JavaScript image cropper.</p><p><a href="https://fengyuanchen.github.io/cropperjs/">官网</a></p><p><a href="https://hub.nuaa.cf/fengyuanchen/cropperjs/blob/main/README.md">1.5.12文档</a></p></blockquote><h3 id="CDN-地址"><a href="#CDN-地址" class="headerlink" title="CDN 地址"></a>CDN 地址</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 2.0</span></span><br><span class="line">&lt;link href=<span class="string">&quot;https://cdn.bootcdn.net/ajax/libs/cropperjs/2.0.0-alpha.1/cropper.min.css&quot;</span> rel=<span class="string">&quot;stylesheet&quot;</span>&gt;</span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.bootcdn.net/ajax/libs/cropperjs/2.0.0-alpha.1/cropper.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 1.5.12</span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">link</span> <span class="attr">href</span>=<span class="string">&quot;https://cdn.bootcdn.net/ajax/libs/cropperjs/1.5.12/cropper.min.css&quot;</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.bootcdn.net/ajax/libs/cropperjs/1.5.12/cropper.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/wyf195075595/images/main/blog/1531383-20191201202454722-1046050136.jpg" alt="img"></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"># cropper - 裁剪图片 - <span class="title class_">IE9</span>+</span><br><span class="line"></span><br><span class="line">## 使用 cropperjs</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Cropper</span> <span class="keyword">from</span> <span class="string">&#x27;cropperjs&#x27;</span></span><br><span class="line"><span class="keyword">import</span> <span class="string">&#x27;cropperjs/dist/cropper.css&#x27;</span></span><br><span class="line"><span class="variable language_">this</span>.<span class="property">myCropper</span> = <span class="keyword">new</span> <span class="title class_">Cropper</span>(<span class="string">&#x27;被裁剪对象&#x27;</span>, <span class="string">&#x27;配置对象&#x27;</span>) <span class="comment">//返回一个cropper对象</span></span><br><span class="line"></span><br><span class="line"><span class="variable language_">this</span>.<span class="property">myCropper</span>.<span class="title function_">getCroppedCanvas</span>().<span class="title function_">toDataURL</span>(<span class="string">&#x27;image/jpeg&#x27;</span>) <span class="comment">//拿到裁剪后的base64的图片</span></span><br><span class="line"><span class="variable language_">this</span>.<span class="property">myCropper</span>.<span class="title function_">getCropBoxData</span>();    <span class="comment">//获取裁剪框数据</span></span><br><span class="line"><span class="variable language_">this</span>.<span class="property">myCropper</span>.<span class="title function_">setCropBoxData</span>();    <span class="comment">//设置裁剪框数据</span></span><br><span class="line"><span class="variable language_">this</span>.<span class="property">myCropper</span>.<span class="title function_">getCanvasData</span>();      <span class="comment">//获取图片数据</span></span><br><span class="line"><span class="variable language_">this</span>.<span class="property">myCropper</span>.<span class="title function_">setCanvasData</span>();      <span class="comment">//设置图片数据</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><span id="more"></span><h3 id="示例：1-5-12-版本"><a href="#示例：1-5-12-版本" class="headerlink" title="示例：1.5.12 版本"></a>示例：1.5.12 版本</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;/css/cropper.min.css&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;/js/cropper.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">    <span class="selector-class">.img-box</span> &#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">width</span>: <span class="number">100%</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">height</span>: auto;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">display</span>: flex;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css">    <span class="selector-class">.shear</span> &#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">width</span>: <span class="number">800px</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">height</span>: <span class="number">600px</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">border</span>: <span class="number">1px</span> solid skyblue;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css">    <span class="selector-id">#previewBox</span>,</span></span><br><span class="line"><span class="language-css">    <span class="selector-id">#previewBoxRound</span> &#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">width</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">height</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">box-sizing</span>: border-box;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">border</span>: <span class="number">1px</span> solid skyblue;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">overflow</span>: hidden;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css">    <span class="selector-id">#previewBox</span> &#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">border-radius</span>: <span class="number">50%</span>;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">&quot;layui-btn layui-btn-normal&quot;</span> <span class="attr">id</span>=<span class="string">&quot;btn-clip&quot;</span>&gt;</span>裁剪<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;img-box&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;previewBox&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;previewBoxRound&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;shear&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">img</span> <span class="attr">id</span>=<span class="string">&quot;testImg&quot;</span> <span class="attr">src</span>=<span class="string">&quot;/images/b2.png&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> cropper = <span class="keyword">new</span> <span class="title class_">Cropper</span>(image, &#123;</span><br><span class="line">    <span class="attr">aspectRatio</span>: <span class="number">1</span> / <span class="number">1</span>, <span class="comment">// 设置裁剪框为固定的宽高比</span></span><br><span class="line">    <span class="attr">minContainerWidth</span>: <span class="number">450</span>,   <span class="comment">//容器最小的宽度</span></span><br><span class="line">    <span class="attr">minContainerHeight</span>: <span class="number">250</span>,  <span class="comment">//容器最小的高度</span></span><br><span class="line">    <span class="attr">dragMode</span>: <span class="string">&#x27;move&#x27;</span>,         <span class="comment">//设置裁剪框为可以移动</span></span><br><span class="line">    <span class="attr">viewMode</span>: <span class="number">1</span>, <span class="comment">// </span></span><br><span class="line">    <span class="comment">// autoCrop: false,// 默认不剪切，双击图片开启剪切</span></span><br><span class="line">    <span class="attr">preview</span>:[ </span><br><span class="line">        <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;previewBox&#x27;</span>), <span class="comment">//设置我们需要添加实时预览的地方</span></span><br><span class="line">        <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;previewBoxRound&#x27;</span>)</span><br><span class="line">    ],</span><br><span class="line">    <span class="attr">crop</span>: <span class="keyword">function</span>(<span class="params">e</span>) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(e.<span class="property">detail</span>.<span class="property">x</span>);</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(e.<span class="property">detail</span>.<span class="property">y</span>);</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(e.<span class="property">detail</span>.<span class="property">width</span>);</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(e.<span class="property">detail</span>.<span class="property">height</span>);</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(e.<span class="property">detail</span>.<span class="property">rotate</span>);</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(e.<span class="property">detail</span>.<span class="property">scaleX</span>);</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(e.<span class="property">detail</span>.<span class="property">scaleY</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br><span class="line"><span class="comment">// 裁剪</span></span><br><span class="line">oBtnClip.<span class="title function_">addEventListener</span>(<span class="string">&#x27;click&#x27;</span>, <span class="keyword">function</span>(<span class="params">e</span>) &#123;</span><br><span class="line">    <span class="comment">// 返回 base64位 格式图片</span></span><br><span class="line">    <span class="keyword">let</span> data = cropper.<span class="title function_">getCroppedCanvas</span>().<span class="title function_">toDataURL</span>(<span class="string">&#x27;image/jpeg&#x27;</span>);</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(data);</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/wyf195075595/images/main/blog/image-20220711113054232.png" alt="image-20220711113054232"></p><h3 id="文档"><a href="#文档" class="headerlink" title="文档"></a>文档</h3><h4 id="配置对象"><a href="#配置对象" class="headerlink" title="配置对象"></a>配置对象</h4><blockquote><p><a href="https://github.com/fengyuanchen/cropperjs">https://github.com/fengyuanchen/cropperjs</a><br><strong>注意：第一个值为默认值</strong></p></blockquote><ul><li>viewMode 视图控制<ul><li>0 无限制</li><li>1 限制裁剪框不能超出图片的范围</li><li>2 限制裁剪框不能超出图片的范围 且图片填充模式为 cover 最长边填充</li><li>3 限制裁剪框不能超出图片的范围 且图片填充模式为 contain 最短边填充</li></ul></li><li>dragMode 拖拽图片模式<ul><li>crop 形成新的裁剪框</li><li>move 图片可移动</li><li>none 什么也没有</li></ul></li><li>initialAspectRatio 裁剪框宽高比的初始值 默认与图片宽高比相同 只有在aspectRatio没有设置的情况下可用</li><li>aspectRatio 设置裁剪框为固定的宽高比</li><li>data 之前存储的裁剪后的数据 在初始化时会自动设置 只有在autoCrop设置为true时可用</li><li>preview 预览 设置一个区域容器预览裁剪后的结果<ul><li>Element, Array (elements), NodeList or String (selector)</li></ul></li><li>responsive 在窗口尺寸调整后 进行响应式的重渲染 默认true</li><li>restore 在窗口尺寸调整后 恢复被裁剪的区域 默认true</li><li>checkCrossOrigin 检查图片是否跨域 默认true 如果是 会在被复制的图片元素上加上属性crossOrigin 并且在src上加上一个时间戳 避免重加载图片时因为浏览器缓存而加载错误</li><li>checkOrientation 检查图片的方向信息（仅JPEG图片有）默认true 在旋转图片时会对图片方向值做一些处理 以解决IOS设备上的一些问题</li><li>modal 是否显示图片和裁剪框之间的黑色蒙版 默认true</li><li>guides 是否显示裁剪框的虚线 默认true</li><li>center 是否显示裁剪框中间的 ‘+’ 指示器 默认true</li><li>highlight 是否显示裁剪框上面的白色蒙版 （很淡）默认true</li><li>background 是否在容器内显示网格状的背景 默认true</li><li>autoCrop 允许初始化时自动的裁剪图片 配合 data 使用 默认true</li><li>autoCropArea 设置裁剪区域占图片的大小 值为 0-1 默认 0.8 表示 80%的区域</li><li>movable 是否可以移动图片 默认true</li><li>rotatable 是否可以旋转图片 默认true</li><li>scalable 是否可以缩放图片（可以改变长宽） 默认true</li><li>zoomable 是否可以缩放图片（改变焦距） 默认true</li><li>zoomOnTouch 是否可以通过拖拽触摸缩放图片 默认true</li><li>zoomOnWheel 是否可以通过鼠标滚轮缩放图片 默认true</li><li>wheelZoomRatio 设置鼠标滚轮缩放的灵敏度 默认 0.1</li><li>cropBoxMovable 是否可以拖拽裁剪框 默认true</li><li>cropBoxResizable 是否可以改变裁剪框的尺寸 默认true</li><li>toggleDragModeOnDblclick 是否可以通过双击切换拖拽图片模式（move和crop）默认true 当拖拽图片模式为none时不可切换 该设置必须浏览器支持双击事件</li><li>minContainerWidth（200）、minContainerHeight（100）、minCanvasWidth（0）、minCanvasHeight（0）、minCropBoxWidth（0）、minCropBoxHeight（0） 容器、图片、裁剪框的 最小宽高 括号内为默认值 注意 裁剪框的最小高宽是相对与页面而言的 并非相对图片</li></ul><h4 id="方法"><a href="#方法" class="headerlink" title="方法"></a>方法</h4><p><strong>注意：如果方法没有被设置返回任何值，那么它会返回一个cropper的实例 因此多个方法可以使用链式写法</strong></p><ul><li>crop() 手动显示裁剪框</li><li>reset() 重置图片和裁剪框为初始状态</li><li>replace(url[, hasSameSize]) 替换图片路径并且重建裁剪框 <ul><li>url 新路径</li><li>hasSameSize 默认值false 设置为true表示新老图片尺寸一样 只需要更换路径无需重建裁剪框</li></ul></li><li>enable() 解冻 裁剪框</li><li>disable() 冻结 裁剪框</li><li>destroy() 摧毁裁剪框并且移除cropper实例</li><li>move(offsetX[, offsetY]) 移动图片指定距离 一个参数代表横纵向移动距离一样</li><li>moveTo(x[, y]) 移动图片到一个指定的点 一个参数代表横纵向移动距离一样</li><li>zoom(ratio) 缩放 ratio大于零是放大 小于零缩小</li><li>zoomTo(ratio[, pivot]) 缩放并设置中心点的位置</li><li>rotate(degree) 旋转 类似css</li><li>rotateTo(degree) 旋转到绝对角度</li><li>scale(scaleX[, scaleY])、scaleX(scaleX)、scaleY(scaleY) 缩放 一个参数代表横纵向缩放值一样</li><li>getData([rounded]) 返回裁剪区域基于原图片!原尺寸!的位置和尺寸 rounded默认为false 表示是否显示四舍五入后的数据 有了这些数据可以直接在原图上进行裁剪显示</li><li>setData(data) 改变裁剪区域基于原图的位置和尺寸 仅当viewMode 不为0时有效</li><li>getContainerData()、getImageData()、getCanvasData()、setCanvasData(data)、getCropBoxData()、setCropBoxData(data) 容器、图片容器（画布）、图片、裁剪区域相对容器的数据设置和获取</li><li>getCroppedCanvas([options]) 得到被裁剪图片的一个canvas对象 options设置这个canvas的一些数据<ul><li>width、height、minWidth、minHeight、maxWidth、maxHeight、fillColor、imageSmoothingEnabled（图片是否是光滑的 默认true）、imageSmoothingQuality（图片的质量 默认low 还有medium、high）</li></ul></li><li>setAspectRatio(aspectRatio) 改变裁剪区域的宽高比</li><li>setDragMode([mode]) 设置拖拽图片模式</li></ul><h4 id="事件"><a href="#事件" class="headerlink" title="事件"></a>事件</h4><ul><li>ready 渲染前（图片已经被加载、cropper实例已经准备完毕）的准备工作事件 </li><li>cropstart、cropmove、cropend、crop 开始画裁剪框（或画布）、画裁剪框（或画布）的中途、裁剪框（或画布）画完、进行裁剪事件 event.detail.originalEvent、event.detail.action<ul><li>当autoCrop为true crop事件会在ready之前触发</li></ul></li><li>zoom 裁剪框缩放事件</li></ul>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;JavaScript image cropper.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://fengyuanchen.github.io/cropperjs/&quot;&gt;官网&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://hub.nuaa.cf/fengyuanchen/cropperjs/blob/main/README.md&quot;&gt;1.5.12文档&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;CDN-地址&quot;&gt;&lt;a href=&quot;#CDN-地址&quot; class=&quot;headerlink&quot; title=&quot;CDN 地址&quot;&gt;&lt;/a&gt;CDN 地址&lt;/h3&gt;&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 2.0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;link href=&lt;span class=&quot;string&quot;&gt;&amp;quot;https://cdn.bootcdn.net/ajax/libs/cropperjs/2.0.0-alpha.1/cropper.min.css&amp;quot;&lt;/span&gt; rel=&lt;span class=&quot;string&quot;&gt;&amp;quot;stylesheet&amp;quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;language-xml&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;script&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;src&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&amp;quot;https://cdn.bootcdn.net/ajax/libs/cropperjs/2.0.0-alpha.1/cropper.min.js&amp;quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 1.5.12&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;language-xml&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;link&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;href&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&amp;quot;https://cdn.bootcdn.net/ajax/libs/cropperjs/1.5.12/cropper.min.css&amp;quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;rel&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&amp;quot;stylesheet&amp;quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;language-xml&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;script&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;src&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&amp;quot;https://cdn.bootcdn.net/ajax/libs/cropperjs/1.5.12/cropper.min.js&amp;quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;



&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/wyf195075595/images/main/blog/1531383-20191201202454722-1046050136.jpg&quot; alt=&quot;img&quot;&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;# cropper - 裁剪图片 - &lt;span class=&quot;title class_&quot;&gt;IE9&lt;/span&gt;+&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;## 使用 cropperjs&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;title class_&quot;&gt;Cropper&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&amp;#x27;cropperjs&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&amp;#x27;cropperjs/dist/cropper.css&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;variable language_&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;property&quot;&gt;myCropper&lt;/span&gt; = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;title class_&quot;&gt;Cropper&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&amp;#x27;被裁剪对象&amp;#x27;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&amp;#x27;配置对象&amp;#x27;&lt;/span&gt;) &lt;span class=&quot;comment&quot;&gt;//返回一个cropper对象&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;variable language_&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;property&quot;&gt;myCropper&lt;/span&gt;.&lt;span class=&quot;title function_&quot;&gt;getCroppedCanvas&lt;/span&gt;().&lt;span class=&quot;title function_&quot;&gt;toDataURL&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&amp;#x27;image/jpeg&amp;#x27;&lt;/span&gt;) &lt;span class=&quot;comment&quot;&gt;//拿到裁剪后的base64的图片&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;variable language_&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;property&quot;&gt;myCropper&lt;/span&gt;.&lt;span class=&quot;title function_&quot;&gt;getCropBoxData&lt;/span&gt;();    &lt;span class=&quot;comment&quot;&gt;//获取裁剪框数据&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;variable language_&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;property&quot;&gt;myCropper&lt;/span&gt;.&lt;span class=&quot;title function_&quot;&gt;setCropBoxData&lt;/span&gt;();    &lt;span class=&quot;comment&quot;&gt;//设置裁剪框数据&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;variable language_&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;property&quot;&gt;myCropper&lt;/span&gt;.&lt;span class=&quot;title function_&quot;&gt;getCanvasData&lt;/span&gt;();      &lt;span class=&quot;comment&quot;&gt;//获取图片数据&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;variable language_&quot;&gt;this&lt;/span&gt;.&lt;span class=&quot;property&quot;&gt;myCropper&lt;/span&gt;.&lt;span class=&quot;title function_&quot;&gt;setCanvasData&lt;/span&gt;();      &lt;span class=&quot;comment&quot;&gt;//设置图片数据&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</summary>
    
    
    
    <category term="js" scheme="https://wangyf1024.gitee.io/categories/js/"/>
    
    
    <category term="插件" scheme="https://wangyf1024.gitee.io/tags/%E6%8F%92%E4%BB%B6/"/>
    
  </entry>
  
  <entry>
    <title>有趣的工具</title>
    <link href="https://wangyf1024.gitee.io/2022/07/08/programming/others/%E6%9C%89%E8%B6%A3%E7%9A%84%E5%B7%A5%E5%85%B7/"/>
    <id>https://wangyf1024.gitee.io/2022/07/08/programming/others/%E6%9C%89%E8%B6%A3%E7%9A%84%E5%B7%A5%E5%85%B7/</id>
    <published>2022-07-08T10:23:10.000Z</published>
    <updated>2022-10-17T03:39:10.631Z</updated>
    
    <content type="html"><![CDATA[<h3 id="BaseMap"><a href="#BaseMap" class="headerlink" title="BaseMap"></a><a href="https://github.com/bojue/BaseMap">BaseMap</a></h3><blockquote><p>一个开源的机房平面图（园区，楼栋，楼层，房间）绘制工具，也可用来生成办公室、工厂、园区的平面图</p><p><a href="https://github.com/bojue/BaseMap">https://github.com/bojue/BaseMap</a></p></blockquote><h3 id="VCSLabel"><a href="#VCSLabel" class="headerlink" title="VCSLabel"></a><a href="https://github.com/pxzxj/VCSLabel">VCSLabel</a></h3><blockquote><p>一款 Intellij IDEA 插件（也可用于WebStorm、PyCharm），显示每个文件的最后提交时间和提交人。</p></blockquote><span id="more"></span><h3 id="Remind"><a href="#Remind" class="headerlink" title="Remind"></a><a href="https://github.com/luvsic3/remind">Remind</a></h3><blockquote><p>一个简单的网页版思维脑图实现，可以用在自己项目里面。</p></blockquote><p><a href="https://deskreen.com/">Deskreen</a></p><blockquote><p>一个屏幕分享软件，可以把桌面电脑的屏幕（Windows、MacOS、Linux）分享到局域网内的任意设备，只要对方有浏览器就可以接收。</p></blockquote><h3 id="iTab"><a href="#iTab" class="headerlink" title="iTab"></a><a href="https://www.itab.link/">iTab</a></h3><blockquote><p>一个浏览器插件，提供大量选项，让你定制浏览器空白标签页。（@SharingMan 投稿）</p></blockquote><h3 id="SingleFile"><a href="#SingleFile" class="headerlink" title="SingleFile"></a><a href="https://github.com/gildas-lormeau/SingleFile">SingleFile</a></h3><blockquote><p>浏览器保存网页时，默认会生成一个 HTML 文件和一个文件夹。这个插件可以将网页的所有内容保存成单个 HTML 文件，把外部 JavaScript 和 CSS 文件变成页内脚本，并把图片都改成页内 Base64 字符串。</p></blockquote><h3 id="mpv"><a href="#mpv" class="headerlink" title="mpv"></a><a href="https://mpv.io/">mpv</a></h3><blockquote><p>一个命令行的视频播放器。</p></blockquote><h3 id="window-js"><a href="#window-js" class="headerlink" title="window.js"></a><a href="https://windowjs.org/">window.js</a></h3><blockquote><p>一个跨平台的命令行工具，可以执行 JS 脚本在桌面新建一个窗口，进行 canvas 作图。我想不出它有什么用，但是挺有意思的。</p></blockquote><h3 id="SyncedStore"><a href="#SyncedStore" class="headerlink" title="SyncedStore"></a><a href="https://syncedstore.org/docs/">SyncedStore</a></h3><blockquote><p>一个 JS 的实时同步库，允许多人实时协作，基于 CRDT 方法。</p></blockquote><h3 id="LeetCode-算法训练营"><a href="#LeetCode-算法训练营" class="headerlink" title="LeetCode 算法训练营"></a><a href="https://leetcode.com/">LeetCode</a> 算法训练营</h3><blockquote><p> 是一个世界著名的在线题库，训练编程能力，其中的很多题目都是大公司的面试真题。</p></blockquote><h3 id="nginx-playground"><a href="#nginx-playground" class="headerlink" title="nginx playground"></a><a href="https://nginx-playground.wizardzines.com/">nginx playground</a></h3><blockquote><p>一个线上的 nginx 游乐场。你可以在网页上填写 nginx 配置文件，然后在线启动一个 nginx 实例。接着，你输入各种 curl 命令，与这个实例互动。</p></blockquote><h3 id="Denoflow"><a href="#Denoflow" class="headerlink" title="Denoflow"></a><a href="https://github.com/denoflow/denoflow">Denoflow</a></h3><blockquote><p>一个自动化工作流工具，只要本地安装 Deno，然后使用 Yaml 格式写一个任务配置，就能执行，相当于一个轻量级的本地化 GitHub Actions 替代品</p></blockquote><h3 id="Code2flow"><a href="#Code2flow" class="headerlink" title="Code2flow"></a><a href="https://github.com/scottrogowski/code2flow">Code2flow</a></h3><blockquote><p>Code2flow为动态编程语言生成调用图。Code2flow支持Python、JavaScript、Ruby和PHP。</p></blockquote><h3 id="JavaScript-Temporal-API-简介（英文）"><a href="#JavaScript-Temporal-API-简介（英文）" class="headerlink" title="JavaScript Temporal API 简介（英文）"></a><a href="https://blog.openreplay.com/is-it-time-for-the-javascript-temporal-api">JavaScript Temporal API 简介</a>（英文）</h3><blockquote><p>Temporal API 是 JavaScript 下一代日期和时间的标准库，目前是第三阶段提案。本文对这个 API 做一个简单介绍。</p></blockquote><h3 id="MockingBird"><a href="#MockingBird" class="headerlink" title="MockingBird"></a><a href="https://github.com/babysor/MockingBird">MockingBird</a></h3><blockquote><p>一个基于机器学习的中文语音克隆库，只要5秒的原始讲话录音，就能克隆该声音，让它说出任意给定文本。</p></blockquote><h3 id="Paint-of-Persia"><a href="#Paint-of-Persia" class="headerlink" title="Paint of Persia"></a><a href="https://dunin.itch.io/ptop">Paint of Persia</a></h3><blockquote><p>这个工具让你可以在屏幕任何一个窗口，框选一部分内容，将其变成像素画。</p></blockquote><h3 id="五笔输入法7天速成"><a href="#五笔输入法7天速成" class="headerlink" title="五笔输入法7天速成"></a><a href="https://wubi.yantuz.cn/">五笔输入法7天速成</a></h3><blockquote><p>作者结合自身学习经历，收集整理了五笔输入法相关知识，按照每天2-3小时的时间，结合五笔练习小游戏，预计一周时间即可掌握五笔输入法。</p></blockquote><h3 id="妹子图片"><a href="#妹子图片" class="headerlink" title="妹子图片"></a>妹子图片</h3><blockquote><p><a href="https://bak.yantuz.cn:8000/mmPic/">https://bak.yantuz.cn:8000/mmPic/</a>    随机返回一张妹子图片</p></blockquote><h3 id="国产文档工具-ShowDoc"><a href="#国产文档工具-ShowDoc" class="headerlink" title="国产文档工具 ShowDoc"></a>国产文档工具 <a href="https://www.showdoc.com.cn/">ShowDoc</a></h3><blockquote><p>它主要解决这样一个问题：小团队或者个人开发者，希望有一个开箱即用的文档中心，能够快速地生成、展示、搜索文档，还能够多人协作，划分权限，并且还有桌面的和手机的客户端。 如果你也有这种需求，不妨试试看这个工具。</p></blockquote><p>它的代码完全开源，放在 GitHub 上面，是一个热门项目，超过9000颗星。可以放心使用。</p><p>如果你自己有服务器，安装很简单，一行命令就可以了，底层的 Docker 容器自动帮你部署好。Windows 环境也支持，但是安装稍微复杂一点。启动服务后，本机浏览器访问 localhost:4999 ，你就拥有了一个全功能的文档中心，就这么简单。只要绑定域名，就能对外访问。</p><p>网站首页上，默认有几个示例仓库，可以点进去看看。</p><p>除了常用的文档库和电子表格库，它还有两个技术文档的特色功能。一个是 API 文档库，解析源码注释，自动生成 API 的说明文档。另一个是数据字典文档，解析数据库结构，自动生成数据库每张表的说明文档。</p><p>为了配合软件 API 文档的生成，官方还特别开发了一个独立服务 RunApi，用来模拟定制 HTTP 请求，完成接口测试、自动流程测试、Mock 数据等功能，类似于 Postman，但它是完全免费的。并且，在调试 API 的过程中，自动生成文档到 Showdoc，极大提高团队的效率。平时调试 API 接口，也可以使用这个服务。</p><p>所有 ShowDoc 文档仓库都可以使用 API 自动创建和批量导入，也可以导出为 Word 或 Markdown 文件。每个团队除了公共仓库，成员个人还可以新建私密仓库。</p><p>如果你没有或者不想维护自己的服务器，可以使用官方的在线版托管文档，不超过5人的团队都是免费的。对于那些自己架设服务的团队，官方提供收费技术支持，帮助维护。</p><h3 id="如何优化-node-项目的-docker-镜像"><a href="#如何优化-node-项目的-docker-镜像" class="headerlink" title="如何优化 node 项目的 docker 镜像"></a><a href="https://juejin.cn/post/6991689670027542564">如何优化 node 项目的 docker 镜像</a></h3><blockquote><p>作者介绍如何一步步将一个 Node.js 应用的 Docker 镜像文件，从 1.06G 压缩到 73.4M，构建速度从 29.6 秒提高到 1.3 秒</p></blockquote><h3 id="KubeSphere"><a href="#KubeSphere" class="headerlink" title="KubeSphere"></a>KubeSphere</h3><blockquote><p>你可能听说过 K8s，它是谷歌公司的开源软件 Kubernetes（K 和 s 之间有8个字母），作用就是调度和管理容器。</p><p>Docker 的标志非常像一艘集装箱船，K8s 则像是一个控制轮船的舵盘，这就是两者的关系。想象一下，成百上千个 Docker 容器分布在不同的公有云、私有云以及边缘节点，整合成一个云原生应用，在同一个平台进行统一调度和运维，这就是 K8s 的作用。</p><p>本周向大家介绍一个开源的国产 K8s 管理平台：KubeSphere。</p><p>它的最大特点就是易用和高度产品化，有一个体验非常优秀的控制台，让不熟悉容器的用户以非常低的成本上手，快速使用各种高级功能。整个操作过程都是向导式图形化的 UI。</p></blockquote><p>本周向大家介绍一个开源的国产 K8s 管理平台：<a href="https://github.com/kubesphere/kubesphere">KubeSphere</a>。</p><p>它的最大特点就是易用和高度产品化，有一个体验非常优秀的控制台，让不熟悉容器的用户以非常低的成本上手，快速使用各种高级功能。整个操作过程都是向导式图形化的 UI。</p><p>如果你们公司想尝试 K8s，或者你个人想学习 K8s，建议可以从 KubeSphere 入手。它可以快速<a href="https://github.com/kubesphere/kubekey#quick-start">从零搭建 K8s 集群</a>，也可以只用两条命令，就部署到现有的 K8s 之上。官方有<a href="https://demo.kubesphere.io/login">线上 Demo</a>（账号：demo1 / Demo123），以及友好的<a href="https://kubesphere.com.cn/docs/">中文文档</a>、<a href="https://www.bilibili.com/video/BV15g411F7pj">云原生视频教程</a> 和<a href="https://kubesphere.com.cn/forum/">开发者社区</a>。</p><h3 id="Composable"><a href="#Composable" class="headerlink" title="Composable"></a><a href="https://www.composable.art/">Composable</a></h3><blockquote><p>一个网页版的矢量图作图工具。</p></blockquote><h3 id="html2json"><a href="#html2json" class="headerlink" title="html2json"></a><a href="https://github.com/Jxck/html2json">html2json</a></h3><blockquote><p>一个 JS 库，可以将 HTML 代码与 JSON 代码互相转换。</p></blockquote><h3 id="My-Room-in-3D"><a href="#My-Room-in-3D" class="headerlink" title="My Room in 3D"></a><a href="https://my-room-in-3d.vercel.app/">My Room in 3D</a></h3><blockquote><p>使用 Three.js 制作的网页 3D 家居模型，非常炫酷。</p></blockquote><h3 id="Video2WebP"><a href="#Video2WebP" class="headerlink" title="Video2WebP"></a><a href="https://video2webp.mattj.io/">Video2WebP</a></h3><blockquote><p>一个网页服务，可以将短视频转成 WebP 动画图片，用来替代 GIF 动画。</p></blockquote><h3 id="7-css"><a href="#7-css" class="headerlink" title="7.css"></a><a href="https://github.com/khang-nd/7.css">7.css</a></h3><blockquote><p>一个 CSS 框架，用来复现 Windows 7 的 UI。</p></blockquote><h3 id="“一证通查”电话卡服务"><a href="#“一证通查”电话卡服务" class="headerlink" title="“一证通查”电话卡服务"></a><a href="https://getsimnum.caict.ac.cn/">“一证通查”电话卡服务</a></h3><blockquote><p>工信部推出的官方服务，查看个人名下登记了多少张电话卡。</p></blockquote><h3 id="Open-Meteo"><a href="#Open-Meteo" class="headerlink" title="Open Meteo"></a><a href="https://open-meteo.com/en/docs">Open Meteo</a></h3><blockquote><p>免费的天气 API 服务，可以获取全球任意地点的天气数据，以 JSON 格式返回。</p></blockquote><h3 id="Terrain2STL"><a href="#Terrain2STL" class="headerlink" title="Terrain2STL"></a><a href="https://jthatch.com/Terrain2STL/">Terrain2STL</a></h3><blockquote><p>该网站可以获取全球任何一个地点的地形图，生成 STL 文件供下载，你可以用 3D 打印机把地形打印成模型。</p></blockquote><h3 id="jDeploy"><a href="#jDeploy" class="headerlink" title="jDeploy"></a><a href="https://www.jdeploy.com/">jDeploy</a></h3><blockquote><p>这个工具可以将 Jar 包转变为可执行文件，发布到 NPM 上面。这样的话，在各个平台的安装和更新，就变得非常容易。</p></blockquote><h3 id="电力设施地图"><a href="#电力设施地图" class="headerlink" title="电力设施地图"></a><a href="https://openinframap.org/">电力设施地图</a></h3><blockquote><p>该网站的地图显示全世界电力设施的位置，包括电厂、变电站、输电线等等，甚至还有风力发电机。</p></blockquote><h3 id="CRDT-资料库"><a href="#CRDT-资料库" class="headerlink" title="CRDT 资料库"></a><a href="https://wiki.nikitavoloboev.xyz/distributed-systems/crdt">CRDT 资料库</a></h3><blockquote><p>CRDT 是一种多人协同算法，常用于多人同时编辑文档时的同步。这个网页收集各种 CRDT 相关资料。</p></blockquote><h3 id="Unredacter"><a href="#Unredacter" class="headerlink" title="Unredacter"></a><a href="https://github.com/bishopfox/unredacter">Unredacter</a></h3><blockquote><p>这个工具可以还原马赛克图片的原始内容。</p></blockquote><h3 id="优秀的国产-SaaS-服务-Authing"><a href="#优秀的国产-SaaS-服务-Authing" class="headerlink" title="优秀的国产 SaaS 服务 Authing"></a>优秀的国产 SaaS 服务 <a href="https://www.authing.cn/">Authing</a></h3><blockquote><p>简单说，Authing 做的是身份管理的基础设施，国外叫做”身份云”（IDaaS），集成了用户认证、用户管理、权限、安全治理等众多功能。他们有1000多个 API，你能想到的身份服务场景，几乎都支持。</p></blockquote><h4 id="点击底部的微信图标，扫描弹出的二维码登录。实现起来只需要三步，基本上不用写代码。"><a href="#点击底部的微信图标，扫描弹出的二维码登录。实现起来只需要三步，基本上不用写代码。" class="headerlink" title="点击底部的微信图标，扫描弹出的二维码登录。实现起来只需要三步，基本上不用写代码。"></a>点击底部的微信图标，扫描弹出的二维码登录。实现起来只需要三步，基本上不用写代码。</h4><ol><li>在微信开放平台，创建一个网站应用；</li><li>在 Authing 后台，填写上一步拿到的 App ID 和 App Secret；</li><li>登录链接指向他们托管的登录页。（他们有组件和 JS SDK，你也可以自己写前端页面。）</li></ol><h4 id="现在，他们将这些功能免费开放。-具体来说，永久免费版分成三类。"><a href="#现在，他们将这些功能免费开放。-具体来说，永久免费版分成三类。" class="headerlink" title="现在，他们将这些功能免费开放。 具体来说，永久免费版分成三类。"></a>现在，他们将这些功能免费开放。 具体来说，永久免费版分成三类。</h4><ol><li>B2C（C 端应用）：每月不超过8000个活跃用户（MAU）。</li><li>B2B（B 端应用）：每月不超过200个活跃用户。</li><li>B2E（内部应用，内部员工登录）：不超过10个员工。</li></ol><h3 id="HertzBeat-赫兹跳动"><a href="#HertzBeat-赫兹跳动" class="headerlink" title="HertzBeat 赫兹跳动"></a><a href="https://hertzbeat.com/">HertzBeat 赫兹跳动</a></h3><blockquote><p>一个国产的开源云监控系统，具有监控网站、PING 连通性、端口可用性、数据库、操作系统、阈值告警等功能，告警通知可通过邮件、微信、钉钉、飞书等发送</p></blockquote><h3 id="PHP-之道"><a href="#PHP-之道" class="headerlink" title="PHP 之道"></a><a href="https://learnku.com/docs/php-the-right-way/PHP8.0">PHP 之道</a></h3><blockquote><p>面向新人的免费 PHP 教程，这是中文版，此外还有英文原版。</p></blockquote><h3 id="Golang-学习资源大全"><a href="#Golang-学习资源大全" class="headerlink" title="Golang 学习资源大全"></a><a href="https://github.com/LearnGolang/LearnGolang">Golang 学习资源大全</a></h3><blockquote><p>一个中国开发者整理的 Go 语言学习资源。</p></blockquote><h3 id="前端食堂技术周刊"><a href="#前端食堂技术周刊" class="headerlink" title="前端食堂技术周刊"></a><a href="https://github.com/Geekhyt/weekly">前端食堂技术周刊</a></h3><blockquote><p>一个中文的前端技术周刊</p></blockquote><h3 id="LinkDOM"><a href="#LinkDOM" class="headerlink" title="LinkDOM"></a><a href="https://github.com/WebReflection/linkedom">LinkDOM</a></h3><blockquote><p>JSDOM 的一个替代品，使用 JavaScript 解析 HTML 字符串，返回一个 DOM 对象，在上面实现了 DOM 接口。它比 JSDOM 体积更小、速度更快、内存占用更少。</p></blockquote><h3 id="SVG-Waves"><a href="#SVG-Waves" class="headerlink" title="SVG Waves"></a><a href="https://www.softr.io/tools/svg-wave-generator">SVG Waves</a></h3><blockquote><p>一个在线工具，可以生成 SVG 的波浪图片，各种细节都可以定制。</p></blockquote><h3 id="Web-Browser-Engineering"><a href="#Web-Browser-Engineering" class="headerlink" title="Web Browser Engineering"></a><a href="https://browser.engineering/index.html">Web Browser Engineering</a></h3><blockquote><p>一本正在写作中的开源书籍，介绍如何使用1000行 Python 代码，实现一个简单的网页浏览器。</p></blockquote><h3 id="SimpleLogin"><a href="#SimpleLogin" class="headerlink" title="SimpleLogin"></a><a href="https://simplelogin.io/">SimpleLogin</a></h3><blockquote><p>一个开源的邮箱别名服务，提供真实邮箱的别名，可以接收和回复邮件，所有邮件都会转到你的真实邮箱。它的免费版允许15个别名，但是代码开源，可以自托管</p></blockquote><h3 id="Pkg"><a href="#Pkg" class="headerlink" title="Pkg"></a><a href="https://github.com/vercel/pkg">Pkg</a></h3><blockquote><p>这个工具可以将 Node.js 应用打包成单个可执行文件，没有安装 Node.js 也能执行。</p></blockquote><h3 id="Duck-DNS"><a href="#Duck-DNS" class="headerlink" title="Duck DNS"></a><a href="https://www.duckdns.org/">Duck DNS</a></h3><blockquote><p>一个免费的动态域名服务，允许用户注册 duckdns.org 的子域名，并且随时更新所指向的 IP 地址。</p></blockquote><h3 id="BeeWare"><a href="#BeeWare" class="headerlink" title="BeeWare"></a><a href="https://beeware.org/">BeeWare</a></h3><blockquote><p>一个 Python 跨平台图形框架，号称只要写一次代码，就能编译出 iOS、Android、Windows、MacOS、Linux、Web 等各种平台的图形界面应用程序。</p></blockquote><h3 id="周刊一直以来，都在推广国产软件和开源软件，向大家介绍好用的工具。今天的主角就是一款国产的研发协同工具-Apipost。"><a href="#周刊一直以来，都在推广国产软件和开源软件，向大家介绍好用的工具。今天的主角就是一款国产的研发协同工具-Apipost。" class="headerlink" title="周刊一直以来，都在推广国产软件和开源软件，向大家介绍好用的工具。今天的主角就是一款国产的研发协同工具 Apipost。"></a>周刊一直以来，都在推广国产软件和开源软件，向大家介绍好用的工具。今天的主角就是一款国产的研发协同工具 <a href="https://www.apipost.cn/?utm_source=10031">Apipost</a>。</h3><blockquote><p>互联网软件现在主要采用 REST 模式（后端提供数据接口，前端消费接口），优点是前后端分离，可以各自独立开发，缺点是项目越大，前后端协同越困难。</p><p>Apipost 的定位就是，基于协作的 API 研发协同工具，为开发者提供不止于 API 文档、调试、Mock 等大量功能。你可以把它看成 Postman + Swagger + Mock 的集成体。</p><p>// 只有商业项目的团队超过15人，或者需要私有部署时，才会收费。</p></blockquote><h3 id="Linux-系统管理入门"><a href="#Linux-系统管理入门" class="headerlink" title="Linux 系统管理入门"></a><a href="https://abarrak.gitbook.io/linux-sysops-handbook">Linux 系统管理入门</a></h3><blockquote><p>长篇的学习笔记，介绍 Linux 系统管理入门操作。</p></blockquote><p><a href="https://developers.googleblog.com/2022/04/what-is-black-and-white-and-read-all.html">Noto emoji</a></p><blockquote><p>谷歌推出的一款单色的 Emoji 表情字体，共有3000多个符号，优点是体积小。如果希望表情符号在各平台都是同一个样子，可以用它。</p></blockquote><p><a href="https://index.php.flmngr.com/">Flmngr</a></p><blockquote><p>这个项目就是单个 index.php 文件，只要把该文件放在图片目录之中，就能作为图库访问。</p></blockquote><p><a href="https://www.bookmark.style/">bookmark.style</a></p><blockquote><p>一个开源工具，可以将任意链接转换生成可分享的图片。</p></blockquote><p><a href="https://earth2day.com/TheWall/">动画云图</a></p><blockquote><p>该网站把气象云图的变化，以动画形式表现出来，并且可以按各个国家查看。</p></blockquote><p><a href="https://q.shanyue.tech/engineering/">前端工程化三十八讲</a></p><blockquote><p>网友原创的前端工程化的三十八篇短文章，每篇大概五百字左右，涵盖了开发、打包、运维等众多内容。</p></blockquote><h3 id="Postgres-js"><a href="#Postgres-js" class="headerlink" title="Postgres.js"></a><a href="https://github.com/porsager/postgres">Postgres.js</a></h3><blockquote><p>Node.js 和 Deno 的 PostgreSQL 数据库操作库。</p></blockquote><h3 id="exping"><a href="#exping" class="headerlink" title="exping"></a><a href="https://exping.world/">exping</a></h3><blockquote><p>一款手机 App，用来为地图添加个性化标记，并提供多种地图模版供导出分享。</p></blockquote><h3 id="Geeker-Admin"><a href="#Geeker-Admin" class="headerlink" title="Geeker Admin"></a><a href="https://github.com/HalseySpicy/Geeker-Admin">Geeker Admin</a></h3><blockquote><p>一款基于 Vue3 的后台管理系统。<br>Geeker Admin，是基于 Vue3.2、TypeScript、Vite2、Pinia、Element-Plus 开发的一套后台管理模板</p></blockquote><ol><li><p>在线预览 👀<br> Link：<a href="http://admin.spicyboy.cn/">http://admin.spicyboy.cn</a></p></li><li><p>Git 仓库地址 (欢迎 Star⭐)<br> Gitee：<a href="https://gitee.com/laramie/Geeker-Admin">https://gitee.com/laramie/Geeker-Admin</a></p><p> GitHub：<a href="https://github.com/HalseySpicy/Geeker-Admin">https://github.com/HalseySpicy/Geeker-Admin</a></p></li><li><p>🔨🔨🔨 项目功能<br> 🍓 使用 Vue3.2 开发（单文件组件 ＜script setup＞）<br> 🍇 采用 vite2 作为项目开发工具（配置了 Gzip 打包、图片压缩、跨域代理、打包预览工具……）<br> 🍉 整个项目集成了 TypeScript （完全是为了想学习 🤣）<br> 🍍 使用 pinia 替代 Vuex，轻量、简单、易用（香啊~🤤）<br> 🍎 使用 TypeScript 对 Axios 整个二次封装 （全局错误拦截、常用请求封装、重复请求取消……）<br> 🍌 对表格的所有操作基本都封装成了 Hooks （表格搜索、重置、查询、分页、多选、单条数据操作、文件上传、下载、格式化单元格）<br> 🍐 基于 Element 二次封装 Pro-Table 组件 ，表格页面全部传成配置项 Columns<br> 🍊 支持 Element 组件大小切换，i18n 国际化（暂时没配置所有文件，根据项目自行配置）<br> 🍉 使用 prettier 统一格式化代码，集成 Eslint 代码校验规范<br> 🥭 使用 vue-router 进行路由权限拦截、按钮权限设置<br> 🍈 使用 keep-alive 对整个页面进行缓存，支持多级嵌套页面（路由里可配置）<br> 🥥 常用自定义指令开发（复制、水印、拖拽、节流、防抖、长按……）</p></li></ol><h3 id="Musicn"><a href="#Musicn" class="headerlink" title="Musicn"></a><a href="https://github.com/zonemeen/musicn">Musicn</a></h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">下载高质量音乐的命令行工具，支持 flac、mp3 格式。</span><br><span class="line">使用</span><br><span class="line">$ musicn 稻香</span><br><span class="line"># or</span><br><span class="line">$ msc 稻香</span><br><span class="line"></span><br><span class="line">分页搜索，默认第一页</span><br><span class="line">$ msc 周杰伦 --number 2</span><br><span class="line"># or</span><br><span class="line">$ msc 周杰伦 -n 2</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">附带歌词下载(默认是不附带):</span><br><span class="line"></span><br><span class="line">$ msc 稻香 --lyric</span><br><span class="line"># or</span><br><span class="line">$ msc 稻香 -l</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">指定文件夹路径下载(默认是当前路径):</span><br><span class="line"></span><br><span class="line">$ msc 稻香 --path ../music</span><br><span class="line"># or</span><br><span class="line">$ msc 稻香 -p ../music</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">网易云服务切换, 默认咪咕</span><br><span class="line"></span><br><span class="line">msc xxx --service netease</span><br></pre></td></tr></table></figure><h3 id="Packages-for-Linux-and-Unix"><a href="#Packages-for-Linux-and-Unix" class="headerlink" title="Packages for Linux and Unix"></a><a href="https://pkgs.org/">Packages for Linux and Unix</a></h3><blockquote><p>该网站返回各种 Linux 发行版下符合搜索条件的模块。</p></blockquote><h3 id="vscode-dev-介绍"><a href="#vscode-dev-介绍" class="headerlink" title="vscode.dev 介绍"></a><a href="https://code.visualstudio.com/blogs/2021/10/20/vscode-dev">vscode.dev 介绍</a></h3><blockquote><p>官方介绍 VS Code 编辑器的线上版 vscode.dev。</p></blockquote><h3 id="DownKyi"><a href="#DownKyi" class="headerlink" title="DownKyi"></a><a href="https://github.com/leiurayer/downkyi">DownKyi</a></h3><blockquote><p>Windows 桌面软件，用来下载 B 站视频，支持批量下载，支持8K、HDR、杜比视界，提供工具箱（音视频提取、去水印等）</p></blockquote><h3 id="Regular-Expression-Tester-and-Visualizer"><a href="#Regular-Expression-Tester-and-Visualizer" class="headerlink" title="Regular Expression Tester and Visualizer"></a><a href="https://devtoolcafe.com/tools/regex">Regular Expression Tester and Visualizer</a></h3><blockquote><p>在线的正则表达式测试和可视化工具。</p></blockquote><h3 id="RedwoodJS"><a href="#RedwoodJS" class="headerlink" title="RedwoodJS"></a><a href="https://redwoodjs.com/">RedwoodJS</a></h3><blockquote><p>一个前后端一体的 JS 框架，有点类似 Next.js，GitHub 超过一万颗星。它的 API 看上去很简洁优雅。</p></blockquote><h3 id="前端部署十五章"><a href="#前端部署十五章" class="headerlink" title="前端部署十五章"></a><a href="https://q.shanyue.tech/deploy/">前端部署十五章</a></h3><blockquote><p>一组系列文章，介绍如何部署前端项目。从最原始的部署方案过渡到 Docker 与 Kubernetes，逐步优化，另有配套的视频讲解。</p></blockquote><h3 id="生产力软件-FlowUs（中文名”息流”）"><a href="#生产力软件-FlowUs（中文名”息流”）" class="headerlink" title="生产力软件 FlowUs（中文名”息流”）"></a>生产力软件 <a href="https://flowus.cn/login?code=FLOWUS&promotionChannel=WX_RYF_01">FlowUs</a>（中文名”息流”）</h3><blockquote><p>FlowUs 提供三大功能：文档+表格+网盘。 通过”块编辑器”，它们可以作为内容块（block）自由组合，满足不同场景：写笔记、做主页、管理项目、共享文件、多人协作……</p><p>它的网盘功能很强，完全可以只当作网盘使用：上传文件不限制大小，也不限速，支持 Office 文件和视频的预览。免费帐户的空间是 2GB，年费99元的专业版则是不限制容量。</p></blockquote><h3 id="NocoBase"><a href="#NocoBase" class="headerlink" title="NocoBase"></a><a href="https://www.nocobase.com/">NocoBase</a></h3><blockquote><p>一款开源的无代码平台，无需编程，用它搭建自己的协作平台、管理系统，只需要几分钟时间。</p></blockquote><h3 id="pnpm"><a href="#pnpm" class="headerlink" title="pnpm"></a><a href="https://pnpm.io/zh/">pnpm</a></h3><blockquote><p>一个老牌的 node.js 包管理器，支持 npm 的所有功能，用来替代 npm。它的模块是全局存储，每个项目内部使用硬链接，所以很省空间，而且安装速度快。</p></blockquote><h3 id="Webcamtaxi"><a href="#Webcamtaxi" class="headerlink" title="Webcamtaxi"></a><a href="https://www.webcamtaxi.com/en/">Webcamtaxi</a></h3><blockquote><p>Youtube 上面有很多24小时的摄像头直播频道，可以看到世界各地的实时状况。该网站就是收集这些频道，按照地区和内容分类。</p></blockquote><h3 id="Lemon-design"><a href="#Lemon-design" class="headerlink" title="Lemon design"></a><a href="https://lemondesign.dev/">Lemon design</a></h3><blockquote><p>一个基于 Tailwind CSS 的 React 组件库。文档可调式十分友好</p></blockquote><h3 id="濒危声音博物馆"><a href="#濒危声音博物馆" class="headerlink" title="濒危声音博物馆"></a><a href="http://savethesounds.info/">濒危声音博物馆</a></h3><blockquote><p>这个网站很有意思，收藏一些消失的声音，比如打字机的击键声、点阵式打印机的打印声、Windows 95 的开机声。</p></blockquote><h3 id="公共钢琴"><a href="#公共钢琴" class="headerlink" title="公共钢琴"></a><a href="https://pianos.pub/">公共钢琴</a></h3><blockquote><p>这个网站收集了全世界 8,391 架公共钢琴，你可以输入一个地点，看看离你最近的公共钢琴在哪里，过去弹奏。</p></blockquote><h3 id="Go-Ldap-Admin"><a href="#Go-Ldap-Admin" class="headerlink" title="Go-Ldap-Admin"></a><a href="http://ldapdoc.eryajf.net/">Go-Ldap-Admin</a></h3><blockquote><p>一个国产软件，基于 Go+Vue 实现的 openLDAP 管理后台，可以作为打通 IM（钉钉、企业微信、飞书）与支持 ldap 认证的应用的桥梁。</p></blockquote><h3 id="GitLens"><a href="#GitLens" class="headerlink" title="GitLens"></a><a href="https://www.gitkraken.com/gitlens/features">GitLens</a></h3><blockquote><p>一个 VSCode 的插件，大大增强了 Git 集成，可以在编辑器里面执行很多 Git 操作，特别适合多人合作的项目。</p></blockquote><h3 id="全球海底光缆"><a href="#全球海底光缆" class="headerlink" title="全球海底光缆"></a><a href="https://he.net/3d-map/">全球海底光缆</a></h3><blockquote><p>这个网页提供了一个互动式的地球，上面有全世界海底光缆和骨干机房的位置。</p></blockquote><h3 id="极光"><a href="#极光" class="headerlink" title="极光"></a><a href="https://www.drawaurora.com/">极光</a></h3><blockquote><p>这个网页构造了一个极地的背景，让你手绘动态的极光效果。</p></blockquote><h3 id="波斯波利斯"><a href="#波斯波利斯" class="headerlink" title="波斯波利斯"></a><a href="https://persepolis.getty.edu/">波斯波利斯</a></h3><blockquote><p>波斯波利斯是古代波斯帝国的首都，位于现在的伊朗，已经是一片废墟了。这个页面还原了这座雄伟的帝国都城，重建了 3D 街景，让你在其中漫游。</p></blockquote><h3 id="Dufs"><a href="#Dufs" class="headerlink" title="Dufs"></a><a href="https://github.com/sigoden/dufs">Dufs</a></h3><blockquote><p>一个简单的文件服务器，可以提供静态文件服务，支持上传、下载、搜索、访问控制、webdav 等功能。</p></blockquote><h3 id="地球时钟"><a href="#地球时钟" class="headerlink" title="地球时钟"></a><a href="https://earthclock.cwandt.com/">地球时钟</a></h3><blockquote><p>这个网站使用卫星照片，显示当前的数字时间，还提供 Mac 屏保程序下载。</p></blockquote><h3 id="合同示范文本库"><a href="#合同示范文本库" class="headerlink" title="合同示范文本库"></a><a href="https://cont.12315.cn/">合同示范文本库</a></h3><blockquote><p>国家市场监管总局开发的一个数据库，面向社会免费开放，提供常见合同的示范文本。</p></blockquote><h3 id="Patterns-dev"><a href="#Patterns-dev" class="headerlink" title="Patterns.dev"></a><a href="https://www.patterns.dev/">Patterns.dev</a></h3><blockquote><p>一本英文的原创教程，免费在线阅读和下载。它使用 JavaScript 语言为例，详细介绍每一种设计模式。最后演示如何将这些设计模式运用于 React 框架，搭建 Web 应用。</p></blockquote><h3 id="Termpair"><a href="#Termpair" class="headerlink" title="Termpair"></a><a href="https://github.com/cs01/termpair">Termpair</a></h3><blockquote><p>一个远程终端控制工具。用户在一个终端窗口中，启动这个工具，它会返回一个链接，使用这个链接就能在其它计算机的浏览器里面，控制原始的终端窗口。</p></blockquote><h3 id="n8n"><a href="#n8n" class="headerlink" title="n8n"></a><a href="https://n8n.io/">n8n</a></h3><blockquote><p>一个开源的工作流自动化工具，可以通过图形界面，选择200多种服务，组成一个工作流。</p></blockquote><h3 id="ext2image"><a href="#ext2image" class="headerlink" title="ext2image"></a><a href="https://text2image.jaychen.fun/">ext2image</a></h3><blockquote><p>一个将文字或代码转换成图片的网页工具，可定制项多，主题、水印、阴影特效等都能自定义。</p></blockquote><h3 id="rfc-fyi"><a href="#rfc-fyi" class="headerlink" title="rfc.fyi"></a><a href="https://rfc.fyi/">rfc.fyi</a></h3><blockquote><p>一个 RFC（计算机协议标准）的分类引擎，根据关键字搜索，返回所有相关的 RFC 标准。</p></blockquote><h3 id="ahooks"><a href="#ahooks" class="headerlink" title="ahooks"></a><a href="https://ahooks.js.org/zh-CN/">ahooks</a></h3><blockquote><p>阿里开源的 React Hooks 仓库，提供了非常多实用的 Hook。</p></blockquote><h3 id="Appwrite"><a href="#Appwrite" class="headerlink" title="Appwrite"></a><a href="https://appwrite.io/">Appwrite</a></h3><blockquote><p>一个开源的通用后端解决方案，号称是 Firebase 的替代品。架设以后就会自动提供数据读写的 REST 接口，供各种应用连接</p></blockquote><h3 id="Hooks-Admin"><a href="#Hooks-Admin" class="headerlink" title="Hooks Admin"></a><a href="https://github.com/HalseySpicy/Hooks-Admin">Hooks Admin</a></h3><blockquote><p>基于 React18、React-Router v6、React-Hooks、Redux、TypeScript、Vite2、Ant-Design 搭建的一套后台管理界面，这里有 <a href="http://hooks.spicyboy.cn/">Demo</a>。</p></blockquote><h3 id="Hooks-Admin-1"><a href="#Hooks-Admin-1" class="headerlink" title="Hooks Admin"></a><a href="https://github.com/HalseySpicy/Hooks-Admin">Hooks Admin</a></h3><blockquote><p>基于 React18、React-Router v6、React-Hooks、Redux、TypeScript、Vite2、Ant-Design 搭建的一套后台管理界面，这里有 <a href="http://hooks.spicyboy.cn/">Demo</a>。</p></blockquote><h3 id="前端程序员的命令行入门"><a href="#前端程序员的命令行入门" class="headerlink" title="前端程序员的命令行入门"></a><a href="https://www.joshwcomeau.com/javascript/terminal-for-js-devs/">前端程序员的命令行入门</a></h3><blockquote><p>一篇英语的科普长文，向前端程序员介绍命令行的基本用法，适合不熟悉命令行、用惯 Windows 的同学。</p></blockquote><h3 id="Pointless"><a href="#Pointless" class="headerlink" title="Pointless"></a><a href="https://github.com/kkoomen/pointless">Pointless</a></h3><blockquote><p>一个开源的网页画板，可以当作白板使用，效果不错。</p></blockquote><h3 id="PyScript"><a href="#PyScript" class="headerlink" title="PyScript"></a><a href="https://pyscript.net/">PyScript</a></h3><blockquote><p>PyScript 是一个用于网页的 Python 解释器，能够在网页上运行 Python 代码。</p></blockquote><h3 id="Vue-js-挑战"><a href="#Vue-js-挑战" class="headerlink" title="Vue.js 挑战"></a><a href="https://cn-vuejs-challenges.netlify.app/">Vue.js 挑战</a></h3><blockquote><p>一个 Vue.js 题库，可以选择不同的难度进行不同程度的练习。</p></blockquote><h3 id="合成器原理（Learning-Synths）"><a href="#合成器原理（Learning-Synths）" class="headerlink" title="合成器原理（Learning Synths）"></a><a href="https://learningsynths.ableton.com/zh-Hans">合成器原理</a>（Learning Synths）</h3><blockquote><p>一篇声音合成的教程，通过一个个小例子，介绍声音合成器的原理，有中文版。</p></blockquote><h3 id="Bud"><a href="#Bud" class="headerlink" title="Bud"></a><a href="https://github.com/livebud/bud">Bud</a></h3><blockquote><p>一个 Go 语言的全栈 Web 框架，用它来写网站的前端和后端，编译成一个二进制可执行文件，放到服务器上就能直接运行，不需要其他文件。</p></blockquote><h3 id="图片占位符"><a href="#图片占位符" class="headerlink" title="图片占位符"></a>图片占位符</h3><blockquote><p><a href="%5Bplace.dog%5D(https://place.dog/)">狗狗占位符</a></p><p><a href="https://placekitten.com/">猫猫占位符</a></p></blockquote><h3 id="code-server"><a href="#code-server" class="headerlink" title="code-server"></a><a href="https://github.com/coder/code-server">code-server</a></h3><blockquote><p>一个 VS Code 远程服务的封装，可以安装在任意机器上面，然后就能在浏览器使用 VS Code。你还能使用 <a href="https://docs.blink.sh/advanced/code">Blink</a> 作为 iOS 客户端，在 iPhone/iPad 上编码</p></blockquote><h3 id="Logto"><a href="#Logto" class="headerlink" title="Logto"></a><a href="https://logto.io/">Logto</a></h3><blockquote><p>一个开源的用户身份认证和登录注册软件。</p></blockquote><h3 id="bore"><a href="#bore" class="headerlink" title="bore"></a><a href="https://github.com/ekzhang/bore">bore</a></h3><p>一个非常简单的命令行工具，让你轻松将内网端口暴露到互联网上。</p><h3 id="HowToStartOpenSource"><a href="#HowToStartOpenSource" class="headerlink" title="HowToStartOpenSource"></a><a href="https://github.com/eryajf/HowToStartOpenSource">HowToStartOpenSource</a></h3><blockquote><p>一份作者自己整理的 GitHub 中文使用指南，初学者可以用来学习怎么使用 GitHub</p></blockquote><h3 id="cssbuttons"><a href="#cssbuttons" class="headerlink" title="cssbuttons"></a><a href="https://github.com/eludadev/css-buttons">cssbuttons</a></h3><blockquote><p>这个仓库收集各种按钮的 CSS 代码，大部分都带有动画效果。</p></blockquote><h3 id="PPZ-vscode"><a href="#PPZ-vscode" class="headerlink" title="PPZ.vscode"></a><a href="https://marketplace.visualstudio.com/items?itemName=ppz.ppz">PPZ.vscode</a></h3><blockquote><p>一个 VSCode 插件，提供操作数据库的图形界面，支持多种数据库。</p><p>目前暂不考虑支持非关系型数据库，比如 MongoDB，推荐使用 <a href="https://github.com/mongodb-js/vscode">MongoDB for VS Code</a>（官方出品，质量有保证、功能全面）</p></blockquote><h3 id="Sunmao"><a href="#Sunmao" class="headerlink" title="Sunmao"></a><a href="https://sunmao-ui.com/dev.html">Sunmao</a></h3><blockquote><p>开发低代码工具的<a href="https://github.com/smartxworks/sunmao-ui">开源框架</a>，内置图形化编辑器，允许开发者封装任何 React 组件，放到编辑器里面使用，参见<a href="https://juejin.cn/post/7122368174808367141">介绍文章</a></p></blockquote><h3 id="JSONT"><a href="#JSONT" class="headerlink" title="JSONT"></a><a href="https://www.jsont.run/">JSONT</a></h3><blockquote><p>在线的 JSON 格式化工具，方便展示、查看、编辑 JSON 数据。类似工具还有 <a href="https://jsonhero.io/">JSON Hero</a>。</p></blockquote><h3 id="tlops"><a href="#tlops" class="headerlink" title="tlops"></a><a href="https://github.com/iamtsm/tl-ops-manage">tlops</a></h3><blockquote><p>一个基于 openresty 的轻量级 API 网关，方便 Web 应用的搭建，支持负载均衡、健康检查、服务熔断、服务限流、可视化管理等众多功能。</p></blockquote><h3 id="React-技术揭秘"><a href="#React-技术揭秘" class="headerlink" title="React 技术揭秘"></a><a href="https://react.iamkasong.com/">React 技术揭秘</a></h3><blockquote><p>原创的中文电子书，解读 React 源码，并有<a href="https://github.com/BetaSu/big-react">配套的代码仓库</a>，自己从零实现 React 18。</p></blockquote><h3 id="Java-学习-面试指南"><a href="#Java-学习-面试指南" class="headerlink" title="Java 学习 + 面试指南"></a><a href="https://javaguide.cn/">Java 学习 + 面试指南</a></h3><blockquote><p>一个收集 Java 核心知识和面试指南的网站，有<a href="https://github.com/Snailclimb/JavaGuide">开源仓库</a>。</p></blockquote><h3 id="lofi-co"><a href="#lofi-co" class="headerlink" title="lofi.co"></a><a href="https://lofi.co/">lofi.co</a></h3><blockquote><p>一个用于放松的背景音乐网站，网页背景是一个咖啡馆，配有各种动画效果（比如驶过的汽车、飘下的落叶、雨点等等），还可以进入咖啡馆室内。</p></blockquote><h3 id="网易云后台接口"><a href="#网易云后台接口" class="headerlink" title="网易云后台接口"></a>网易云后台接口</h3><blockquote><p>网易云音乐 NodeJS 版 API</p><p><a href="https://binaryify.github.io/NeteaseCloudMusicApi">https://binaryify.github.io/NeteaseCloudMusicApi</a></p></blockquote><h3 id="Lorien"><a href="#Lorien" class="headerlink" title="Lorien"></a><a href="https://github.com/mbrlabs/Lorien">Lorien</a></h3><blockquote><p>一个绘图 + 笔记的画布软件，可以导出 SVG 格式。底层使用 Godot 游戏引擎，图形性能非常好，支持 Linux/Mac/Windows 系统。</p></blockquote><h3 id="Emoji-Kitchen"><a href="#Emoji-Kitchen" class="headerlink" title="Emoji Kitchen"></a><a href="https://emojikitchen.dev/">Emoji Kitchen</a></h3><blockquote><p>各种表情图片</p></blockquote><h3 id="Git-Command-Explorer"><a href="#Git-Command-Explorer" class="headerlink" title="Git Command Explorer"></a><a href="https://gitexplorer.com/">Git Command Explorer</a></h3><blockquote><p>一个网页小工具，你选择要使用的 Git 命令，它给出这个命令具体的使用格式。</p></blockquote><h3 id="CSS-手电筒"><a href="#CSS-手电筒" class="headerlink" title="CSS 手电筒"></a><a href="https://voussoir.net/writing/browser_in_the_dark">CSS 手电筒</a></h3><blockquote><p>这个网页演示了使用 CSS 实现各种手电筒效果。</p></blockquote><h3 id="旧安卓手机用作-Web-服务器（英文）"><a href="#旧安卓手机用作-Web-服务器（英文）" class="headerlink" title="旧安卓手机用作 Web 服务器（英文）"></a><a href="https://lbrito1.github.io/blog/2020/02/repurposing-android.html">旧安卓手机用作 Web 服务器</a>（英文）</h3><blockquote><p>很多人家里都有旧的安卓手机，本文演示如何将这些手机变成 Web 服务器，架设内网服务。</p></blockquote><h3 id="vdoing-template"><a href="#vdoing-template" class="headerlink" title="vdoing-template"></a><a href="https://github.com/eryajf/vdoing-template">vdoing-template</a></h3><blockquote><p>Vuepress 的一个模板库，通过 GitHub Actions，直接构建出一个静态博客。</p></blockquote><h3 id="多邻国粤语课程"><a href="#多邻国粤语课程" class="headerlink" title="多邻国粤语课程"></a><a href="https://zh-cn.duolingo.com/course/zh-HK/zh/%E5%AD%A6%E4%B9%A0-%E4%B8%AD%E6%96%87%EF%BC%88%E7%B2%A4%E8%AF%AD%EF%BC%89">多邻国粤语课程</a></h3><blockquote><p>多邻国最新推出的免费粤语课程。</p></blockquote><h3 id="UISET"><a href="#UISET" class="headerlink" title="UISET"></a><a href="https://uiset.com/">UISET</a></h3><blockquote><p>收集免费 UI 资源（插图、图标、颜色等）的网站，可以通过 <a href="https://github.com/uiset-com/uiset">GitHub 仓库</a>提交新资源。</p></blockquote><h3 id="Maccy"><a href="#Maccy" class="headerlink" title="Maccy"></a><a href="https://maccy.app/">Maccy</a></h3><blockquote><p>一个 MacOS 系统的开源软件，可以保存系统剪贴版的历史，查看每一次复制粘贴的内容。</p></blockquote><h3 id="ITraffic-monitor-for-mac"><a href="#ITraffic-monitor-for-mac" class="headerlink" title="ITraffic-monitor-for-mac"></a><a href="https://github.com/foamzou/ITraffic-monitor-for-mac">ITraffic-monitor-for-mac</a></h3><blockquote><p>实时显示 MacOS 每个进程的网络速率，适配明暗两个主题。</p></blockquote><h3 id="卡通猫生成器"><a href="#卡通猫生成器" class="headerlink" title="卡通猫生成器"></a><a href="https://uchinoko-maker.jp/">卡通猫生成器</a></h3><blockquote><p>一个网页小工具，可以生成卡通猫图片，猫的每个部分都可以定制。</p></blockquote><h3 id="XLite"><a href="#XLite" class="headerlink" title="XLite"></a><a href="https://github.com/x2bool/xlite">XLite</a></h3><blockquote><p>这个工具可以将 Excel 表格文件导入 SQLite，使用 SQL 进行查询。</p></blockquote><h3 id="像素动物"><a href="#像素动物" class="headerlink" title="像素动物"></a><a href="https://kottke.org/22/03/pixel-birds-and-other-animals">像素动物</a></h3><blockquote><p>一个日本艺术家贴出了，他绘制的大量像素动物，非常有趣。</p></blockquote><h3 id="根据文字描述生成图片"><a href="#根据文字描述生成图片" class="headerlink" title="根据文字描述生成图片"></a>根据文字描述生成图片</h3><blockquote><p><a href="https://openai.com/blog/dall-e-now-available-in-beta/">OpenAI 公司</a>的人工智能模型 <a href="https://openai.com/dall-e-2/">DALL·E 2</a></p><p>它可以根据文本生成图片，有点像童话里面的”魔镜”。你告诉魔镜想看什么，它就向你展示什么。目前的<a href="https://www.163.com/dy/article/HCSNPB8F05118HA4.html">价格</a>是15美元生成460张图片，平均每张图0.03美元（约为人民币两角）。</p></blockquote><h3 id="Tauri"><a href="#Tauri" class="headerlink" title="Tauri"></a><a href="https://www.levminer.com/blog/tauri-vs-electron">Tauri</a></h3><blockquote><p>Electron 是目前跨平台桌面软件的首选开发框架，Tauri 则是最近出现的一个替代品，试图解决前者的最大痛点：体积臃肿，资源占用高。</p></blockquote><h3 id="Vanblog"><a href="#Vanblog" class="headerlink" title="Vanblog"></a><a href="https://vanblog.mereith.com/">Vanblog</a></h3><blockquote><p>一款个人博客系统，支持众多功能，采用 Docker 部署，带有管理后台，前台为静态页面，提供自动 HTTPS 证书。</p></blockquote><h3 id="BgSub"><a href="#BgSub" class="headerlink" title="BgSub"></a><a href="https://bgsub.cn/">BgSub</a></h3><blockquote><p>一个网页工具，可以自动抠图，替换背景颜色或背景图片，完全在本地完成，不会上传服务器。</p></blockquote><h3 id="MiraPlayer"><a href="#MiraPlayer" class="headerlink" title="MiraPlayer"></a><a href="https://github.com/miravideo/FFCreator">MiraPlayer</a></h3><blockquote><p>一个基于腾讯视频库 <a href="https://github.com/tnfe/FFCreator/blob/master/README.zh-CN.md">FFCreator</a> 封装的前端视频播放器和编辑器组件。</p></blockquote><h3 id="据意查句"><a href="#据意查句" class="headerlink" title="据意查句"></a><a href="https://wantquotes.net/">据意查句</a></h3><blockquote><p>清华大学推出了一个搜索引擎，根据关键词搜索相关的诗文。比如搜索”郁闷”，就会返回各种跟郁闷相关的句子，参见<a href="https://www.163.com/dy/article/HDHB76F30511DSSR.html">介绍文章</a>。</p><p>另有一个汉语的<a href="https://wantwords.net/">近义词搜索引擎</a>。</p></blockquote><h3 id="必应壁纸"><a href="#必应壁纸" class="headerlink" title="必应壁纸"></a><a href="https://bing.wdbyte.com/">必应壁纸</a></h3><blockquote><p>周刊介绍过一个抓取必应每日壁纸的 <a href="https://github.com/niumoo/bing-wallpaper">GitHub Actions 模板</a>，作者现在将其做成静态网站，可以在线浏览和下载壁纸，每日更新。</p></blockquote><h3 id="音频博客《代码英雄》"><a href="#音频博客《代码英雄》" class="headerlink" title="音频博客《代码英雄》"></a><a href="https://linux.cn/talk/clh/">音频博客《代码英雄》</a></h3><blockquote><p>红帽公司精心制作的一个音频播客。”Linux 中国”得到授权进行了文本翻译，将其带给国内的开发者。可惜的是，<a href="https://www.redhat.com/en/command-line-heroes">英文版</a>已经更新到第九季，中文翻译才到第四季。</p></blockquote><h3 id="iPhone-的-Safari-浏览器插件（中文）"><a href="#iPhone-的-Safari-浏览器插件（中文）" class="headerlink" title="iPhone 的 Safari 浏览器插件（中文）"></a><a href="https://www.ifanr.com/app/1445597">iPhone 的 Safari 浏览器插件</a>（中文）</h3><blockquote><p>iPhone 手机和 iPad 平板的 Safari 浏览器，可以安装插件。本文介绍14个常用插件。</p></blockquote><h3 id="Mutant-Standard"><a href="#Mutant-Standard" class="headerlink" title="Mutant Standard"></a><a href="https://mutant.tech/">Mutant Standard</a></h3><p>一套有点另类的 Emoji 图案，将近1000个符号。如果你想要不一样的 Emoji，可以试试。</p><h3 id="Markdeep"><a href="#Markdeep" class="headerlink" title="Markdeep"></a><a href="https://casual-effects.com/markdeep/">Markdeep</a></h3><blockquote><p>一种扩展的 Markdown 格式，添加了很多功能，同时还是一个 JS 脚本，只要放入网页，就能自动把这种格式的文本文件渲染成 HTML 页面。</p></blockquote><h3 id="NESBox"><a href="#NESBox" class="headerlink" title="NESBox"></a><a href="https://nesbox.xianqiao.wang/">NESBox</a></h3><blockquote><p>一个开源的游戏平台，支持多人在线，一起玩 NES（俗称 FC 红白机） 游戏，有 web 版和桌面版。目前已经有很多游戏，预计有 1000+ 游戏，参考这篇<a href="https://juejin.cn/post/7136883410819088397">介绍文章</a>。</p></blockquote><p><a href="https://cleanupphotos.com/">Cleanup Photos</a></p><blockquote><p>这个网页工具可以清除照片上不要的物体。用户上传照片以后，框选不需要的物体，系统会自动清除这些物体，用背景填充照片。</p></blockquote><h3 id="OurBoard"><a href="#OurBoard" class="headerlink" title="OurBoard"></a><a href="https://www.ourboard.io/">OurBoard</a></h3><blockquote><p>一个在线白板，你创建一个房间，把网址分享给其他人，大家就可以在一块网页白板上共同涂写。</p></blockquote><h3 id="Nginx-Proxy-Manager"><a href="#Nginx-Proxy-Manager" class="headerlink" title="Nginx Proxy Manager"></a><a href="https://nginxproxymanager.com/">Nginx Proxy Manager</a></h3><blockquote><p>Nginx 经常用作反向代理，这个工具为反向代理提供一个 Web 管理界面。</p></blockquote><h3 id="随机的谷歌街景"><a href="#随机的谷歌街景" class="headerlink" title="随机的谷歌街景"></a><a href="https://randomstreetview.com/">随机的谷歌街景</a></h3><blockquote><p>这个网站随机展示谷歌街景的照片，世界各地都有</p></blockquote><h3 id="中华遗嘱网"><a href="#中华遗嘱网" class="headerlink" title="中华遗嘱网"></a><a href="https://www.will.org.cn/">中华遗嘱网</a></h3><blockquote><p>这个网站提供遗嘱的知识和服务，属于半官方组织，收费不低，但是比自己去找专业服务还是方便和便宜一点。</p></blockquote><h3 id="websocat"><a href="#websocat" class="headerlink" title="websocat"></a><a href="https://github.com/vi/websocat">websocat</a></h3><blockquote><p>一个命令行的 WebSocket 工具，用来跟 websocket 服务器互动，以及在本地架设 WebSocket 服务。</p></blockquote><h3 id="Rocket-Chat"><a href="#Rocket-Chat" class="headerlink" title="Rocket.Chat"></a><a href="https://github.com/RocketChat/Rocket.Chat">Rocket.Chat</a></h3><blockquote><p>一款开源的聊天软件，服务端、桌面端、手机 App 都提供。</p></blockquote><h3 id="mpv-1"><a href="#mpv-1" class="headerlink" title="mpv"></a><a href="https://mpv.io/">mpv</a></h3><blockquote><p>一个跨平台的命令行视频播放器。</p></blockquote><h3 id="中国铁路地图"><a href="#中国铁路地图" class="headerlink" title="中国铁路地图"></a><a href="http://cnrail.geogv.org/zhcn/">中国铁路地图</a></h3><blockquote><p>这个网站可以查看全国铁路的路线图，另有<a href="https://www.openrailwaymap.org/">全世界的铁路地图</a>。</p></blockquote><h3 id="ERNIE-ViLG-文生图"><a href="#ERNIE-ViLG-文生图" class="headerlink" title="ERNIE-ViLG 文生图"></a><a href="https://wenxin.baidu.com/moduleApi/ernieVilg">ERNIE-ViLG 文生图</a></h3><blockquote><p>百度 AI 引擎”文心大模型”的文生图功能，输入中文句子，输出相应的图片，类似于 DALL-E 和 Stable Diffusion。</p><p>另外，还可以看看一个同样功能的英文服务 <a href="https://art.elbo.ai/">Elbo</a>。</p></blockquote><h3 id="kvass"><a href="#kvass" class="headerlink" title="kvass"></a><a href="https://github.com/maxmunzel/kvass">kvass</a></h3><blockquote><p>一个轻便的键值对存储工具，将数据存在本机。可以命令行使用，也可以对外提供 HTTP 接口，分享网址给其他人。</p></blockquote><h3 id="text-watermark"><a href="#text-watermark" class="headerlink" title="text-watermark"></a><a href="https://github.com/zengkan0703/text-watermark">text-watermark</a></h3><blockquote><p>一个 npm 模块，借助零宽度字符，在文本里面插入（或解码）不可见的文字水印。</p></blockquote><h3 id="proxy-web-storage"><a href="#proxy-web-storage" class="headerlink" title="proxy-web-storage"></a><a href="https://github.com/KID-joker/proxy-web-storage">proxy-web-storage</a></h3><blockquote><p>一个 JS 库，用 proxy 封装了 localStorage 和 sessionStorage。除了常规的数据存储，可支持事件监听和设置过期时间。</p></blockquote><h3 id="TinyTeX"><a href="#TinyTeX" class="headerlink" title="TinyTeX"></a><a href="https://yihui.org/tinytex/">TinyTeX</a></h3><blockquote><p>学术排版系统 Tex Live 的简化版本，只有100多兆，支持中文。</p></blockquote><h3 id="Keet"><a href="#Keet" class="headerlink" title="Keet"></a><a href="https://keet.io/">Keet</a></h3><blockquote><p>一个点对点聊天的软件，不需要服务器，可以进行多人的视频和文字的加密对话。</p></blockquote><h3 id="中文播客榜"><a href="#中文播客榜" class="headerlink" title="中文播客榜"></a><a href="https://xyzrank.com/">中文播客榜</a></h3><blockquote><p>查看中文播客的排名和热门节目，数据取自小宇宙和 Apple Podcast，每日更新</p></blockquote><h3 id="编程字体"><a href="#编程字体" class="headerlink" title="编程字体"></a><a href="https://www.programmingfonts.org/">编程字体</a></h3><blockquote><p>这个网站提供了近百种编程字体，可以切换查看效果，以供选择。</p></blockquote><h3 id="redis-shake"><a href="#redis-shake" class="headerlink" title="redis-shake"></a><a href="https://github.com/alibaba/RedisShake">redis-shake</a></h3><blockquote><p>阿里巴巴开源的工具，用于 Redis 实例间数据迁移与清洗。</p></blockquote><h3 id="Pagefind"><a href="#Pagefind" class="headerlink" title="Pagefind"></a><a href="https://pagefind.app/">Pagefind</a></h3><blockquote><p>一个静态全文搜索工具，专供静态网站使用，不需要服务器就能完成全站搜索，参见<a href="https://cloudcannon.com/blog/introducing-pagefind/">介绍文章</a>。</p></blockquote><h3 id="pcl-js"><a href="#pcl-js" class="headerlink" title="pcl.js"></a><a href="https://pcljs.org/zh-cn/">pcl.js</a></h3><blockquote><p>这个工具将大型 C++ 库 Point Cloud Library (PCL) 编译为 WebAssembly，运行在浏览器中，供 JavaScript 调用。它实现了大量相关的通用算法和数据结构，涉及点云获取、滤波、特征提取、识别、可视化等功能。</p></blockquote><h3 id="识典古籍"><a href="#识典古籍" class="headerlink" title="识典古籍"></a><a href="https://www.shidianguji.com/">识典古籍</a></h3><blockquote><p>北京大学和抖音公益合作的古籍数字化平台。目前可免费搜索390部经典古籍，共计3000多万字。未来三年将陆续完成一万种古籍的智能化整理工作。</p></blockquote><h3 id="程序员的实用深度学习"><a href="#程序员的实用深度学习" class="headerlink" title="程序员的实用深度学习"></a><a href="https://course.fast.ai/">程序员的实用深度学习</a></h3><blockquote><p>fast.ai 推出的最新线上公开课，向程序员介绍如何做一个深度学习项目，有视频和详细的课程资料，另有<a href="https://github.com/fastai/course22/">课程仓库</a>。</p></blockquote><h3 id="免费音乐播放器"><a href="#免费音乐播放器" class="headerlink" title="免费音乐播放器"></a><a href="https://github.com/maotoumao/MusicFree">免费音乐播放器</a></h3><blockquote><p>一个插件化、定制化、无广告的免费音乐播放器，目前只支持Android和Harmony OS。</p><p>如果需要了解后续进展可以关注b站账号：<a href="https://space.bilibili.com/12866223">不想睡觉猫头猫</a></p></blockquote><h3 id="程序员音乐"><a href="#程序员音乐" class="headerlink" title="程序员音乐"></a><a href="https://musicforprogramming.net/latest/">程序员音乐</a></h3><blockquote><p>一个另类的背景音乐网站，精选了一些歌曲和专辑，适合编程时当作背景音乐。它的界面完全采用字符终端样式。</p></blockquote>]]></content>
    
    
    <summary type="html">&lt;h3 id=&quot;BaseMap&quot;&gt;&lt;a href=&quot;#BaseMap&quot; class=&quot;headerlink&quot; title=&quot;BaseMap&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://github.com/bojue/BaseMap&quot;&gt;BaseMap&lt;/a&gt;&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;一个开源的机房平面图（园区，楼栋，楼层，房间）绘制工具，也可用来生成办公室、工厂、园区的平面图&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/bojue/BaseMap&quot;&gt;https://github.com/bojue/BaseMap&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;VCSLabel&quot;&gt;&lt;a href=&quot;#VCSLabel&quot; class=&quot;headerlink&quot; title=&quot;VCSLabel&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://github.com/pxzxj/VCSLabel&quot;&gt;VCSLabel&lt;/a&gt;&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;一款 Intellij IDEA 插件（也可用于WebStorm、PyCharm），显示每个文件的最后提交时间和提交人。&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="other" scheme="https://wangyf1024.gitee.io/categories/other/"/>
    
    
    <category term="plugin" scheme="https://wangyf1024.gitee.io/tags/plugin/"/>
    
  </entry>
  
  <entry>
    <title>拖拽</title>
    <link href="https://wangyf1024.gitee.io/2022/07/08/programming/javascript/%E6%8B%96%E6%8B%BD/"/>
    <id>https://wangyf1024.gitee.io/2022/07/08/programming/javascript/%E6%8B%96%E6%8B%BD/</id>
    <published>2022-07-08T00:23:10.000Z</published>
    <updated>2022-07-11T01:59:42.254Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://img-blog.csdnimg.cn/a0cf52da3d9d414fa7f1403d8ea8e586.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAVGFyYV9fXw==,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"></p><blockquote><p>可拖拽元素　设置　draggable: true.可绑定监听事件 dragstart、drag、dragend</p><p>放置区域：可绑定监听事件 dragenter、dragover、dragleave、drop</p></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">// 可拖拽原素</span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">id</span>=<span class="string">&quot;test&quot;</span> <span class="attr">src</span>=<span class="string">&quot;xxx&quot;</span> <span class="attr">draggable</span>=<span class="string">&quot;true&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">// 可放置区域</span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;layer-photos-box&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><span id="more"></span><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> box = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;layer-photos-box&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> oTest = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;test&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 拖拽开始</span></span><br><span class="line">oTest.<span class="title function_">addEventListener</span>(<span class="string">&#x27;dragstart&#x27;</span>, <span class="keyword">function</span>(<span class="params">e</span>) &#123;</span><br><span class="line">    <span class="comment">// 此处保存 拖拽元素等信息</span></span><br><span class="line">    event.<span class="property">dataTransfer</span>.<span class="title function_">setData</span>(<span class="string">&quot;text&quot;</span>,<span class="string">`<span class="subst">$&#123;event.target.id&#125;</span>`</span>);</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;dragstart&#x27;</span>);</span><br><span class="line">&#125;)</span><br><span class="line"><span class="comment">// 拖拽中</span></span><br><span class="line">oTest.<span class="title function_">addEventListener</span>(<span class="string">&#x27;drag&#x27;</span>, <span class="keyword">function</span>(<span class="params">e</span>) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;drag&#x27;</span>);</span><br><span class="line">&#125;)</span><br><span class="line"><span class="comment">// 拖拽结束</span></span><br><span class="line">oTest.<span class="title function_">addEventListener</span>(<span class="string">&#x27;dragend&#x27;</span>, <span class="keyword">function</span>(<span class="params">e</span>) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;dragend&#x27;</span>);</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// 进入可放置区域</span></span><br><span class="line">box.<span class="title function_">addEventListener</span>(<span class="string">&#x27;dragenter&#x27;</span>, <span class="keyword">function</span>(<span class="params">e</span>) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;dragenter&#x27;</span>);</span><br><span class="line">&#125;)</span><br><span class="line"><span class="comment">// 离开可放置区域</span></span><br><span class="line">box.<span class="title function_">addEventListener</span>(<span class="string">&#x27;dragleave&#x27;</span>, <span class="keyword">function</span>(<span class="params">e</span>) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;dragleave&#x27;</span>);</span><br><span class="line">&#125;)</span><br><span class="line"><span class="comment">// 悬浮在放置区域</span></span><br><span class="line">box.<span class="title function_">addEventListener</span>(<span class="string">&#x27;dragover&#x27;</span>, <span class="keyword">function</span>(<span class="params">e</span>) &#123;</span><br><span class="line">    e.<span class="title function_">preventDefault</span>()</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;dragover&#x27;</span>);</span><br><span class="line">&#125;)</span><br><span class="line"><span class="comment">// 放置到可放置区域</span></span><br><span class="line">box.<span class="title function_">addEventListener</span>(<span class="string">&#x27;drop&#x27;</span>, <span class="keyword">function</span>(<span class="params">e</span>) &#123;</span><br><span class="line">    <span class="comment">// 获取到可拖拽元素的信息，并添加到可拖拽区域</span></span><br><span class="line">    <span class="keyword">var</span> id = event.<span class="property">dataTransfer</span>.<span class="title function_">getData</span>(<span class="string">&quot;text&quot;</span>)</span><br><span class="line">    e.<span class="title function_">preventDefault</span>()</span><br><span class="line">    e.<span class="property">target</span>.<span class="title function_">appendChild</span>(<span class="variable language_">document</span>.<span class="title function_">getElementById</span>(id))</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;drop&#x27;</span>);</span><br><span class="line">&#125;)</span><br><span class="line"></span><br></pre></td></tr></table></figure><blockquote><p>drop事件跟dragover事件都调用了preventDefault事件来阻止默认事件的发送，那是因为浏览器默认不能在拖拽以后进行放置，所以需要我们手动的取消默认事件。</p><p>这三个事件必须要有： dragstart、dragover、drop</p></blockquote>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;img src=&quot;https://img-blog.csdnimg.cn/a0cf52da3d9d414fa7f1403d8ea8e586.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAVGFyYV9fXw==,size_20,color_FFFFFF,t_70,g_se,x_16&quot; alt=&quot;在这里插入图片描述&quot;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;可拖拽元素　设置　draggable: true.可绑定监听事件 dragstart、drag、dragend&lt;/p&gt;
&lt;p&gt;放置区域：可绑定监听事件 dragenter、dragover、dragleave、drop&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;// 可拖拽原素&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;img&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&amp;quot;test&amp;quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;src&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&amp;quot;xxx&amp;quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;draggable&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&amp;quot;true&amp;quot;&lt;/span&gt; /&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;// 可放置区域&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&amp;quot;layer-photos-box&amp;quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</summary>
    
    
    
    <category term="js" scheme="https://wangyf1024.gitee.io/categories/js/"/>
    
    
    <category term="js" scheme="https://wangyf1024.gitee.io/tags/js/"/>
    
  </entry>
  
  <entry>
    <title>cookie的操作</title>
    <link href="https://wangyf1024.gitee.io/2022/06/29/programming/javascript/cookie%E7%9A%84%E6%93%8D%E4%BD%9C/"/>
    <id>https://wangyf1024.gitee.io/2022/06/29/programming/javascript/cookie%E7%9A%84%E6%93%8D%E4%BD%9C/</id>
    <published>2022-06-29T08:23:10.000Z</published>
    <updated>2022-07-11T02:02:52.471Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>直接上操作：</p></blockquote><p>以前的方式：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 读取</span></span><br><span class="line"><span class="variable language_">document</span>.<span class="property">cookie</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 设置</span></span><br><span class="line"><span class="variable language_">document</span>.<span class="property">cookie</span> = <span class="string">&quot;a=3; max-age=-1&quot;</span>;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><a href="https://developer.mozilla.org/en-US/docs/Web/API/Cookie_Store_API">“Cookie Store API”</a></p><span id="more"></span><ul><li><a href="https://developer.mozilla.org/en-US/docs/Web/API/CookieStore/delete"><code>CookieStore.delete()</code></a></li></ul><p>该<code>delete()</code>方法删除具有给定名称或选项对象的 cookie，它返回一个<a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise"><code>Promise</code></a>在删除完成时解析的 cookie。</p><ul><li><a href="https://developer.mozilla.org/en-US/docs/Web/API/CookieStore/get"><code>CookieStore.get()</code></a></li></ul><p>该<code>get()</code>方法获取具有给定名称或选项对象的单个 cookie，它返回一个<a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise"><code>Promise</code></a>解析单个 cookie 详细信息的 cookie。</p><ul><li><a href="https://developer.mozilla.org/en-US/docs/Web/API/CookieStore/getAll"><code>CookieStore.getAll()</code></a></li></ul><p>该<code>getAll()</code>方法获取所有匹配的 cookie，它返回一个<a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise"><code>Promise</code></a>用 cookie 列表解析的。</p><ul><li><a href="https://developer.mozilla.org/en-US/docs/Web/API/CookieStore/set"><code>CookieStore.set()</code></a></li></ul><p>该<code>set()</code>方法使用给定的名称和值或选项对象设置一个 cookie，它返回一个<a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise"><code>Promise</code></a>在设置 cookie 时解析的。</p><p>事件：</p><p><a href="https://developer.mozilla.org/en-US/docs/Web/API/CookieStore/change_event"><code>change</code></a></p><p><code>change</code>对任何 cookie 进行更改时都会触发该事件。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> day = <span class="number">24</span> * <span class="number">60</span> * <span class="number">60</span> * <span class="number">1000</span>;</span><br><span class="line">cookieStore.<span class="title function_">set</span>(&#123;</span><br><span class="line">  <span class="attr">name</span>: <span class="string">&quot;cookie1&quot;</span>,</span><br><span class="line">  <span class="attr">value</span>: <span class="string">&quot;cookie1-value&quot;</span>,</span><br><span class="line">  <span class="attr">expires</span>: <span class="title class_">Date</span>.<span class="title function_">now</span>() + day,</span><br><span class="line">  <span class="attr">domain</span>: <span class="string">&quot;example.com&quot;</span></span><br><span class="line">&#125;)</span><br><span class="line">.<span class="title function_">then</span>(</span><br><span class="line">  <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;It worked!&quot;</span>);</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="keyword">function</span>(<span class="params">reason</span>) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">error</span>(<span class="string">&quot;It failed: &quot;</span>, reason);</span><br><span class="line">  &#125;</span><br><span class="line">);</span><br><span class="line"></span><br></pre></td></tr></table></figure><blockquote><p>还可以使用第三方的 js 库 js-cookie</p></blockquote>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;直接上操作：&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;以前的方式：&lt;/p&gt;
&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 读取&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;variable language_&quot;&gt;document&lt;/span&gt;.&lt;span class=&quot;property&quot;&gt;cookie&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 设置&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;variable language_&quot;&gt;document&lt;/span&gt;.&lt;span class=&quot;property&quot;&gt;cookie&lt;/span&gt; = &lt;span class=&quot;string&quot;&gt;&amp;quot;a=3; max-age=-1&amp;quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Cookie_Store_API&quot;&gt;“Cookie Store API”&lt;/a&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="js" scheme="https://wangyf1024.gitee.io/categories/js/"/>
    
    
    <category term="cookie" scheme="https://wangyf1024.gitee.io/tags/cookie/"/>
    
  </entry>
  
  <entry>
    <title>浏览器中实现剪切板的内容操作</title>
    <link href="https://wangyf1024.gitee.io/2022/06/28/programming/htmlcss/%E5%89%AA%E5%88%87%E6%9D%BF%E6%93%8D%E4%BD%9C/"/>
    <id>https://wangyf1024.gitee.io/2022/06/28/programming/htmlcss/%E5%89%AA%E5%88%87%E6%9D%BF%E6%93%8D%E4%BD%9C/</id>
    <published>2022-06-28T07:40:10.000Z</published>
    <updated>2022-07-11T02:01:50.110Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>浏览器允许 JavaScript 脚本读写剪贴板，自动复制或粘贴内容。主要是用来操作文本、图片</p></blockquote><h3 id="有三种方式可操作剪切板"><a href="#有三种方式可操作剪切板" class="headerlink" title="有三种方式可操作剪切板"></a>有三种方式可操作剪切板</h3><ul><li>Document.execCommand() 【此API已从W3C标准中删除】</li><li>Clipboard API （推荐）</li><li>事件监听 copy、paste、cut</li></ul><span id="more"></span><h4 id="1、Docement-execCommand"><a href="#1、Docement-execCommand" class="headerlink" title="1、Docement.execCommand"></a>1、Docement.execCommand</h4><p>它支持复制、粘贴、剪切三个操作</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">document</span>.<span class="title function_">execCommand</span>(<span class="string">&#x27;copy&#x27;</span>)（复制）</span><br><span class="line"><span class="variable language_">document</span>.<span class="title function_">execCommand</span>(<span class="string">&#x27;cut&#x27;</span>)（剪切）</span><br><span class="line"><span class="variable language_">document</span>.<span class="title function_">execCommand</span>(<span class="string">&#x27;paste&#x27;</span>)（粘贴）</span><br></pre></td></tr></table></figure><p>通用页面布局，引用了layui</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">// 页面</span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;layui-form&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;layui-form-item&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">label</span> <span class="attr">class</span>=<span class="string">&quot;layui-form-label&quot;</span>&gt;</span>输入框<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;layui-input-block&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;title&quot;</span> <span class="attr">id</span>=<span class="string">&quot;my-input&quot;</span>   <span class="attr">placeholder</span>=<span class="string">&quot;请输入标题&quot;</span>  <span class="attr">class</span>=<span class="string">&quot;layui-input&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;layui-form-item&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">label</span> <span class="attr">class</span>=<span class="string">&quot;layui-form-label&quot;</span>&gt;</span>文本域<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;layui-input-block&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">textarea</span> <span class="attr">rows</span>=<span class="string">&quot;4&quot;</span> <span class="attr">cols</span>=<span class="string">&quot;3&quot;</span> <span class="attr">id</span>=<span class="string">&quot;my-textarea&quot;</span> <span class="attr">class</span>=<span class="string">&quot;layui-textarea&quot;</span>&gt;</span>默认值<span class="tag">&lt;/<span class="name">textarea</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;layui-form-item&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">label</span> <span class="attr">class</span>=<span class="string">&quot;layui-form-label&quot;</span>&gt;</span>操作<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;layui-input-block&quot;</span> <span class="attr">style</span>=<span class="string">&quot;display: flex;&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">&quot;layui-btn layui-btn-radius layui-btn-normal&quot;</span> <span class="attr">id</span>=<span class="string">&quot;copy&quot;</span>&gt;</span>复制<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">&quot;layui-btn layui-btn-radius layui-btn-normal&quot;</span> <span class="attr">id</span>=<span class="string">&quot;paste&quot;</span>&gt;</span>粘贴<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">&quot;layui-btn layui-btn-radius layui-btn-normal&quot;</span> <span class="attr">id</span>=<span class="string">&quot;cut&quot;</span>&gt;</span>剪切<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">&quot;layui-btn layui-btn-radius layui-btn-normal&quot;</span> <span class="attr">id</span>=<span class="string">&quot;copy2&quot;</span>&gt;</span>图文复制<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">&quot;layui-btn layui-btn-radius layui-btn-normal&quot;</span> <span class="attr">id</span>=<span class="string">&quot;read&quot;</span>&gt;</span>读取剪切板<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">&quot;layui-btn layui-btn-radius layui-btn-normal&quot;</span> <span class="attr">id</span>=<span class="string">&quot;selection&quot;</span>&gt;</span>获取选中内容<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p>操作示例：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 获取元素</span></span><br><span class="line"><span class="keyword">let</span> myInput = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;#my-input&#x27;</span>),</span><br><span class="line">    myTextarea = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;#my-textarea&#x27;</span>);</span><br><span class="line"></span><br><span class="line">    layui.<span class="title function_">use</span>([<span class="string">&#x27;form&#x27;</span>], <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="keyword">let</span> &#123;form,<span class="attr">jquery</span>: $&#125; = layui;</span><br><span class="line">        form.<span class="title function_">render</span>()</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 复制</span></span><br><span class="line">            $(<span class="string">&#x27;#copy&#x27;</span>).<span class="title function_">on</span>(<span class="string">&#x27;click&#x27;</span>, <span class="keyword">function</span>(<span class="params">e</span>) &#123;</span><br><span class="line">                <span class="comment">// 让 文本域 文本选中</span></span><br><span class="line">                myTextarea.<span class="title function_">select</span>();</span><br><span class="line">                <span class="comment">// 执行复制，会触发 copy 事件监听</span></span><br><span class="line">                <span class="variable language_">document</span>.<span class="title function_">execCommand</span>(<span class="string">&#x27;copy&#x27;</span>);</span><br><span class="line">            &#125;)</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 剪切 ，会触发 cut 事件监听</span></span><br><span class="line">            $(<span class="string">&#x27;#cut&#x27;</span>).<span class="title function_">on</span>(<span class="string">&#x27;click&#x27;</span>, <span class="keyword">function</span>(<span class="params">e</span>) &#123;</span><br><span class="line">                myTextarea.<span class="title function_">select</span>();</span><br><span class="line">                <span class="variable language_">document</span>.<span class="title function_">execCommand</span>(<span class="string">&#x27;cut&#x27;</span>);</span><br><span class="line">            &#125;)</span><br><span class="line">        </span><br><span class="line">            <span class="comment">// 粘贴 chrome不生效，需要用户授权 https 等未知条件限制【未查清楚】</span></span><br><span class="line">            $(<span class="string">&#x27;#paste&#x27;</span>).<span class="title function_">on</span>(<span class="string">&#x27;click&#x27;</span>, <span class="keyword">function</span>(<span class="params">e</span>) &#123;</span><br><span class="line">                myInput.<span class="title function_">focus</span>()</span><br><span class="line">                <span class="variable language_">document</span>.<span class="title function_">execCommand</span>(<span class="string">&#x27;paste&#x27;</span>);</span><br><span class="line">            &#125;)</span><br><span class="line">    </span><br><span class="line">    &#125;)</span><br></pre></td></tr></table></figure><blockquote><p>它只能将选中的内容复制到剪贴板，无法向剪贴板任意写入内容。</p><p>其次，它是同步操作，如果复制/粘贴大量数据，页面会出现卡顿。有些浏览器还会跳出提示框，要求用户许可，这时在用户做出选择前，页面会失去响应。</p><p>为了解决这些问题，浏览器厂商提出了异步的 Clipboard API</p></blockquote><h4 id="2、异步-Clipboard-API"><a href="#2、异步-Clipboard-API" class="headerlink" title="2、异步 Clipboard API"></a>2、异步 Clipboard API</h4><blockquote><p>Clipboard API 是下一代的剪贴板操作方法，比传统的<code>document.execCommand()</code>方法更强大、更合理。</p><p>它的所有操作都是异步的，返回 Promise 对象，不会造成页面卡顿。而且，它可以将任意内容（比如图片）放入剪贴板。</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//Clipboard 对象提供了四个方法</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 此两种方法仅持支文本操作</span></span><br><span class="line">navigator.<span class="property">clipboard</span>.<span class="property">readText</span></span><br><span class="line">navigator.<span class="property">clipboard</span>.<span class="property">writeText</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 可用于将任意数据写入剪贴板，可以是文本数据，也可以是二进制数据</span></span><br><span class="line">navigator.<span class="property">clipboard</span>.<span class="property">read</span></span><br><span class="line">navigator.<span class="property">clipboard</span>.<span class="property">write</span></span><br></pre></td></tr></table></figure><p>操作示例：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> clipboardObj = navigator.<span class="property">clipboard</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 复制，但不会触发 copy 事件</span></span><br><span class="line">$(<span class="string">&#x27;#copy&#x27;</span>).<span class="title function_">on</span>(<span class="string">&#x27;click&#x27;</span>, <span class="keyword">function</span>(<span class="params">e</span>) &#123;</span><br><span class="line">    clipboardObj.<span class="title function_">writeText</span>($(myTextarea).<span class="title function_">val</span>())</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 剪切</span></span><br><span class="line">$(<span class="string">&#x27;#cut&#x27;</span>).<span class="title function_">on</span>(<span class="string">&#x27;click&#x27;</span>, <span class="keyword">function</span>(<span class="params">e</span>) &#123;</span><br><span class="line">    clipboardObj.<span class="title function_">writeText</span>($(myTextarea).<span class="title function_">val</span>())</span><br><span class="line">    $(myTextarea).<span class="title function_">val</span>(<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 粘贴</span></span><br><span class="line">$(<span class="string">&#x27;#paste&#x27;</span>).<span class="title function_">on</span>(<span class="string">&#x27;click&#x27;</span>, <span class="keyword">async</span> <span class="keyword">function</span>(<span class="params">e</span>) &#123;</span><br><span class="line">    <span class="keyword">const</span> text = <span class="keyword">await</span> clipboardObj.<span class="title function_">readText</span>();</span><br><span class="line">    $(myInput).<span class="title function_">val</span>(text)</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><blockquote><p>直接在代码中执行剪切板操作可能会报错，建议放在事件监听的回调函数中。</p><p>需要注意的是，脚本读取的总是当前页面的剪贴板。这带来的一个问题是，如果把相关的代码粘贴到开发者工具中直接运行，可能会报错，因为这时的当前页面是开发者工具的窗口，而不是网页页面。</p></blockquote><h4 id="3、监听-剪切板操作事件"><a href="#3、监听-剪切板操作事件" class="headerlink" title="3、监听 剪切板操作事件"></a>3、监听 剪切板操作事件</h4><blockquote><p>通过监听事件可以阻止用户的 默认操作， 实现 禁止 复制粘贴等功能</p></blockquote><p>操作示例：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"># 禁止粘贴</span><br><span class="line"><span class="variable language_">document</span>.<span class="title function_">addEventListener</span>(<span class="string">&#x27;paste&#x27;</span>, <span class="keyword">function</span>(<span class="params">e</span>) &#123;</span><br><span class="line">    e.<span class="title function_">preventDefault</span>()</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"># 将复制的文本 字母转大写 再 存入剪切板</span><br><span class="line"><span class="variable language_">document</span>.<span class="title function_">addEventListener</span>(<span class="string">&#x27;copy&#x27;</span>,  <span class="keyword">function</span>(<span class="params">e</span>) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;copy:&#x27;</span>, e.<span class="property">clipboardData</span>);</span><br><span class="line">    <span class="comment">// 获取选中的文本，图片等其他资源获取不了</span></span><br><span class="line">    <span class="keyword">let</span> selection = <span class="variable language_">document</span>.<span class="title function_">getSelection</span>();</span><br><span class="line">    <span class="comment">// 文本内容转大写</span></span><br><span class="line">    event.<span class="property">clipboardData</span>.<span class="title function_">setData</span>(<span class="string">&#x27;text/plain&#x27;</span>, selection.<span class="title function_">toString</span>().<span class="title function_">toUpperCase</span>());</span><br><span class="line">    event.<span class="title function_">preventDefault</span>();</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"># 同时写入 文本和图片。此时在表单中粘贴为文本，在微信中粘贴为图片</span><br><span class="line">$(<span class="string">&#x27;#copy2&#x27;</span>).<span class="title function_">on</span>(<span class="string">&#x27;click&#x27;</span>, <span class="keyword">async</span> <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">const</span> image = <span class="keyword">await</span> <span class="title function_">fetch</span>(<span class="string">&#x27;../images/b2.png&#x27;</span>).<span class="title function_">then</span>(<span class="function"><span class="params">res</span>=&gt;</span> res.<span class="title function_">blob</span>())</span><br><span class="line">    <span class="keyword">const</span> text = <span class="keyword">new</span> <span class="title class_">Blob</span>([<span class="string">&#x27;Cute sleeping kitten&#x27;</span>], &#123;<span class="attr">type</span>: <span class="string">&#x27;text/plain&#x27;</span>&#125;);</span><br><span class="line">    <span class="keyword">const</span> item = <span class="keyword">new</span> <span class="title class_">ClipboardItem</span>(&#123;</span><br><span class="line">        <span class="string">&#x27;text/plain&#x27;</span>: text,</span><br><span class="line">        <span class="string">&#x27;image/png&#x27;</span>: image <span class="comment">// image 必须是 Blob 对象</span></span><br><span class="line">    &#125;);</span><br><span class="line">    <span class="keyword">await</span> clipboardObj.<span class="title function_">write</span>([item]);</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"># 读取剪切板中的数据</span><br><span class="line">$(<span class="string">&#x27;#read&#x27;</span>).<span class="title function_">on</span>(<span class="string">&#x27;click&#x27;</span>, <span class="keyword">async</span> <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="comment">// 检测 浏览器是否支持 剪切板</span></span><br><span class="line">    <span class="keyword">let</span> flag = <span class="keyword">await</span> navigator.<span class="property">permissions</span>.<span class="title function_">query</span>(&#123;<span class="attr">name</span>: <span class="string">&quot;clipboard-read&quot;</span>&#125;)</span><br><span class="line">    <span class="keyword">if</span> (flag.<span class="property">state</span> == <span class="string">&quot;granted&quot;</span> || flag.<span class="property">state</span> == <span class="string">&quot;prompt&quot;</span>) &#123;</span><br><span class="line">        <span class="keyword">let</span> clipboardItems = <span class="keyword">await</span> clipboardObj.<span class="title function_">read</span>()</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(clipboardItems);</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">const</span> clipboardItem <span class="keyword">of</span> clipboardItems) &#123;</span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">const</span> type <span class="keyword">of</span> clipboardItem.<span class="property">types</span>) &#123;</span><br><span class="line">                    <span class="keyword">const</span> blob = <span class="keyword">await</span> clipboardItem.<span class="title function_">getType</span>(type);</span><br><span class="line">                    <span class="comment">// 此处 blob 为 二进制对象</span></span><br><span class="line">                    <span class="variable language_">console</span>.<span class="title function_">log</span>(type, <span class="variable constant_">URL</span>.<span class="title function_">createObjectURL</span>(blob), blob);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (err) &#123;</span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">error</span>(err.<span class="property">name</span>, err.<span class="property">message</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><blockquote><p>本文借鉴了 阮一峰大佬的 <a href="https://www.ruanyifeng.com/blog/2021/01/clipboard-api.html">帖子</a></p></blockquote>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;浏览器允许 JavaScript 脚本读写剪贴板，自动复制或粘贴内容。主要是用来操作文本、图片&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;有三种方式可操作剪切板&quot;&gt;&lt;a href=&quot;#有三种方式可操作剪切板&quot; class=&quot;headerlink&quot; title=&quot;有三种方式可操作剪切板&quot;&gt;&lt;/a&gt;有三种方式可操作剪切板&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Document.execCommand() 【此API已从W3C标准中删除】&lt;/li&gt;
&lt;li&gt;Clipboard API （推荐）&lt;/li&gt;
&lt;li&gt;事件监听 copy、paste、cut&lt;/li&gt;
&lt;/ul&gt;</summary>
    
    
    
    <category term="htmlcss" scheme="https://wangyf1024.gitee.io/categories/htmlcss/"/>
    
    
  </entry>
  
  <entry>
    <title>图片懒加载</title>
    <link href="https://wangyf1024.gitee.io/2022/06/28/programming/htmlcss/%E5%9B%BE%E7%89%87%E6%87%92%E5%8A%A0%E8%BD%BD/"/>
    <id>https://wangyf1024.gitee.io/2022/06/28/programming/htmlcss/%E5%9B%BE%E7%89%87%E6%87%92%E5%8A%A0%E8%BD%BD/</id>
    <published>2022-06-28T07:04:10.000Z</published>
    <updated>2022-06-28T07:50:27.949Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>图片懒加载： 在页面长列表展示时（就说页面很长出现滚动条那种🤡），在页面不可见区域的图片资源默认不加载。当图片元素滚动到可视区域时再加载图片资源的这么个效果</p></blockquote><h3 id="实现方式："><a href="#实现方式：" class="headerlink" title="实现方式："></a>实现方式：</h3><ol><li><p>位置计算 + 滚动事件 (Scroll) + DataSet API</p><p> 通过对元素的位置属性 clientTop<code>，</code>offsetTop<code>，</code>clientHeight<code>以及</code>scrollTop等 再加上监听滚动条的事件来判断图片资源是否出现在可视区域</p></li><li><p>getBoundingClientRect API + Scroll with Throttle + DataSet API</p> <span id="more"></span><p> <strong><code>Element.getBoundingClientRect()</code> 方法返回元素的大小及其相对于视口的位置。</strong>此方式其实与第一种类似，只是借助了 <strong>getBoundingClientRect</strong> 方法 获取元素位置的值，简化了操作</p><p> 下面看一个示例：</p> <figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br></pre></td><td class="code"><pre><span class="line">// html 部分</span><br><span class="line"></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">      * &#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">margin</span>: <span class="number">0px</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">padding</span>: <span class="number">0px</span>;</span></span><br><span class="line"><span class="language-css">      &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">      <span class="selector-tag">body</span> &#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">margin</span>: <span class="number">0px</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">padding</span>: <span class="number">0px</span>;</span></span><br><span class="line"><span class="language-css">      &#125;</span></span><br><span class="line"><span class="language-css">      <span class="selector-class">.demo</span> &#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">box-sizing</span>: border-box;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">width</span>: <span class="number">100%</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">height</span>: <span class="number">100%</span>;</span></span><br><span class="line"><span class="language-css">      &#125;</span></span><br><span class="line"><span class="language-css">      <span class="selector-class">.imgbox</span> &#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">width</span>: <span class="number">100%</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">height</span>: fit-content;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">border</span>: <span class="number">1px</span> solid skyblue;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">box-sizing</span>: border-box;</span></span><br><span class="line"><span class="language-css">      &#125;</span></span><br><span class="line"><span class="language-css">      <span class="selector-tag">img</span> &#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">display</span>: block;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">width</span>: <span class="number">100%</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">height</span>: fit-content;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">min-height</span>: <span class="number">250px</span>;</span></span><br><span class="line"><span class="language-css">      &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;demo&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;imgbox&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">img</span> <span class="attr">data-src</span>=<span class="string">&quot;https://cdn.pixabay.com/photo/2021/08/24/15/38/sand-6570980_960_720.jpg&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;1&quot;</span> /&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;imgbox&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">img</span> <span class="attr">data-src</span>=<span class="string">&quot;https://cdn.pixabay.com/photo/2013/02/21/19/06/drink-84533_960_720.jpg&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;2&quot;</span>/&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;imgbox&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">img</span> <span class="attr">data-src</span>=<span class="string">&quot;https://cdn.pixabay.com/photo/2013/07/18/20/26/sea-164989_960_720.jpg&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;3&quot;</span>/&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;imgbox&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">img</span> <span class="attr">data-src</span>=<span class="string">&quot;https://cdn.pixabay.com/photo/2015/04/23/22/00/tree-736885_960_720.jpg&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;4&quot;</span>/&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;imgbox&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">img</span> <span class="attr">data-src</span>=<span class="string">&quot;https://cdn.pixabay.com/photo/2017/03/26/21/54/yoga-2176668_960_720.jpg&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;5&quot;</span>/&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;imgbox&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">img</span> <span class="attr">data-src</span>=<span class="string">&quot;https://cdn.pixabay.com/photo/2021/08/24/15/38/sand-6570980_960_720.jpg&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;1&quot;</span> /&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;imgbox&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">img</span> <span class="attr">data-src</span>=<span class="string">&quot;https://cdn.pixabay.com/photo/2013/02/21/19/06/drink-84533_960_720.jpg&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;2&quot;</span>/&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;imgbox&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">img</span> <span class="attr">data-src</span>=<span class="string">&quot;https://cdn.pixabay.com/photo/2013/07/18/20/26/sea-164989_960_720.jpg&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;3&quot;</span>/&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;imgbox&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">img</span> <span class="attr">data-src</span>=<span class="string">&quot;https://cdn.pixabay.com/photo/2015/04/23/22/00/tree-736885_960_720.jpg&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;4&quot;</span>/&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;imgbox&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">img</span> <span class="attr">data-src</span>=<span class="string">&quot;https://cdn.pixabay.com/photo/2017/03/26/21/54/yoga-2176668_960_720.jpg&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;5&quot;</span>/&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;imgbox&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">img</span> <span class="attr">data-src</span>=<span class="string">&quot;https://cdn.pixabay.com/photo/2021/08/24/15/38/sand-6570980_960_720.jpg&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;1&quot;</span> /&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;imgbox&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">img</span> <span class="attr">data-src</span>=<span class="string">&quot;https://cdn.pixabay.com/photo/2013/02/21/19/06/drink-84533_960_720.jpg&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;2&quot;</span>/&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;imgbox&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">img</span> <span class="attr">data-src</span>=<span class="string">&quot;https://cdn.pixabay.com/photo/2013/07/18/20/26/sea-164989_960_720.jpg&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;3&quot;</span>/&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;imgbox&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">img</span> <span class="attr">data-src</span>=<span class="string">&quot;https://cdn.pixabay.com/photo/2015/04/23/22/00/tree-736885_960_720.jpg&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;4&quot;</span>/&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;imgbox&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">img</span> <span class="attr">data-src</span>=<span class="string">&quot;https://cdn.pixabay.com/photo/2017/03/26/21/54/yoga-2176668_960_720.jpg&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;5&quot;</span>/&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure> <figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// js 部分</span></span><br><span class="line"></span><br><span class="line">  &lt;script&gt;</span><br><span class="line">    <span class="keyword">const</span> demo = <span class="variable language_">document</span>.<span class="title function_">querySelectorAll</span>(<span class="string">&quot;img&quot;</span>);</span><br><span class="line">    <span class="keyword">function</span> <span class="title function_">lazy</span>(<span class="params"></span>) &#123;</span><br><span class="line">      <span class="comment">// 遍历所有图片资源</span></span><br><span class="line">      <span class="keyword">for</span> (<span class="keyword">let</span> elem <span class="keyword">of</span> demo) &#123;</span><br><span class="line">        <span class="comment">// 判断是否出现在可视区域</span></span><br><span class="line">        <span class="comment">// 图片距离可视区域顶部距离 &lt; 可视区域高度（文档节点可视高度）</span></span><br><span class="line">        <span class="keyword">if</span> ( elem.<span class="title function_">getBoundingClientRect</span>().<span class="property">top</span> &lt; <span class="variable language_">document</span>.<span class="property">documentElement</span>.<span class="property">clientHeight</span> ) &#123;</span><br><span class="line">          <span class="comment">// 没有 src 属性的图片 此时加载</span></span><br><span class="line">          <span class="keyword">if</span> (elem.<span class="property">dataset</span>.<span class="property">src</span> &amp;&amp; elem.<span class="property">src</span> == <span class="string">&quot;&quot;</span>) &#123;</span><br><span class="line">            elem.<span class="property">src</span> = elem.<span class="property">dataset</span>.<span class="property">src</span>;</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="comment">// 一个节流函数</span></span><br><span class="line">    <span class="keyword">function</span> <span class="title function_">throttle</span>(<span class="params">t, fn</span>) &#123;</span><br><span class="line">      <span class="keyword">let</span> time;</span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (!time) &#123;</span><br><span class="line">          time = <span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">            time = <span class="literal">null</span>;</span><br><span class="line">            <span class="title function_">fn</span>();</span><br><span class="line">          &#125;, t);</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="title function_">lazy</span>();</span><br><span class="line">    <span class="variable language_">window</span>.<span class="title function_">addEventListener</span>(<span class="string">&quot;scroll&quot;</span>, <span class="title function_">throttle</span>(<span class="number">500</span>, lazy));</span><br><span class="line">  &lt;/script&gt;</span><br></pre></td></tr></table></figure></li><li><p>IntersectionObserver API + DataSet API</p><p> <strong><code>IntersectionObserver</code> API，一个能够监听元素是否到了当前视口的事件，一步到位！</strong> 此API 大大简化了上述一系列操作 监听滚动变化与判断是否出现在可视区域一把梭😊</p><p> 示例：</p> <figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">    <span class="keyword">const</span> observer = <span class="keyword">new</span> <span class="title class_">IntersectionObserver</span>(<span class="function">(<span class="params">changes</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="comment">// changes: 目标元素集合</span></span><br><span class="line">        changes.<span class="title function_">forEach</span>(<span class="function">(<span class="params">change</span>) =&gt;</span> &#123;</span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">log</span>(change.<span class="property">isIntersecting</span>);</span><br><span class="line">            <span class="comment">// intersectionRatio</span></span><br><span class="line">            <span class="keyword">if</span> (change.<span class="property">isIntersecting</span>) &#123;</span><br><span class="line">                <span class="keyword">const</span> img = change.<span class="property">target</span>;</span><br><span class="line">                img.<span class="property">src</span> = img.<span class="property">dataset</span>.<span class="property">src</span>;</span><br><span class="line">                <span class="comment">// 图片加载后注销监听</span></span><br><span class="line">                observer.<span class="title function_">unobserve</span>(img);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;, &#123;</span><br><span class="line">        <span class="attr">threshold</span>: <span class="number">0.8</span> <span class="comment">// 元素百分之多少暴露在可视区域时才触发</span></span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// </span></span><br><span class="line">    <span class="variable language_">document</span>.<span class="title function_">querySelectorAll</span>(<span class="string">&#x27;img&#x27;</span>).<span class="title function_">forEach</span>(<span class="function"><span class="params">img</span>=&gt;</span> &#123;</span><br><span class="line">        observer.<span class="title function_">observe</span>(img);</span><br><span class="line">    &#125;)</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure></li><li><p>LazyLoading 属性</p><p> 给需要懒加载的图片添加 loading=”lazy” ，浏览器自己做懒加载这件事。不过目前浏览器兼容性不太好</p> <figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;shanyue.jpg&quot;</span> <span class="attr">loading</span>=<span class="string">&quot;lazy&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure></li></ol><blockquote><p>结语：总的来看方案三最好使了，不过方案二兼容性比方案三好</p></blockquote>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;图片懒加载： 在页面长列表展示时（就说页面很长出现滚动条那种🤡），在页面不可见区域的图片资源默认不加载。当图片元素滚动到可视区域时再加载图片资源的这么个效果&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;实现方式：&quot;&gt;&lt;a href=&quot;#实现方式：&quot; class=&quot;headerlink&quot; title=&quot;实现方式：&quot;&gt;&lt;/a&gt;实现方式：&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;位置计算 + 滚动事件 (Scroll) + DataSet API&lt;/p&gt;
&lt;p&gt; 通过对元素的位置属性 clientTop&lt;code&gt;，&lt;/code&gt;offsetTop&lt;code&gt;，&lt;/code&gt;clientHeight&lt;code&gt;以及&lt;/code&gt;scrollTop等 再加上监听滚动条的事件来判断图片资源是否出现在可视区域&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;getBoundingClientRect API + Scroll with Throttle + DataSet API&lt;/p&gt;</summary>
    
    
    
    <category term="htmlcss" scheme="https://wangyf1024.gitee.io/categories/htmlcss/"/>
    
    
  </entry>
  
  <entry>
    <title>在用户离开页面时可靠地发送 HTTP 请求</title>
    <link href="https://wangyf1024.gitee.io/2022/06/24/programming/javascript/%E7%94%A8%E6%88%B7%E7%A6%BB%E5%BC%80%E9%A1%B5%E9%9D%A2%E6%97%B6%E5%8F%91%E9%80%81%E8%AF%B7%E6%B1%82/"/>
    <id>https://wangyf1024.gitee.io/2022/06/24/programming/javascript/%E7%94%A8%E6%88%B7%E7%A6%BB%E5%BC%80%E9%A1%B5%E9%9D%A2%E6%97%B6%E5%8F%91%E9%80%81%E8%AF%B7%E6%B1%82/</id>
    <published>2022-06-24T01:23:10.000Z</published>
    <updated>2022-06-25T07:46:54.213Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>在某些情况下，我们可能有这样的需求，在跳转或离开当前页面时发送一个HTTP请求。如何确保请求能如我们意料的那样发送出去</p></blockquote><p>eg: 在点击a标签跳转时，发送一个请求.</p><p>下面两种方式咋一看是同步的，但实际上请求却没有发送成功。浏览器测试时切换3G网络模式即可看到 network 信息</p><span id="more"></span><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 方式 1</span></span><br><span class="line">&lt;a href=<span class="string">&quot;/some-other-page&quot;</span> id=<span class="string">&quot;link&quot;</span>&gt;<span class="title class_">Go</span> to <span class="title class_">Page</span>&lt;/a&gt;</span><br><span class="line"></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"><span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;link&#x27;</span>).<span class="title function_">addEventListener</span>(<span class="string">&#x27;click&#x27;</span>, <span class="function">(<span class="params">e</span>) =&gt;</span> &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  <span class="title function_">fetch</span>(<span class="string">&quot;/log&quot;</span>, &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="attr">method</span>: <span class="string">&quot;POST&quot;</span>,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="attr">headers</span>: &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="string">&quot;Content-Type&quot;</span>: <span class="string">&quot;application/json&quot;</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    &#125;, </span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="attr">body</span>: <span class="title class_">JSON</span>.<span class="title function_">stringify</span>(&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="attr">some</span>: <span class="string">&quot;data&quot;</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    &#125;)</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  &#125;);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">&#125;);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 方式 2</span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"><span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;link&#x27;</span>).<span class="title function_">addEventListener</span>(<span class="string">&#x27;click&#x27;</span>, <span class="function">(<span class="params">e</span>) =&gt;</span> &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">+ e.<span class="title function_">preventDefault</span>();</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  <span class="comment">// Request is queued, but cancelled as soon as navigation occurs. </span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  <span class="title function_">fetch</span>(<span class="string">&quot;/log&quot;</span>, &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="attr">method</span>: <span class="string">&quot;POST&quot;</span>,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="attr">headers</span>: &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="string">&quot;Content-Type&quot;</span>: <span class="string">&quot;application/json&quot;</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    &#125;, </span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="attr">body</span>: <span class="title class_">JSON</span>.<span class="title function_">stringify</span>(&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="attr">some</span>: <span class="string">&#x27;data&#x27;</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    &#125;),</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  &#125;);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">+ <span class="variable language_">window</span>.<span class="property">location</span> = e.<span class="property">target</span>.<span class="property">href</span>;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">&#125;);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure><h3 id="为什么没有请求成功？"><a href="#为什么没有请求成功？" class="headerlink" title="为什么没有请求成功？"></a>为什么没有请求成功？</h3><blockquote><p><a href="https://developers.google.com/web/updates/2018/07/page-lifecycle-api#states">以下是 Google</a>对特定生命周期状态的总结：</p><p>一旦页面开始被浏览器卸载并从内存中清除，页面就处于终止状态。在这种状态下没有<a href="https://html.spec.whatwg.org/multipage/webappapis.html#queue-a-task">新的任务</a>可以启动，并且正在进行的任务如果运行时间过长可能会被杀死。</p></blockquote><p>简而言之，浏览器的设计假设当一个页面被关闭时，没有必要继续处理它排队的任何后台进程。</p><h3 id="解决的方案"><a href="#解决的方案" class="headerlink" title="解决的方案"></a>解决的方案</h3><ol><li><p><strong>async/await</strong></p><p> 可以使用处理异步的方式，但是这种方式会损害用户体验，如果接口请求时间过长的话</p> <figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;link&#x27;</span>).<span class="title function_">addEventListener</span>(<span class="string">&#x27;click&#x27;</span>, <span class="keyword">async</span> (e) =&gt; &#123;</span><br><span class="line">  e.<span class="title function_">preventDefault</span>();</span><br><span class="line"></span><br><span class="line">  <span class="comment">// Wait for response to come back...</span></span><br><span class="line">  <span class="keyword">await</span> <span class="title function_">fetch</span>(<span class="string">&quot;/log&quot;</span>, &#123;</span><br><span class="line">    <span class="attr">method</span>: <span class="string">&quot;POST&quot;</span>,</span><br><span class="line">    <span class="attr">headers</span>: &#123;</span><br><span class="line">      <span class="string">&quot;Content-Type&quot;</span>: <span class="string">&quot;application/json&quot;</span></span><br><span class="line">    &#125;, </span><br><span class="line">    <span class="attr">body</span>: <span class="title class_">JSON</span>.<span class="title function_">stringify</span>(&#123;</span><br><span class="line">      <span class="attr">some</span>: <span class="string">&#x27;data&#x27;</span></span><br><span class="line">    &#125;),</span><br><span class="line">  &#125;);</span><br><span class="line"></span><br><span class="line">  <span class="comment">// ...and THEN navigate away.</span></span><br><span class="line">   <span class="variable language_">window</span>.<span class="property">location</span> = e.<span class="property">target</span>.<span class="property">href</span>;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></li><li><p><strong>使用 Fetch 的 keepalive</strong></p><p> keepalive 会让请求保持打开状态</p> <figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&lt;a href=<span class="string">&quot;/some-other-page&quot;</span> id=<span class="string">&quot;link&quot;</span>&gt;<span class="title class_">Go</span> to <span class="title class_">Page</span>&lt;/a&gt;</span><br><span class="line"></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;link&#x27;</span>).<span class="title function_">addEventListener</span>(<span class="string">&#x27;click&#x27;</span>, <span class="function">(<span class="params">e</span>) =&gt;</span> &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="title function_">fetch</span>(<span class="string">&quot;/log&quot;</span>, &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="attr">method</span>: <span class="string">&quot;POST&quot;</span>,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="attr">headers</span>: &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="string">&quot;Content-Type&quot;</span>: <span class="string">&quot;application/json&quot;</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      &#125;, </span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="attr">body</span>: <span class="title class_">JSON</span>.<span class="title function_">stringify</span>(&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="attr">some</span>: <span class="string">&quot;data&quot;</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      &#125;), </span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">      <span class="attr">keepalive</span>: <span class="literal">true</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    &#125;);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  &#125;);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure></li><li><h4 id="使用Navigator-sendBeacon"><a href="#使用Navigator-sendBeacon" class="headerlink" title="使用Navigator.sendBeacon()"></a><strong>使用<code>Navigator.sendBeacon()</code></strong></h4><blockquote><p>该<code>Navigator.sendBeacon()</code>函数专门用于发送单向请求</p><p>简单示例：</p><p>navigator.sendBeacon(‘/log’, JSON.stringify({  some: “data” }));</p></blockquote> <figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;a href=<span class="string">&quot;/some-other-page&quot;</span> id=<span class="string">&quot;link&quot;</span>&gt;<span class="title class_">Go</span> to <span class="title class_">Page</span>&lt;/a&gt;</span><br><span class="line"></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;link&#x27;</span>).<span class="title function_">addEventListener</span>(<span class="string">&#x27;click&#x27;</span>, <span class="function">(<span class="params">e</span>) =&gt;</span> &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="comment">// 此方法不支持 修改 contentType: application/json. 采用下面方式</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="keyword">const</span> blob = <span class="keyword">new</span> <span class="title class_">Blob</span>([<span class="title class_">JSON</span>.<span class="title function_">stringify</span>(&#123; <span class="attr">some</span>: <span class="string">&quot;data&quot;</span> &#125;)], &#123; <span class="attr">type</span>: <span class="string">&#x27;application/json; charset=UTF-8&#x27;</span> &#125;);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    navigator.<span class="title function_">sendBeacon</span>(<span class="string">&#x27;/log&#x27;</span>, blob));</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  &#125;);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure><p> 请求以 Lowest 最低优先级方式 发送。换句话说，<code>sendBeacon()</code>确保它的请求不会妨碍那些对您的应用程序和用户体验真正重要的请求。</p></li><li><p><strong>ping 属性</strong></p><blockquote><p>现在越来越多的 浏览器 支持 <strong>ping</strong> 属性。当附加链接时，会触发一个 <strong>post</strong>  请求</p></blockquote><p> 此方式 传参不方便， 火狐默认不打开此功能</p> <figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;a href=<span class="string">&quot;http://localhost:3000/other&quot;</span> ping=<span class="string">&quot;http://localhost:3000/log&quot;</span>&gt;</span><br><span class="line">  <span class="title class_">Go</span> to <span class="title class_">Other</span> <span class="title class_">Page</span></span><br><span class="line">&lt;/a&gt;</span><br></pre></td></tr></table></figure></li></ol>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;在某些情况下，我们可能有这样的需求，在跳转或离开当前页面时发送一个HTTP请求。如何确保请求能如我们意料的那样发送出去&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;eg: 在点击a标签跳转时，发送一个请求.&lt;/p&gt;
&lt;p&gt;下面两种方式咋一看是同步的，但实际上请求却没有发送成功。浏览器测试时切换3G网络模式即可看到 network 信息&lt;/p&gt;</summary>
    
    
    
    <category term="js" scheme="https://wangyf1024.gitee.io/categories/js/"/>
    
    
    <category term="js" scheme="https://wangyf1024.gitee.io/tags/js/"/>
    
  </entry>
  
  <entry>
    <title>ESLint + Prettier规范项目代码</title>
    <link href="https://wangyf1024.gitee.io/2022/06/23/programming/webpack/eslint_prettier/"/>
    <id>https://wangyf1024.gitee.io/2022/06/23/programming/webpack/eslint_prettier/</id>
    <published>2022-06-23T10:23:10.000Z</published>
    <updated>2022-06-25T08:27:15.546Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>为了项目代码风格统一，但又不会使人难受。自动化检测格式化代码方案</p></blockquote><ul><li><p>Prettier</p><blockquote><p>一个流行的代码格式化工具的名称,它能够解析代码,使用你自己设定的规则来重新打印出格式规范的代码。</p></blockquote></li><li><p>Eslint</p></li></ul><blockquote><p>ESLint是一个用来识别 ECMAScript 并且按照规则给出报告的代码检测工具，使用它可以避免低级错误和统一代码的风格。</p></blockquote><span id="more"></span><ol><li><p>安装依赖</p><p> 都是开发依赖</p> <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">npm install eslint prettier --save-dev</span><br><span class="line"></span><br><span class="line">npm install eslint-config-prettier eslint-plugin-prettier --save-dev</span><br></pre></td></tr></table></figure></li><li><p>vscode 插件安装</p><blockquote><p>安装 vscode 插件 <a href="https://link.juejin.cn/?target=https://marketplace.visualstudio.com/items?itemName=dbaeumer.vscode-eslint">ESLint</a> 和 <a href="https://link.juejin.cn/?target=https://marketplace.visualstudio.com/items?itemName=esbenp.prettier-vscode">Prettier - Code formatter</a></p></blockquote><p> 需要每次保存时就自动格式化代码，添加以下配置</p><ul><li><p>项目下创建 .vscode/settings.json 配置 (也可以配置到全局)</p></li><li><p>配置每次报错自动ESLint检查规则并格式化</p>  <figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line"> <span class="string">&quot;editor.codeActionsOnSave&quot;</span>: &#123;</span><br><span class="line">   <span class="string">&quot;source.fixAll.eslint&quot;</span>: <span class="literal">true</span></span><br><span class="line"> &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul></li><li><p>添加配置文件</p><ul><li><p>添加配置文件 .eslintrc.js</p>  <figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// .eslintrc.js</span></span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = &#123;</span><br><span class="line">  <span class="attr">root</span>: <span class="literal">true</span>, </span><br><span class="line">  <span class="attr">plugins</span>: [<span class="string">&#x27;prettier&#x27;</span>],  <span class="comment">// prettier 一定要是最后一个，才能确保覆盖</span></span><br><span class="line">  <span class="attr">rules</span>: &#123;</span><br><span class="line">    <span class="string">&#x27;prettier/prettier&#x27;</span>: <span class="string">&#x27;error&#x27;</span>,</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">extends</span>: [<span class="string">&#x27;plugin:prettier/recommended&#x27;</span>],</span><br><span class="line">&#125;;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>  上边配置运行报错就用下边的</p>  <figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// .eslintrc.js</span></span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = &#123;</span><br><span class="line">  <span class="attr">plugins</span>: [<span class="string">&#x27;prettier&#x27;</span>],</span><br><span class="line">  <span class="attr">parser</span>: <span class="string">&quot;vue-eslint-parser&quot;</span>,</span><br><span class="line">  <span class="attr">parserOptions</span>: &#123;</span><br><span class="line">    <span class="attr">sourceType</span>: <span class="string">&#x27;module&#x27;</span>,</span><br><span class="line">    <span class="attr">ecmaVersion</span>: <span class="number">2020</span>,</span><br><span class="line">    <span class="attr">parser</span>: <span class="string">&#x27;babel-eslint&#x27;</span>,</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">rules</span>: &#123;</span><br><span class="line">    <span class="string">&#x27;prettier/prettier&#x27;</span>: <span class="string">&#x27;error&#x27;</span>,</span><br><span class="line">    <span class="string">&quot;parser&quot;</span>: <span class="number">0</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">extends</span>: [<span class="string">&#x27;plugin:prettier/recommended&#x27;</span>],</span><br><span class="line">&#125;;</span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li><p>添加配置文件 .prettierrc.js</p>  <figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//.prettierrc.js</span></span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = &#123;</span><br><span class="line">  <span class="comment">// 一行最多 120 字符</span></span><br><span class="line">  <span class="attr">printWidth</span>: <span class="number">120</span>,</span><br><span class="line">  <span class="comment">// 使用 2 个空格缩进</span></span><br><span class="line">  <span class="attr">tabWidth</span>: <span class="number">2</span>,</span><br><span class="line">  <span class="comment">// 不使用 tab 缩进，而使用空格</span></span><br><span class="line">  <span class="attr">useTabs</span>: <span class="literal">false</span>,</span><br><span class="line">  <span class="comment">// 行尾需要有分号</span></span><br><span class="line">  <span class="attr">semi</span>: <span class="literal">true</span>,</span><br><span class="line">  <span class="comment">// 使用单引号代替双引号</span></span><br><span class="line">  <span class="attr">singleQuote</span>: <span class="literal">true</span>,</span><br><span class="line">  <span class="comment">// 对象的 key 仅在必要时用引号</span></span><br><span class="line">  <span class="attr">quoteProps</span>: <span class="string">&#x27;as-needed&#x27;</span>,</span><br><span class="line">  <span class="comment">// jsx 不使用单引号，而使用双引号</span></span><br><span class="line">  <span class="attr">jsxSingleQuote</span>: <span class="literal">false</span>,</span><br><span class="line">  <span class="comment">// 末尾使用逗号</span></span><br><span class="line">  <span class="attr">trailingComma</span>: <span class="string">&#x27;all&#x27;</span>,</span><br><span class="line">  <span class="comment">// 大括号内的首尾需要空格 &#123; foo: bar &#125;</span></span><br><span class="line">  <span class="attr">bracketSpacing</span>: <span class="literal">true</span>,</span><br><span class="line">  <span class="comment">// 箭头函数，只有一个参数的时候，也需要括号</span></span><br><span class="line">  <span class="attr">arrowParens</span>: <span class="string">&#x27;always&#x27;</span>,</span><br><span class="line">  <span class="comment">// 每个文件格式化的范围是文件的全部内容</span></span><br><span class="line">  <span class="attr">rangeStart</span>: <span class="number">0</span>,</span><br><span class="line">  <span class="attr">rangeEnd</span>: <span class="title class_">Infinity</span>,</span><br><span class="line">  <span class="comment">// 不需要写文件开头的 @prettier</span></span><br><span class="line">  <span class="attr">requirePragma</span>: <span class="literal">false</span>,</span><br><span class="line">  <span class="comment">// 不需要自动在文件开头插入 @prettier</span></span><br><span class="line">  <span class="attr">insertPragma</span>: <span class="literal">false</span>,</span><br><span class="line">  <span class="comment">// 使用默认的折行标准</span></span><br><span class="line">  <span class="attr">proseWrap</span>: <span class="string">&#x27;preserve&#x27;</span>,</span><br><span class="line">  <span class="comment">// 根据显示样式决定 html 要不要折行</span></span><br><span class="line">  <span class="attr">htmlWhitespaceSensitivity</span>: <span class="string">&#x27;css&#x27;</span>,</span><br><span class="line">  <span class="comment">// 换行符使用 lf</span></span><br><span class="line">  <span class="attr">endOfLine</span>: <span class="string">&#x27;lf&#x27;</span>,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br></pre></td></tr></table></figure></li></ul></li><li><p>添加命令</p><p> 在 package.json 中的 scripts 中添加</p> <figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot;lint&quot;</span>: <span class="string">&quot;eslint --ext .js,.vue src&quot;</span>,  <span class="comment">// 一键检查项目是否符合eslint规则</span></span><br><span class="line">    </span><br><span class="line"><span class="string">&quot;prettier&quot;</span>: <span class="string">&quot;prettier --write .&quot;</span>,     <span class="comment">// 一键格式化所有文件</span></span><br></pre></td></tr></table></figure></li><li><p>忽略文件</p><p> 某些文件不需要格式检查或代码格式化的，可以添加到配置</p><ul><li><p><strong>eslint忽略文件</strong>    <strong>.eslintignore</strong></p>  <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">/*.json</span><br><span class="line">/*.js</span><br><span class="line">dist</span><br><span class="line">node_modules</span><br></pre></td></tr></table></figure></li><li><p><strong>prettier忽略文件</strong>  <strong>.prettierignore</strong></p>  <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">node_modules</span><br><span class="line">.DS_Store</span><br><span class="line">dist</span><br><span class="line">dist-ssr</span><br><span class="line">*.local</span><br><span class="line">node_modules</span><br><span class="line">.DS_Store</span><br><span class="line">dist</span><br><span class="line">dist-ssr</span><br><span class="line">*.local</span><br></pre></td></tr></table></figure></li></ul></li></ol><blockquote><p>结语：</p><p>参考链接：</p><p><a href="https://juejin.cn/post/7095689037889372191">https://juejin.cn/post/7095689037889372191</a></p><p><a href="https://www.cnblogs.com/Yellow-ice/p/15127392.html">https://www.cnblogs.com/Yellow-ice/p/15127392.html</a></p></blockquote>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;为了项目代码风格统一，但又不会使人难受。自动化检测格式化代码方案&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Prettier&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;一个流行的代码格式化工具的名称,它能够解析代码,使用你自己设定的规则来重新打印出格式规范的代码。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Eslint&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;ESLint是一个用来识别 ECMAScript 并且按照规则给出报告的代码检测工具，使用它可以避免低级错误和统一代码的风格。&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="webpack" scheme="https://wangyf1024.gitee.io/categories/webpack/"/>
    
    
    <category term="eslint" scheme="https://wangyf1024.gitee.io/tags/eslint/"/>
    
  </entry>
  
  <entry>
    <title>SVN 密码管理</title>
    <link href="https://wangyf1024.gitee.io/2022/06/23/programming/npm/svn%E5%AF%86%E7%A0%81%E7%AE%A1%E7%90%86/"/>
    <id>https://wangyf1024.gitee.io/2022/06/23/programming/npm/svn%E5%AF%86%E7%A0%81%E7%AE%A1%E7%90%86/</id>
    <published>2022-06-23T07:23:10.000Z</published>
    <updated>2022-06-25T08:24:58.650Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>小海龟svn 没有账号密码管理，每次切换用户baidu告诉我说，清除用户信息🙄，</p><p>这也太烦了把。话说上次输入密码还是前一年的事，密码账户都忘了。于是乎想了个感觉还不错的💡</p></blockquote><span id="more"></span><ol><li><p>百度大法查询资料</p><p> Windows</p><p> ​    用户名密码储存位置：</p> <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">C:\Users\sxy\Application Data\Roaming\Subversion\auth</span><br></pre></td></tr></table></figure><ul><li><p>删除账户</p><p>  -右键出TortoiseSVN菜单，Settings-&gt;Saved Data-&gt;Authentication data,Clear</p><p>  -删除 auth 文件夹</p></li></ul><p> Linux</p><p> 用户名密码储存位置：</p> <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">~/.subversion/auth/svn.simple目录下</span><br></pre></td></tr></table></figure></li><li><p>备份auth文件的方式实现账户储存</p><p> 当要切换 svn 账户时，将auth 文件夹拷贝一份备注好信息，然后清除账户信息。</p><p> 下次操作时即可输入新的账户。</p><p> 切换账户直接重命名回来就可了</p></li></ol>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;小海龟svn 没有账号密码管理，每次切换用户baidu告诉我说，清除用户信息🙄，&lt;/p&gt;
&lt;p&gt;这也太烦了把。话说上次输入密码还是前一年的事，密码账户都忘了。于是乎想了个感觉还不错的💡&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="svn" scheme="https://wangyf1024.gitee.io/categories/svn/"/>
    
    
    <category term="svn" scheme="https://wangyf1024.gitee.io/tags/svn/"/>
    
  </entry>
  
</feed>
